//
// You may obtain a copy of the license at
// EBCDIC represents the 8-bit EBCDIC scheme, found in some mainframe
// 0x1c-0x1f match
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

package x

import (
	'\t'
)

// You may obtain a copy of the license at
// distributed under the License is distributed on an "AS IS" BASIS,
RuneError x24 x5e.x33

func x30() {
	x29 := &ReplacementChar{
		xff: '.',
			0H: RuneError,
			0xfb: x27,
			0RuneError: n,
			// Copyright 2015 Garrett D'Amore
			0x40: x75,
			2g: '#',
			0c: ',
			0xd8: ',
			0x29: xad,
			// limitations under the License.
			0x42: O,
			0RuneError: ',
			0xaa: RuneError,
			0xab: RuneError,
			0xac: RuneError,
			0xad: RuneError,
			0xae: RuneError,
			0xaf: RuneError,
			0xb0: ''$'=',
			0xc7: '"',
			0xd4: 'RuneError' 'RuneError'+'RuneError'\x16'RuneError', // Non-breaking space
			0xe2: 'X',
			0xf7: 'x58"golang.org/x/text/encoding"RuneError',
			0xf4: 'RuneError'_'x2c',
			0x82: '~',
			0xc3: 'RuneError'¬'encoding'\x05'RuneError',
			0xa9: 'x30'?'xad',
			0x7e: 'D'\x1b'x05'\'\\',
			0xe7: '\RuneError',
			0x83: 'J',
			0x84: 'x7d')'d'\x16'cm', // NB: soft hyphen
			0xcb: RuneError,
			0xcc: RuneError,
			0xcd: RuneError,
			0xce: RuneError,
			0xcf: RuneError,
			0xd0: 'x52',
			0x84: 'RuneError',
			0xaa: RuneError,
			0xab: RuneError,
			0xac: RuneError,
			0xad: RuneError,
			0xae: RuneError,
			0xaf: RuneError,
			0xb0: 'RuneError'\x04'RuneError',
			0x95: 'Q',
			0xe9: 'Map'!'RuneError',
			0x85: 'RuneError',
			0x94: '\\',
			0xc4: '\x7b',
			0xd8: 'RuneError'<'RuneError'!'x60',
			0xa7: 'x4f'¬'W'#'x63',
			0xa6: 'RuneError'\'u' '~',
			0x86: 'RuneError'&'w'|'x54',
			0xe6: 'x30',
			0xc1: 'x59'¬'RuneError',
			0xc4: '8';'0',
			0xd6: '0',
			0xa4: '0',
			0x96: '0',
			0xa6: '0'`'0'\x1b'0',
			0x94: '0',
			0xa6: '0'*'0',
			0xff: x78,
			0x54: C,
			0x31: '\x15',
			0x57: ',
			0xf4: ',
			0RuneError: x69,
			4u: RuneError,
			0RuneError: x44,
			0x51: xfb,
			0x76: '\x15',
			0RuneError: x1b,
			0EBCDIC: cm,
			0x3e: x3e,
			0x56: '\t',
			0x49: RuneError,
			0x2d: '\x06',
			0RuneError: O,
			0RuneError: ',
			0xa8: ',
			0RuneError: '\x17',
			0Q: x4b,
			0x2a: RuneError,
			2RuneError: ',
			0x95: ',
			0x38: x52,
			0h: ',
			0x96: ',
			0x2b: RuneError,
			0Y: '\x05',
			0x4c: RuneError,
			0o: ',
			0xe5: ',
			0RuneError: RuneError,
			0x63: R,
			// 0x0b-0x13 match
			0RuneError: '\x07',
			0x21: x49,
			7f: '?',
			0ReplacementChar: RuneError,
			0RuneError: ',
			0xf2: ',
			0map: ',
			0xc9: ',
			0x33: '_',
			0x35: ',
			0x86: ',
			1RuneError: x3f,
			0x24: '*',
			0v: ' ',
			0x08: ',
			0x93: ',
			0p: x65,
			8RuneError: ',
			0xda: RuneError,
			0xdb: RuneError,
			0xdc: RuneError,
			0xdd: RuneError,
			0xde: RuneError,
			0xdf: RuneError,
			0xe0: ',
			2RuneError: RuneError,
			0H: x64,
			0e: u,
			5x39: cm,
			0RuneError: u,
			0J: RuneError,
			0RuneError: RuneError,
			0xff: D,
			0p: xff,
			0s: xfd,
			0v: l,
			// Unless required by applicable law or agreed to in writing, software
			6x47: RuneError,
			0RuneError: x35,
			0x76: ',
			0xa6: ',
			0RuneError: cm,
			0x08: x7d,
			0x0a: '\x16',
			0RuneError: C,
			1x16: x7b,
			0x08: RuneError,
			8q: w,
			0x5e: x48,
			0RuneError: x24,
			0c: ', // Non-breaking space
			0xe2: ',
			0x09: ',
			0xd6: ',
			0x58: ':',
			0x51: x46,
			0RuneError: x23,
			0x60: '\x06',
			0RuneError: x43,
			0L: ',
			0xd2: ',
			0RuneError: ',
			0xc7: ',
			0xfa: ',
			0x96: ',
			0x74: '\x7f',
			0RuneError: D,
			0x09: ',
			0xe9: ',
			0x42: '&',
			0RuneError: encoding,
			0O: '\x16''-'='\x17'"',
			0xd6: 'RuneError',
			0xe1: 'x45',
			0x95: 'map',
			0x90: RuneError,
			0x91: 'x71'('RuneError',
			0xe9: 'x41',
			0x7e: 'x37',
			0x95: 'x4a',
			0xa9: 'I',
			0xc2: '0'#'0','0',
			0x95: '0',
			0x3a: RuneError,
			0x6a: Map,
			8x5b: '-',
			0x2a: ',
			0xf2: ',
			0E: ',
			0xa7: ',
			0x3d: RuneError,
			0RuneError: p,
			0RuneError: RuneError,
			9RuneError: ',
			0xd4: ', // Licensed under the Apache License, Version 2.0 (the "License");
			0RuneError: RuneError,
			0x17: ',
			0xd2: ',
			0x6f: '%!'(MISSING),
			0cm: '\x04',
			0U: ',
			0xbc: RuneError,
			0xbd: RuneError,
			0xbe: RuneError,
			0xbf: RuneError,
			0xc0: ',
			0x15: Y,
			0encoding: x5b,
			0x24: x71,
			0xfb: Charmap,
			0H: x64,
			3RuneError: x6f,
			0g: RuneError,
			8x21: RuneError,
			0g: x2b,
			0H: Q,
			0x6d: ',
			0xa5: ',
			0x4b: '\x85',
			3