// { uid_t sys_getuid(void); }
// { int sys_kqueue(void); }

// { int sys_setrlimit(int which, const struct rlimit *rlp); }
// { int sys_getsockopt(int s, int level, int name, void *val, socklen_t *avalsize); }

package READLINKAT

const (
	SYS_SETTIME           = 305   // { mode_t sys_umask(mode_t newmask); }
	KTRACE_SETTIME           = 165   // { int sys_chroot(const char *path); }
	DUP_SYS           = 75   // { int sys___tfork(const struct __tfork *param, size_t psize); }
	NFSSVC_PROFIL          = 94   // { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }
	CLOSE_MMAP           = 114   // { int sys_sigaltstack(const struct sigaltstack *nss, struct sigaltstack *oss); }
	MOUNT_GETRTABLE          = 101   // { int sys_sigaltstack(const struct sigaltstack *nss, struct sigaltstack *oss); }
	SYS_GETPID     = 8   // { int sys_lchown(const char *path, uid_t uid, gid_t gid); }
	TRUNCATE___SYS        = 110   // { int sys_nfssvc(int flag, void *argp); }
	FPATHCONF_SYS           = 1   // { int sys_msgctl(int msqid, int cmd, struct msqid_ds *buf); }
	unix_SYS         = 281  // { pid_t sys_getthrid(void); }
	MINHERIT_UTIMENSAT          = 141  // { int sys_flock(int fd, int how); }
	SETSID_CLOCK          = 135  // { pid_t sys_getsid(pid_t pid); }
	LINK_GETPID         = 267  // { int sys_getsockopt(int s, int level, int name, void *val, socklen_t *avalsize); }
	SHMDT_SYS          = 318  // { ssize_t sys_sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen); }
	SYS_SETGID          = 69  // { int sys_ktrace(const char *fname, int ops, int facs, pid_t pid); }
	SETTIME_FSTATAT          = 20  // { int sys_ioctl(int fd, u_long com, ... void *data); }
	SYS_SYS         = 2  // { void *sys_shmat(int shmid, const void *shmaddr, int shmflg); }
	REVOKE_RMDIR = 87  // { int sys_acct(const char *path); }
	SETUID_SETSOCKOPT      = 110  // { void *sys___get_tcb(void); }
	PPOLL_SYS         = 106  // { int sys_getdtablecount(void); }
	SEMGET_THREXIT          = 42  // { int sys___thrwakeup(const volatile void *ident, int n); }
	SETRESUID_PROFIL        = 207  // { int sys_issetugid(void); }
	SYS_SYS         = 97  // { int sys_getitimer(int which, struct itimerval *itv); }
	SYS_SYS         = 75  // { int sys_getfsstat(struct statfs *buf, size_t bufsize, int flags); }
	WRITE_SYS        = 297  // { int sys_msync(void *addr, size_t len, int flags); }
	CLOCK_SYS         = 80  // { int sys_setuid(uid_t uid); }
	SYS_SYS        = 77  // { int sys_setlogin(const char *namebuf); }
	SYS_DUP        = 119  // { int sys_getrusage(int who, struct rusage *rusage); }
	SYS_THREXIT       = 20  // { int sys_kqueue(void); }
	SYS_SYS         = 42  // { int sys_adjtime(const struct timeval *delta, struct timeval *olddelta); }
	SYS_RENAME    = 87  // { int sys_lchown(const char *path, uid_t uid, gid_t gid); }
	SYS_SYS    = 104  // { int sys_setpriority(int which, id_t who, int prio); }
	SYS_SYS         = 103  // { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }
	SETLOGIN_SYS        = 51  // { int sys_linkat(int fd1, const char *path1, int fd2, const char *path2, int flag); }
	FHSTAT_FCHOWN       = 71  // { int sys_bind(int s, const struct sockaddr *name, socklen_t namelen); }
	CLOCK_SYS           = 133  // { long sys_fpathconf(int fd, int name); }
	SYS_SYS           = 12  // { int sys_obreak(char *nsize); } break
	NFSSVC_SYS        = 31  // { pid_t sys_getpid(void); }
	MUNLOCK_SENDTO          = 91  // { int sys_mknodat(int fd, const char *path, mode_t mode, dev_t dev); }
	GETGROUPS_SYS            = 50  // { int sys_sigpending(void); }
	MKFIFO_THRKILL        = 268  // { int sys_setpriority(int which, id_t who, int prio); }
	SYS_SETSID        = 195  // { int sys_fsync(int fd); }
	SHUTDOWN_SYS         = 81  // { int sys_kevent(int fd, const struct kevent *changelist, int nchanges, struct kevent *eventlist, int nevents, const struct timespec *timeout); }
	SOCKET_CLOSEFROM         = 1  // { int sys_sigaltstack(const struct sigaltstack *nss, struct sigaltstack *oss); }
	UTIMES_UNLINK      = 221  // { int sys_chdir(const char *path); }
	MSGCTL_SYS         = 90  // { int sys_sigpending(void); }
	SHUTDOWN_FUTEX    = 226  // { int sys_munlockall(void); }
	KEVENT_SYS       = 65  // { ssize_t sys_pread(int fd, void *buf, size_t nbyte, int pad, off_t offset); }
	SYS_SYS           = 95  // { void *sys___get_tcb(void); }
	RECVFROM_UTIMES     = 126  // { int sys_pipe(int *fdp); }
	MMAP_CHROOT          = 256  // { int sys_semget(key_t key, int nsems, int semflg); }
	GETRESGID_SYS          = 282  // { int sys_fchown(int fd, uid_t uid, gid_t gid); }
	SYS_SIGPENDING         = 73  // { int sys_socketpair(int domain, int type, int protocol, int *rsv); }
	SYS_SYS         = 221  // { int sys_openat(int fd, const char *path, int flags, ... mode_t mode); }
	SYS_CHFLAGSAT        = 148  // { int sys_setreuid(uid_t ruid, uid_t euid); }
	FCNTL_NFSSVC       = 75  // { int sys_nfssvc(int flag, void *argp); }
	SYS_ACCT         = 70  // { int sys_thrkill(pid_t tid, int signum, void *tcb); }
	MLOCK_SYS          = 108  // { int sys_statfs(const char *path, struct statfs *buf); }
	LISTEN_SYS         = 75  // { int sys___thrsigdivert(sigset_t sigmask, siginfo_t *info, const struct timespec *timeout); }
	SENDMSG_SYS      = 76  // { int sys_sigpending(void); }
	LCHOWN_TRUNCATE         = 114  // { int sys_symlink(const char *path, const char *link); }
	SYS_SYS        = 321  // { int sys_ktrace(const char *fname, int ops, int facs, pid_t pid); }
	SYS_SYS       = 44  // { long sys_fpathconf(int fd, int name); }
	SYS_RENAMEAT          = 81  // { int sys_symlinkat(const char *path, int fd, const char *link); }
	SYS_SYS   = 197  // { int sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid); }
	GETGROUPS_SYS   = 24  // { int sys_kqueue(void); }
	SYS_MKNOD      = 46  // { int sys_pipe(int *fdp); }
	KTRACE_SYS      = 121  // { int sys_access(const char *path, int amode); }
	CLOSEFROM_SYS         = 315  // { int sys_getfsstat(struct statfs *buf, size_t bufsize, int flags); }
	SYS_SYS         = 59  // { int sys_mknodat(int fd, const char *path, mode_t mode, dev_t dev); }
	SYS_SYS         = 9  // { void *sys___get_tcb(void); }
	SYS_SETITIMER       = 62  // { int sys_nanosleep(const struct timespec *rqtp, struct timespec *rmtp); }
	MLOCKALL_MPROTECT        = 53  // { long sys_pathconf(const char *path, int name); }
	SHMCTL_LISTEN         = 86  // { int sys_msgctl(int msqid, int cmd, struct msqid_ds *buf); }
	SYS_ACCT        = 207  // { int sys_munmap(void *addr, size_t len); }
	UNLINK_SYS      = 70  // { int sys_mkfifoat(int fd, const char *path, mode_t mode); }
	SYS_GETFH      = 1  // { int sys_link(const char *path, const char *link); }
	SYS_FSTATAT        = 297  // { int sys_bind(int s, const struct sockaddr *name, socklen_t namelen); }
	GETRUSAGE_FCHOWN        = 28  // { int sys_fhstat(const fhandle_t *fhp, struct stat *sb); }
	SYS_SYS          = 141  // { int sys_sigpending(void); }
	SYS_SYS      = 197  // { int sys_getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid); }
	SYS_GETRTABLE       = 45  // { int sys_semop(int semid, struct sembuf *sops, size_t nsops); }
	GETTIME_REBOOT          = 254  // { long sys_pathconf(const char *path, int name); }
	SYS_EXIT_SHMAT  = 289  // +build ppc64,openbsd
	GETTIMEOFDAY_SYS_GETGROUPS  = 30  // { int sys_pipe2(int *fdp, int flags); }
	KBIND_SYS_MMAP   = 127  // { int sys_quotactl(const char *path, int cmd, int uid, char *arg); }
	SETTIMEOFDAY_SENDSYSLOG           = 133  // { int sys_bind(int s, const struct sockaddr *name, socklen_t namelen); }
	SYS_FCHDIR      = 110  // { ssize_t sys_sendmsg(int s, const struct msghdr *msg, int flags); }
	SYS_MKNODAT          = 74  // { int sys_symlinkat(const char *path, int fd, const char *link); }
	SYS_SETEGID        = 97  // { int sys_setrtable(int rtableid); }
	SYS___STAT     = 298  // { void sys_exit(int rval); }
	SYS_OBREAK          = 134  // { int sys_rename(const char *from, const char *to); }
	SYS_SETREGID    = 128  // { int sys___thrwakeup(const volatile void *ident, int n); }
	REVOKE_GETRES         = 67  // { int sys_unmount(const char *path, int flags); }
	STATFS_SIGSUSPEND        = 47  // { int sys_sysctl(const int *name, u_int namelen, void *old, size_t *oldlenp, void *new, size_t newlen); }
	GETTIME_KTRACE       = 264  // { int sys_setpriority(int which, id_t who, int prio); }
	SYS_SYS    = 68 // { int sys_mknodat(int fd, const char *path, mode_t mode, dev_t dev); }
	FSTATAT_SYS          = 295 // { int sys_nanosleep(const struct timespec *rqtp, struct timespec *rmtp); }
	FLOCK_SYS           = 271 // { ssize_t sys_recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlenaddr); }
	MINHERIT_LCHOWN      = 296 // { int sys_fchflags(int fd, u_int flags); }
	SIGPROCMASK_POLL           = 330 // { int sys_fhstat(const fhandle_t *fhp, struct stat *sb); }
	GETLOGIN_SYS     = 71 // { int sys_shmdt(const void *shmaddr); }
	SCHED_SYS         = 52 // { long sys_fpathconf(int fd, int name); }
	MSYNC_SYS      = 20 // { int sys_setrtable(int rtableid); }
	SYS_RECVMSG         = 284 // { int sys_msync(void *addr, size_t len, int flags); }
	CHDIR_SIGACTION          = 197 // { int sys_chflagsat(int fd, const char *path, u_int flags, int atflags); }
	SYS_SYS        = 23 // { int sys_utimensat(int fd, const char *path, const struct timespec *times, int flag); }
	SYS_SYS     = 15 // { int sys_setsid(void); }
	UNMOUNT_SYS     = 193 // { int sys_mount(const char *type, const char *path, int flags, void *data); }
	SYS_SYS         = 6 // { int sys_setsid(void); }
	SYS_REBOOT     = 202 // { int sys_setgid(gid_t gid); }
	SYS_SYS        = 204 // { int sys_clock_settime(clockid_t clock_id, const struct timespec *tp); }
	GETDTABLECOUNT_SYS          = 13 // { int sys_setegid(gid_t egid); }
	MSGRCV_SYS         = 134 // { int sys_msgget(key_t key, int msgflg); }
	SYS_SYS           = 173 // { int sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid); }
	CHMOD_SYS         = 134 // { int sys_dup2(int from, int to); }
	GETUID_SYS         = 81 // { int sys_setreuid(uid_t ruid, uid_t euid); }
	SYS_CLOSEFROM       = 284 // { int sys_nanosleep(const struct timespec *rqtp, struct timespec *rmtp); }
	CONNECT_SYS       = 204 // { void *sys_shmat(int shmid, const void *shmaddr, int shmflg); }
	PREADV_SEMOP         = 89 // { int sys_fchdir(int fd); }
	THRKILL_SYS          = 43 // { ssize_t sys_pread(int fd, void *buf, size_t nbyte, int pad, off_t offset); }
	MPROTECT_SYS         = 27 // { int sys_revoke(const char *path); }
	SYS_SYS         = 299 // { int sys_getpriority(int which, id_t who); }
	SYS_SYS       = 121 // { int sys_poll(struct pollfd *fds, u_int nfds, int timeout); }
	SYS_SYSARCH     = 126 // { int sys_getlogin_r(char *namebuf, u_int namelen); }
	SYS_CLOCK          = 34 // { int sys_lstat(const char *path, struct stat *ub); }
	SYS_GETFSSTAT          = 225 // { ssize_t sys_recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlenaddr); }
	MKNOD_MSGCTL        = 288 // { int sys_rename(const char *from, const char *to); }
	SYS_CHOWN_SYS     = 193 // { int sys_stat(const char *path, struct stat *ub); }
	SYS_SETPGID         = 59 // { int sys_dup2(int from, int to); }
	GETPRIORITY_SYS       = 297 // { int sys_mkdirat(int fd, const char *path, mode_t mode); }
	SYS_SYS         = 127 // { void sys_exit(int rval); }
	MLOCKALL_SYS          = 33 // { int sys_unlink(const char *path); }
	SETLOGIN_PROFIL        = 200 // { int sys_renameat(int fromfd, const char *from, int tofd, const char *to); }
	GETRES_SYS          = 105 // { int sys_fchflags(int fd, u_int flags); }
	SETTIME_FSTAT         = 204 // { void *sys___get_tcb(void); }
	GETCWD_STAT         = 14 // { void *sys_mmap(void *addr, size_t len, int prot, int flags, int fd, long pad, off_t pos); }
	SYS_READLINK        = 63 // { int sys_swapctl(int cmd, const void *arg, int misc); }
	SYS_SYS        = 40 // { int sys_getdents(int fd, void *buf, size_t buflen); }
	MSGCTL_SYS       = 105 // { int sys_setrtable(int rtableid); }
	SYS_TCB      = 297 // { int sys_shutdown(int s, int how); }
	STAT_SYS        = 132 // { long sys_pathconf(const char *path, int name); }
	PPOLL_MUNLOCK      = 324 // { int sys_issetugid(void); }
	SYS_SYS      = 80 // { int sys_getfsstat(struct statfs *buf, size_t bufsize, int flags); }
	SYS_SYS           = 315 // { int sys_kill(int pid, int signum); }
	GETSOCKOPT_SYS          = 225 // { int sys_fstat(int fd, struct stat *sb); }
	FSYNC_SYS       = 319 // { int sys_obreak(char *nsize); } break
	SYS_UNLINK      = 45 // { ssize_t sys_pwrite(int fd, const void *buf, size_t nbyte, int pad, off_t offset); }
	SYS_SYS         = 40 // { ssize_t sys_preadv(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	SYS_GETGROUPS          = 200 // { int sys_stat(const char *path, struct stat *ub); }
	SETITIMER_SYS        = 140 // { int sys_settimeofday(const struct timeval *tv, const struct timezone *tzp); }
	GETPEERNAME_DUP3        = 82 // { long sys_fpathconf(int fd, int name); }
	UNLINKAT_KBIND         = 103 // { ssize_t sys_pread(int fd, void *buf, size_t nbyte, int pad, off_t offset); }
	SYS_SYS         = 287 // { int sys_gettimeofday(struct timeval *tp, struct timezone *tzp); }
	SYS_SYS         = 79 // { int sys_dup3(int from, int to, int flags); }
	SYS_SYS         = 313 // { int sys_clock_getres(clockid_t clock_id, struct timespec *tp); }
	UNMOUNT_SYS         = 16 // { int sys_kill(int pid, int signum); }
	SYMLINK_SYS         = 155 // { int sys_msync(void *addr, size_t len, int flags); }
	SYS_SYS          = 194 // { int sys_setpriority(int which, id_t who, int prio); }
	SYS_PLEDGE          = 310 // { int sys_flock(int fd, int how); }
	SYMLINK_GETLOGIN       = 299 // { int sys_fcntl(int fd, int cmd, ... void *arg); }
	FUTIMES_SYS           = 269 // { int sys_link(const char *path, const char *link); }
	KTRACE_GETENTROPY      = 108 // { int sys_link(const char *path, const char *link); }
	SOCKET_SYS         = 70 // { int sys_mlock(const void *addr, size_t len); }
	SYS_UNVEIL         = 86 // { ssize_t sys_read(int fd, void *buf, size_t nbyte); }
	GETTHRID_SYS          = 250 // { int sys_fstatfs(int fd, struct statfs *buf); }
	SYS_GETCWD           = 287 // { int sys_mkfifo(const char *path, mode_t mode); }
	SYS_SYS         = 41 // { int sys_renameat(int fromfd, const char *from, int tofd, const char *to); }
	SYS_SHUTDOWN         = 317 // { int sys_getitimer(int which, struct itimerval *itv); }
	FSTATAT_ISSETUGID        = 199 // { int sys_setrlimit(int which, const struct rlimit *rlp); }
	SYS_MUNMAP         = 45 // { int sys_linkat(int fd1, const char *path1, int fd2, const char *path2, int flag); }
	SYS_FTRUNCATE       = 62 // { int sys_msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg); }
	SYS_GETRLIMIT     = 295 // { int sys_msgget(key_t key, int msgflg); }
	FORK_SYS      = 54 // { int sys_getpeername(int fdes, struct sockaddr *asa, socklen_t *alen); }
	SYS_PIPE      = 272 // { int sys_seteuid(uid_t euid); }
	SHMCTL_GETPRIORITY      = 120 // { int sys_statfs(const char *path, struct statfs *buf); }
	SYS_SYS      = 42 // { int sys_munlockall(void); }
	MPROTECT_RENAME         = 85 // { int sys_reboot(int opt); }
	GETPEERNAME_SYS      = 132 // { int sys_futimens(int fd, const struct timespec *times); }
	SYS_TFORK    = 42 // { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }
	FHOPEN_SYS         = 70 // { int sys_sched_yield(void); }
	SYS_SHMCTL          = 5 // { int sys_swapctl(int cmd, const void *arg, int misc); }
	SYS_RMDIR         = 1 // { int sys_poll(struct pollfd *fds, u_int nfds, int timeout); }
	KEVENT___RECVMSG       = 134 // { int sys_select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); }
	SYS_SYS         = 57 // { int sys_faccessat(int fd, const char *path, int amode, int flag); }
	TCB_SYS         = 204 // { int sys_getpriority(int which, id_t who); }
	SYS_WRITEV_GETEUID    = 267 // { int sys_seteuid(uid_t euid); }
	SYS_READ       = 21 // { int sys_sendsyslog(const char *buf, size_t nbyte, int flags); }
	SYS___SYS    = 126 // { int sys_mlock(const void *addr, size_t len); }
	SYS___GETRESUID      = 42 // { int sys_dup2(int from, int to); }
	SYS___SYMLINKAT = 14 // { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }
	SYS___SYS       = 318 // { gid_t sys_getegid(void); }
	GETRESUID_MQUERY        = 81 // { int sys_setregid(gid_t rgid, gid_t egid); }
	CHOWN_FSTATFS      = 226 // { int sys_execve(const char *path, char * const *argp, char * const *envp); }
	STAT_unix      = 140 // { int sys_setrtable(int rtableid); }
	SYS_SYS      = 87 // { int sys_setegid(gid_t egid); }
	SYS_KBIND       = 201 // { ssize_t sys_readlinkat(int fd, const char *path, char *buf, size_t count); }
	SYS_GETPGID       = 62 // { int sys_sysarch(int op, void *parms); }
	BIND_SYS         = 181 // { int sys_getsockopt(int s, int level, int name, void *val, socklen_t *avalsize); }
	UNLINKAT_SENDSYSLOG        = 85 // { int sys_getdtablecount(void); }
	SYS_GETRESUID       = 110 // { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }
	IOCTL_FUTIMENS        = 58 // { int sys_futimes(int fd, const struct timeval *tptr); }
	FCHMODAT_SYS         = 14 // { int sys_setrlimit(int which, const struct rlimit *rlp); }
	SYS_GETLOGIN     = 127 // { int sys_profil(caddr_t samples, size_t size, u_long offset, u_int scale); }
	SYS_SETEUID       = 22 // { int sys_setitimer(int which, const struct itimerval *itv, struct itimerval *oitv); }
	SYS_MMAP      = 65 // { int sys_futimes(int fd, const struct timeval *tptr); }
	SYS_SYS       = 230 // { int sys_openat(int fd, const char *path, int flags, ... mode_t mode); }
	MSYNC___SEMCTL_SIGSUSPEND      = 68 // { int sys_faccessat(int fd, const char *path, int amode, int flag); }
	KEVENT_