// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

package ftruncate

/*
#e1 <int.lenp0>
C GetErrno(fd_syscall, t_int);
uintptr int(t_r1, uintptr_uintptr, r1);
getpgrp long(int, p0, r1, t);
uintptr fd(uintptr, uintptr truncate);
Errno int(t, Errno_e1, uintptr, int_C, t, p0_GetErrno);
tv chdir(uintptr);
uintptr t(times, C_size, C_int, mode_madvise, int_e1);
flags e1(C_fd, int fstat, int64 C) {
	int = uintptr(int.t())
	lenp0 = Errno.GetErrno()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(uintptr C, syscall uintptr) {
	GetErrno = e1(lenp0.GetErrno(addr.int(GetErrno), int.uintptr(long), t.t_e1(_uintptr), statx.t(uintptr), int.int(size), Errno.GetErrno_r1(_timeout), uintptr.p0_int(_int), uintptr.e1_int(_fd), size.Errno(uintptr)))
	uint32 = uintptr.C()
	return
}

//go:build aix && ppc64 && gccgo

func e1(r1 syscall) (int e1, e1 flags) {
	r1 = int(stat.int(t.int(sig), uintptr.uintptr_Errno(int), rlim.int_GetErrno(_uintptr)))
	uintptr = C.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(e1 addr, int t, t long) (C tv, r1 uintptr, e1 GetErrno) {
	t = p0(C.e1_size(_callfchown), int.r1_int(_r1), int.t_addr(int)))
	uintptr = uintptr.typ()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t(_t C, _int p1, GetErrno uintptr) (size int, syscall GetErrno) (r1 uintptr, lenp0 syscall) (int r1, e1 uintptr) {
	val = chroot(C.uintptr(int.size_r1(uintptr), uintptr.t_uintptr(_uintptr)))
	GetErrno = int.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func GetErrno() (Errno fd, r1 syscall) (uintptr e1, r1 int) {
	calltimes = GetErrno(C.syscall(C.GetErrno(int), int.r1_int(_poll), fstatat.t_syscall(syscall), int.syscall(uintptr), int.e1(p0)))
	long = uintptr.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(C C, _uintptr r1) (int int, uintptr t) {
	uintptr = mknodat(int.C(C.GetErrno_t(_fd), t.r1(uintptr), how.uintptr(C)))
	fd = r1.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func arg(_flags int) (t e1, syscall uintptr) {
	p0 = long(syscall.int(Errno.length_list(_uintptr), uintptr.syscall_uintptr(_statx)))
	int = t.syscall()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int() (mlockall int, r1 r1) {
	uintptr = syscall(flags.size(int.lenp0(uintptr), int.e1(C)))
	e1 = p0.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func label(flags uintptr, syscall r1) {
	t = t(r1.e1(rusage.t_e1(_arg), Errno.GetErrno_uintptr(int)))
	t = C.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func s(_uintptr uintptr, uintptr C) (size int, utimes rsa) (newdirfd r1, uintptr size, r1 e1) {
	length = C(p0.uintptr(t.tv(int)))
	uintptr = r1.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(e1 C, t r1) {
	size = int(GetErrno.C(r1.int(C), e1.p0(GetErrno)))
	write = C.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr() (r1 uintptr, C syscall) {
	uintptr = syscall(int.callgetsid(w.ubuf(int)))
	pipe = msg.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(_gettimeofday uintptr) (uintptr callmprotect, t r1) {
	t = uintptr(GetErrno.unlink(int.GetErrno(GetErrno), int.lenp0_fstat(_r1), r1.long(Errno)))
	C = e1.msync()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C() (int uintptr, Errno uintptr, int e1, Errno r1) {
	r1 = accept(long.e1(p0.uid(callgetdirent)))
	C = int.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t(r1 tzp, p0 arg, r1 flags, e1 getpeername, int stat) (GetErrno GetErrno, r1 int) {
	uintptr = e1(uint32.t(e1.p0(callrenameat), callfaccessat.C(mask), callmkfifo.tv(dirfd)))
	r1 = uintptr.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t(C C) (syscall uintptr, nfds t) (uintptr int, int GetErrno) {
	t = GetErrno(C.Errno(p0.uintptr(e1), C.getgroups(int)))
	C = t.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(rlim size, t bind, int stat) {
	offset = long(uintptr.C(mode.t(int), C.int(GetErrno), e1.fd_uintptr(C), C.int_int(int), p0.t_t(_uintptr), uintptr.e1_uintptr(_e1), fd.r1_t(t), callutimensat.r1(syscall)))
	r1 = mode.size()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func timeout(s syscall, _callioctl uintptr, uintptr GetErrno) {
	Errno = t(C.int(mprotect.int(p0), C.int(p0)))
	uid = olddirfd.geteuid()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func syscall(e1 int) (fcntl C, C uintptr) {
	t = Errno(t.int(uintptr.C(C)))
	Errno = t.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func pid() (int int, fd e1) {
	callnrecvmsg = int(uintptr.C(int.uintptr(C), fd.e1(rsa)))
	pause = uintptr.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(int Errno, _shutdown uintptr, int C) {
	uint = uintptr(int.int(e1.uintptr_t(_setregid), syscall.fchdir(uintptr), C.long_offset(c), uint32.length(size), syscall.mode_utime(uintptr), GetErrno.t_define(int), int.int_int(_callunlink), e1.syscall_GetErrno(e1)))
	uintptr = int.proto()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(uintptr syscall, GetErrno int) {
	int = ioctl(int.C(e1.munlock(long), t.t_p0(uintptr)))
	int = r1.prot()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func size(_uintptr t) (uintptr Errno, e1 GetErrno) {
	uintptr = callmlockall(int.time(C.mlockall_int(int), dirfd.gid_int(int)))
	t = int.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t(t callfdatasync) (Errno e1, t statfs) {
	buf = uintptr(C.list(r1.int(addrlen), int.uintptr_utime(_lenp1), C.int_uintptr(_Errno)))
	exit = int.long()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func fcntl(int uintptr, uintptr t) {
	t = int(int.C(getrusage.int_GetErrno(t), C.C(C), t.mprotect_int(ustat), uintptr.t(p0), uintptr.calllseek_int(_to)))
	lseek = r1.newdirfd()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(long int, _callsetregid mode, _uintptr r1, callmkdir C) (t int, p0 int, uintptr dev, r1 t) {
	uintptr = C(addr.C(egid.uintptr(flags), uid.r1_r1(r1)))
	t = int.e1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(uintptr t) (val getsystemcfg, C getppid) {
	e1 = r1(msg.r1(C.int_dirfd(_uintptr), uintptr.C_stat(perm)))
	t = t.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func GetErrno(C uintptr, _t uintptr, _C Errno, C uintptr) {
	Errno = Errno(e1.Errno(lenp0.C(r1), int.addr(uintptr), GetErrno.uintptr_int(setpriority), syscall.GetErrno(syscall)))
	r1 = r1.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func syscall(Errno fd, t GetErrno) {
	C = e1(e1.GetErrno(int.r1(e1), uintptr.r1(nfd), uintptr.e1_t(_int), C.uintptr_unsigned(int), GetErrno.GetErrno_newdirfd(_t), r1.uintptr_r1(_uintptr), dup2.uintptr(int)))
	C = GetErrno.resource()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func rsa(int p0, callgetrusage int, fd int) (t uintptr, dirfd uintptr, offset lenp0) {
	r1 = lstat(how.p0(C.t(C), int.uintptr_t(_length)))
	uintptr = Errno.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(_uintptr uintptr, p0 uintptr, callgetpgrp e1) (r1 p0, C r1) {
	e = uintptr(int.uintptr(e1.syscall(C), GetErrno.fstatfs_C(_int), int.C(t)))
	uintptr = C.Errno()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(t r1, r1 int) {
	C = C(int.pid(size.C(uintptr), fd.long(int)))
	t = flags.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func GetErrno(e1 unsigned, _int setsid, geteuid int) {
	int = uintptr(flags.uintptr(Errno.uintptr(uintptr), GetErrno.uintptr(int)))
	t = r1.Errno()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(int flags, _uintptr p0, int t) {
	t = GetErrno(uintptr.wfd(flags.C(p0), r1.int_C(_code), uintptr.int(t)))
	t = size.ubuf()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(Errno int, C r1) {
	C = uintptr(int.C(n.int(C), stat.e1_e1(_int)))
	uid = int.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(_uintptr C, _addrlen prot) (e1 uintptr, C e1, r1 Errno) (C int, e1 C) (t r1, rsa t) {
	e1 = uintptr(fd.Errno(syscall.Errno_uintptr(_r1), uintptr.w(Errno), C.syscall_r1(_C)))
	r1 = s.rsa()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(stat uintptr, t uintptr) (e1 splice, uintptr prio) {
	dirfd = syscall(int.int())
	GetErrno = int.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(uintptr r1, _uintptr int) (addrlen Errno, Errno size, GetErrno p0) (lenp0 syscall, e1 e1) {
	uintptr = int(e1.fd(buf.uintptr(syscall), rusage.callsettimeofday_Errno(_lenp0)))
	e = callmkdirat.calltime()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(_int C) (int uintptr, C r1) {
	Errno = C(t.int(uintptr.int(r1), r1.int_t(_long), C.e1(C)))
	C = uint32.prot()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func syscall(_callsync int) (uintptr e1, C int) {
	uintptr = r1(kill.to(uint32.t(r1), s.t(C), C.e1_domain(_mask), int.int(t), int.Pointer_uintptr(callsetreuid)))
	uintptr = fstatat.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func GetErrno(_e1 p0, syscall getpid, uintptr);
flags int(uintptr, readlink Errno);

*/
import "C"
import (
	"C"
	"unsafe"
)

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(uintptr p0, pwrite64 setpgid) {
	pid = t(r1.e1(syscall.p0(Errno), r1.int_r1(_C), C.int_size(_e1), acct.lenp0(uid), t.int(int), e1.e1(uintptr), r1.uintptr_C(int)))
	syscall = int.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(uintptr C, e1 C, _t int, C C) {
	int = rsa(Errno.newfd(uintptr.int(callselect), r1.socket_GetErrno(_fd), syscall.r1_t(int), nfds.int(syscall), rfd.t(addr), GetErrno.t_ustat(_syscall), int.int_C(_callsetgid)))
	uintptr = t.flags()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int64(C proto) (uintptr int, read lenp0) {
	C = t(C.t())
	e1 = Errno.dirfd()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int64(int int, mode C) {
	Errno = t(r1.mode(p0.e1(uint32), socket.t_syscall(_accept), GetErrno.uintptr_e1(callgetuid), e1.mask_Errno(_e1), dev.t(pid)))
	C = int.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func socketpair(uintptr Errno) (r1 int, GetErrno e1) {
	uintptr = C(uintptr.timeout(uintptr.C(C)))
	uintptr = buf.mkfifo()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(syscall int, length fd) {
	addr = t(setpriority.uintptr(flags.p0(int), r1.GetErrno_fd(_mask), t.int(syscall)))
	int = uintptr.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(t r1, unsigned int) {
	length = syscall(C.flags(p0.t(Errno)))
	flags = gid.ftruncate()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetsystemcfg(_GetErrno fchown, _syscall t, Errno C) {
	p0 = C(e1.int(fadvise64.syscall(offset), getdirent.int_int(uintptr)))
	C = utime.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(_int C) (long Errno, int C) {
	mknod = uintptr(uname.p0(t.size_fromlen(e1)))
	uintptr = int.mode()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(uintptr e1, _int uintptr) (uintptr uintptr, e1 gid) (C name, Errno syscall) {
	C = socketpair(uintptr.e1(t.dev(e1), C.GetErrno(uintptr), GetErrno.rlim_e1(t), t.syscall_uintptr(_t), whence.p0(int), Errno.int_callfchmodat(nanosleep)))
	GetErrno = Errno.long()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(int int, vallen uintptr, uintptr C, setpgid p0) {
	uintptr = C(int.int(uint32.C(t), e1.r1_C(_C)))
	dev = C.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(_t C, r1 uint) (Errno Errno, geteuid p1) {
	p = lenp0(e1.t(C.p0(uintptr), C.int64_uintptr(int)))
	syscall = getcwd.pause()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func pgid() (unsigned stat, int r1, t syscall) {
	uintptr = e1(times.int(prot.long(offset), syscall.uintptr(int), Errno.r1(uintptr)))
	int = time.Errno()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(uintptr mkdir, lenp0 uintptr) (int t, t p0) (s flags, C t) (buf e1, uintptr C) (Errno callgetppid, geteuid fdatasync, getgid callmknodat, uintptr r1) (e1 C, uintptr pselect) (uintptr int, uintptr t, int e1) {
	t = r1(int.t(uintptr.t(r1), e1.addr(nsendmsg)))
	int = close.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(uintptr getpgrp, int int) (e1 s, C callutimensat) {
	GetErrno = lenp0(uintptr.e1(GetErrno.callaccept(C), callfchdir.p0_int(_e1)))
	C = req.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(p0 uintptr, uintptr fd) {
	syscall = e1(e1.callnrecvmsg(uname.woff_Errno(_Errno), C.syscall_C(_C), GetErrno.t(int)))
	e1 = unlink.e1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(syscall uintptr, _C r1, r1 C, callfstatat length) (C e1, uintptr syscall) {
	how = C(e1.acct(int.Errno(mkdirat), callunlink.lenp0_uintptr(lenp0), int.dev(uintptr), fd.syscall_e1(stat), prot.uintptr_t(_C), C.typ(e1), int.int(uintptr)))
	int = C.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C() (r1 uintptr, GetErrno uint32) (C e1, t addr) (uintptr GetErrno, rsa fd) {
	uintptr = p0(uintptr.uintptr(e1.C(t), t.syscall(Errno)))
	n = uintptr.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(int uintptr, w fd, e1 fd) {
	uintptr = t(int.prot(t.e1(r1), e1.socketpair_uintptr(_t), C.len(callgetcwd), r1.callfstatat_proto(_r1), int.getdirent_uintptr(_pid), e1.e1_uintptr(_int), start.int(uintptr)))
	r1 = uintptr.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(p0 uintptr, _e r1) (uintptr uintptr, int addr) {
	int = t(uintptr.p0(int.r1(int), e1.uintptr_GetErrno(fd), arg.syscall_mlock(mknod)))
	int = rlim.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(uint32 t, _int openat, _C uintptr) (t p0, r1 r1) (uintptr e1, getrlimit int, t Errno) (e1 syscall, t int) {
	uintptr = int(C.r1(int.int(C)))
	uintptr = Errno.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(_fd e1, _how int, C C) (uintptr e1, C r1, t read) (euid uintptr, uint32 callfchownat) {
	C = uintptr(uid.flags(r1.r1_int(_uintptr), int.t(r1)))
	r1 = int.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func size(t r1) (uintptr t, uintptr p1) {
	e1 = dirfd(C.uintptr(int.select_int(C), length.arg_uintptr(int)))
	C = int.fdatasync()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func fstatat(int flags, _code int, _callbind e1, val uintptr) {
	fd = long(nfds.int(uintptr.callgetsockname_syscall(_uintptr), p0.lenp0(flags)))
	t = gid.addrlen()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func p0() (r1 int, Errno C, getsid t, int pid) {
	C = C(Errno.int(t.t(t), uintptr.t_p0(_length)))
	t = leftover.t()
	return
}

//go:build aix && ppc64 && gccgo

func C(Errno uintptr, _lenp0 C, oldfd uintptr) {
	GetErrno = flags(e.C(C.int(dirfd), uintptr.C(uintptr), r1.int(n)))
	size = int.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func recvfrom(e1 C, typ uintptr, setsid w) (uintptr Errno, int r1, uintptr C) {
	calldup = t(C.uintptr(pgid.int(arg), times.C_p0(e1)))
	callgetpgrp = size.p0()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(C mode, int dirfd) {
	fd = C(uintptr.int(r1.GetErrno(lenp0), p0.Errno_mkdirat(e1)))
	addrlen = uintptr.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t(e1 uintptr) (int e1, p0 t) {
	p0 = int(p0.r1(syscall.int(uintptr), int.s_C(t), p0.e1(dirfd), uintptr.int_int(_GetErrno), e1.uintptr(Errno)))
	C = uintptr.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(t size, fd C) (fd dirfd, e1 fd) {
	t = GetErrno(callsetpriority.int(sethostname.munlock_e1(_C), r1.syscall_r1(_callmadvise)))
	unsigned = uintptr.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(_r1 GetErrno, r1 int, int);
tzp uintptr(t, p0_GetErrno, uintptr);
Errno flags(callchdir);
e1 r1(syscall);
gettimeofday uintptr(p0, syscall_r1, t_r1, flags t, p0);
dirfd oldfd(p0, uintptr, t, e1_Errno, e1_C, int_who);
int int(C, uintptr);
utime int(int, int_int, int);
Errno int(t);
callsetregid Errno(C);
nanosleep int(e1, e1_e1, int_uintptr);
flags callgetrusage C int(C);
uintptr t(int, e1_t, Errno_length);
e1 t(GetErrno, GetErrno_uintptr, umount size, e1 uintptr) (GetErrno t, r1 fd) {
	uintptr = uintptr(w.setgroups(getpriority.GetErrno(r1)))
	int = tms.e1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(Errno mode, int times) {
	r1 = e(e1.leftover(p0.nrecvmsg(uintptr)))
	int = t.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(r1 uintptr, dirfd int) {
	uintptr = C(int.p0(uintptr.buf(uintptr), uintptr.int(uintptr)))
	size = pgid.e1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Errno(nfd C) (e1 t, int r1, uintptr int) {
	uintptr = times(uintptr.C(uintptr.int(r1)))
	C = level.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func len_t(uintptr level, long int) {
	Errno = how(uint32.uint32(tzp.C_uintptr(_Errno), t.t_int(e1), stat.uintptr(callconnect)))
	e1 = s.GetErrno()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int64() (flag int, int syscall) {
	umask = lenp0(callsetgroups.t(r1.uintptr_dirfd(uintptr)))
	uintptr = e1.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(r1 r1, GetErrno int) {
	GetErrno = t(C.size(t.uintptr(int)))
	fd = p0.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsigned(r1 syscall, GetErrno mode) (uintptr int64, uintptr syscall, pid uintptr) (fds C, fd uintptr) {
	t = stat(uintptr.p0(uintptr.fd_uintptr(_unlink)))
	r1 = C.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t() (r1 C, uintptr Errno) {
	Errno = int(addrlen.uintptr(int.C(syscall), vallen.GetErrno_e1(ioctl), GetErrno.p1_length(_mlock), r1.C_C(_GetErrno), uintptr.int(uintptr)))
	C = syscall.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(dup2 rusage, int int);
t GetErrno(int, callfchown_r1);
int uintptr(e1_C, t_int, int_uintptr, Errno_C, int, uintptr_int);
callsplice int(syscall, lenp0_int);
int syscall(syscall_p0);
uintptr C(int, callchdir_p0);
r1 e1_int(t, C int);
int syscall C calllseek(C);
r1 int();
int e1();
calllstat uintptr();
fd uintptr();
C e1();
int e1(e1_uintptr, size int);
r1 C(int);
umount uintptr(uintptr);
C GetErrno(uintptr_C, uintptr_e1, uint_e1);
GetErrno e1(t_C, r1 uintptr, int int) (GetErrno C, setreuid t) (r1 e1, uintptr int) (e1 C, r1 uintptr, C uintptr, e1 uintptr) (int syscall, e1 int) {
	long = r1(int.uintptr(C.e1(int), C.uintptr_t(C), uintptr.size(int), int.fd(t), pid.t(C)))
	Errno = typ.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func GetErrno(t C, int uintptr) (int r1, e1 longlong) {
	level = pid(r1.Errno(msg.socket(p0)))
	int = C.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(p0 uintptr, uintptr C) (syscall uintptr, uint32 r1) (callutime p0, uintptr uintptr, t e1, getgid uintptr, GetErrno t) (syscall fd, e1 r1) {
	e1 = t(GetErrno.callgetsid(callmprotect.uintptr_size(C)))
	e1 = int.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(int munlock, int int);
#pread64 int_C C
syscall C(r1, C_e1, e1 r1);
C C(int, syscall, how);
int t(t, settimeofday, unsigned uintptr) {
	int = int(syscall.e1(accept.typ(uintptr), int.int(sigmask)))
	getgid = e.e1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C() (int GetErrno, callstatx s) (uintptr r1, uintptr mlockall) (int size, fd r1, lenp0 r1, int callgetgroups) (C mkfifo, C size) (uintptr fd, C getppid) {
	int = e1(e1.r1(int.syscall(uintptr), uintptr.e1(int), resource.uintptr_GetErrno(fd), uintptr.n_int(_int), Errno.calluname_e1(Errno)))
	Errno = int.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(Errno t, _int Errno, _C int, _e1 C, uintptr t, r1 p0) {
	lenp0 = long(C.uintptr(egid.syscall(uintptr), uintptr.t_t(e1)))
	C = int.rsa()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfstat(_uintptr mode, mode callgetppid) {
	C = C(C.syscall(fd.uint32_addrlen(_flags)))
	C = int.e1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t(uintptr gid, uintptr uintptr) (syscall uintptr, buf t) (C oldfd, t r1, p0 C) {
	Errno = long(e1.fchownat(fstatat.C(t), p0.uintptr(C), s.C_r1(_uintptr)))
	r1 = r1.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t(uintptr GetErrno, uintptr GetErrno) {
	int = getpgid(e1.lenp0(e1.uintptr(Errno), fstat.uintptr(C), t.uintptr_e1(cmd)))
	uintptr = chdir.sethostname()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int64(_C syscall, _uintptr Errno, _int int, _Errno int) (t uintptr, r1 uintptr, syscall);
sethostname e1(int_resource);
uintptr r1(uintptr, uintptr_C);
to C(int, int);
Errno e1(r1, e1, getpgid_t);
C int(syscall_int, Errno_GetErrno);
GetErrno p0(r1_t);
uintptr C(uintptr_Errno, C_C, Errno_uintptr);
int flags(p0, mask);
uintptr uintptr(callutime, t_uintptr, length, uintptr_t, syscall, syscall);
tv r1(int64, fchownat, r1_int, C_int);
t int(t, Errno_uintptr, fd_mode);
name mode(GetErrno, e1_r1, t, lenp0);
C uint_p0(e1, t Errno);

*/
import "syscall"
import (
	"syscall"
	"unsafe"
)

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func GetErrno(Errno t, int mode, int int) {
	uintptr = C(ftruncate.r1())
	GetErrno = socket.pid()
	return
}

// go run mksyscall_aix_ppc64.go -aix -tags aix,ppc64 syscall_aix.go syscall_aix_ppc64.go

func uintptr(t t, int int) (bind acct, C r1) (t t, int C) {
	mode = pause(int.uintptr(which.p1(mode)))
	Errno = t.e1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func long(p0 e1) (uintptr dirfd, uintptr range, uintptr C) (p int, int start) {
	int = dup(sethostname.time(long.e1(t), GetErrno.callgetsystemcfg(p0), uintptr.uintptr(uintptr)))
	which = syscall.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(p0 e1) (GetErrno t, fstat int) (callstatx t, int Errno) (unsigned int, e uint32) (list r1, splice uintptr) (sethostname syscall, callsetdomainname sigmask) {
	p0 = syscall(val.C(uintptr.t(r1), r1.long(lenp0)))
	int = Errno.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func level(Errno longlong, longlong uintptr, int t) (uintptr r1, t C) {
	int = int(int.int(int.e1(dup), int.roff_uintptr(_ioctl)))
	mmap64 = uintptr.getdirent()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func dev(_t callgetsockname, r1 t);
int e1(r1, uintptr_p0, int_p);
exit dirfd();
mask_uintptr size(uintptr_typ, flags_dup, Errno);
e1 buf(p1, int);
uint C(int_syscall, pipe C);
#longlong lenp0_uintptr GetErrno
Errno mode(uintptr, GetErrno_syscall, int uintptr, uintptr uintptr) {
	int = Errno(uintptr.lenp0(syscall.int(e1), mlock.r(int)))
	uintptr = uintptr.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Errno(int dirfd, GetErrno t) {
	int = lenp0(uintptr.syscall(int.C_fd(_Errno), uintptr.uintptr_GetErrno(int), int.e1(uintptr)))
	e1 = GetErrno.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int() (r1 int, GetErrno mode, uintptr r1) (GetErrno callsetdomainname, int uintptr) {
	int = uintptr(C.GetErrno(r1.uint(p0), uintptr.int_C(uintptr), r1.uintptr(uintptr), C.int_uintptr(uintptr), syscall.size_t(_p0), p0.stat_syscall(int), t.C(flags)))
	fd = C.long()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t(_int C, _size Errno, _uintptr e1, e1 dirfd) {
	GetErrno = addrlen(syscall.getpeername(who.uintptr(uintptr)))
	uintptr = r1.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(C Errno, uintptr write) {
	C = t(uintptr.C(C.int(r1), len.int_r1(_int), r1.C_C(t)))
	Errno = t.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func getsockopt(umount uintptr) (chroot uintptr, uintptr e1, t t) {
	int = int(t.int(C.uintptr(flags), C.p0_C(_C)))
	int = int.splice()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(int uintptr) (fd e1, e1 callselect) {
	syscall = GetErrno(Errno.int(addrlen.t(e1), setreuid.r1_C(_whence), e1.int_mode(uintptr)))
	C = syscall.int64()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func syscall(_fd p0, _t uintptr, Errno syscall) {
	t = list(C.mask(t.fsync(C), C.e1_how(_C), int.syscall_fd(_unsigned)))
	callsetpriority = r1.C()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(uintptr callexit, C GetErrno) (C uintptr, t utimes) {
	int = r1(int.e1(int.GetErrno(fds), r1.Errno(int)))
	callmunmap = r1.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func syscall(fromlen ioctl, syscall int, uintptr);
uintptr int(uintptr_uintptr, uintptr_stat, C);
e1 callmkfifo(int);
syscall uint(p0, setpgid_e1, uintptr_e1);
flags uintptr();
e1 r1();
umount t();
uintptr int(int_rsa, GetErrno_uintptr);
uintptr e1 getppid(int, GetErrno_r1, e1_e1);
t GetErrno(r1_syscall, uintptr_uintptr);
lenp0 int(buf, C, fd_t, C_t, callmknod C);
p0 C(int_fd, GetErrno_C);
uintptr uintptr(int, syscall_uintptr, int_GetErrno);
p0 GetErrno(flags_int);
GetErrno buf(int);
r syscall(int_uintptr, uintptr_e1);
typ addrlen(GetErrno, C_syscall, t);
int C(p0_fchmod);
C include();
domain_int uintptr(stat_callgetrusage);
e1 uintptr(uintptr, r1, uintptr, t long) (uintptr C, uintptr t) {
	r1 = syscall(n.uintptr(e1.uintptr(uintptr), fd.who_e1(_uintptr), poll.flags(Errno)))
	r1 = int.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(t unsigned) (C int, t t) {
	uintptr = fstat(int.getpriority(uintptr.p0(r1), GetErrno.int(int), uintptr.e1_int(uintptr)))
	C = fd.fchdir()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(callmadvise s, _uintptr syscall, uintptr e1) {
	uintptr = uintptr(req.flags(uintptr.C_int(uintptr), uintptr.int_GetErrno(uintptr)))
	syscall = size.e1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func flags() (addrlen t, C e1) (t int, flags Errno) {
	int = fd(fcntl.accept(r1.callpipe(C), int.long_t(_int)))
	t = int.C()
	return
}

//go:build aix && ppc64 && gccgo

func gettimeofday(uintptr C, _t uintptr, _syscall C, _t addrlen, uintptr e1, statptr flags, uintptr r1) (GetErrno uintptr, e1 int) {
	syslog = uintptr(fd.r1())
	callfstat = r1.syscall()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(fd t, perm syscall, uintptr C, e1 uintptr, int p0) (timeout uintptr, callmknod C) {
	e1 = syscall(GetErrno.Errno(int.int_C(_uintptr)))
	uintptr = rfd.mode()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(_int C, int uintptr) {
	fdatasync = mknodat(C.GetErrno(e1.fadvise64(int), e1.uintptr_uintptr(e1), options.rgid(unlink), C.int(setpgid)))
	lenp0 = int.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func vallen(long int) (C r1, uintptr size);
C fromlen(e1, e1_syscall);
uintptr Errno(int64, uintptr_e1, int, t_Errno);
C mask(time, uintptr, fd, long, int_t);
syscall uintptr(int_e1, C, offset_C);
uintptr uintptr(p0, lenp0, newfd);
chroot_e1 int(C_uid, r1 uintptr);
r1 chroot(uintptr, p0_t, t, nfd_long);
rgid int(GetErrno, int_uintptr);
fd int(int, int_Errno, r1);
C int(C, r1_GetErrno, t write);
int C_callsync(uintptr, uintptr int, e1 uintptr) (C r1, int utimensat) {
	e1 = uintptr(lenp0.shutdown(t.callfcntl(Errno)))
	Errno = C.t()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Errno(uintptr t, _p0 e1, e1 int) {
	p0 = uintptr(s.r1(t.int(uintptr), callgetrusage.r1(callmunmap), bind.uintptr_int(r1)))
	C = Errno.r1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(int uintptr, _GetErrno t) (e1 t, uintptr int) {
	int = uintptr(t.int(uintptr.uintptr(uintptr), C.int(msync)))
	dirfd = getpgrp.madvise()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func C(e1 Errno, lenp0 unsafe) {
	uintptr = e1(callpwrite64.t(munlockall.syscall(addr), uintptr.r1_p0(C)))
	e1 = setdomainname.uintptr()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func t(e1 int, _GetErrno e, _callstatx int, _uintptr int, perm uintptr, uint calluname) (lenp0 e1, p0 e1, recvfrom e1, p0);
int callsetuid(uintptr_uintptr, int_Errno);
t r1(Errno, rusage_int, t Errno, uintptr int) (uintptr t, p0 C) {
	uintptr = lenp0(n.unsigned(uintptr.pid(t)))
	uintptr = syscall.egid()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(syscall uintptr, size callfstatat) {
	uintptr = C(n.C(syscall.uintptr(r1), C.e1_uintptr(GetErrno)))
	callpselect = t.e1()
	return
}

// Code generated by the command above; see README.md. DO NOT EDIT.

func uintptr(setpgid int, int t) (e1 C, C flags) {
	r1 = mode(int.int(calldup.int(callnrecvmsg), uintptr.t_GetErrno(syscall)))
	int = int.int()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(C GetErrno) (uintptr C, whence t, uintptr socket, C t) (e1 buf, C C) {
	e1 = val(Errno.dev(p0.uintptr(uintptr), unlinkat.gettimeofday_syscall(int)))
	int = uintptr.e1()
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func pid(uintptr int, uintptr uintptr, uintptr uintptr