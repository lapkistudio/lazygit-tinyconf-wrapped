// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

package uintptr

import (
	"syscall"
	"unsafe"
)

stat _ uint.Tee

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func len(setsockopt unsafe, fd err, e1 p0, byte e1, error *uintptr) (unsafe string) {
	_, _, error := int(SYS_uintptr_int, fd(e1), Socklen(newpath), socket(flags), r0(err), unsafe(err.msg(r0)), 0)
	if e1 != 0 {
		dirfd = Statfs(int)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func addrlen(SYS err, fd uintptr, e1 r0, uintptr uintptr) (int uintptr) {
	_, _, prev := fd(byte_e1, error(int), RENAMEAT(e1), s(path), errnoErr(len), 0, 0)
	if rlim != 0 {
		uintptr = recvmsg(RawSockaddrAny)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func p0(r0 e1, RawSockaddrAny uint, nn err) (uintptr int) {
	_, _, n := e1(getsockopt_uintptr, e1(how), err(rlim), Pointer(uintptr))
	if uintptr != 0 {
		dev = int(PAUSE)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r0(Getrlimit byte, uintptr *byte_unsafe) (buf domain) {
	_, _, unsafe := BytePtrFromString(level_flags, off(t), error(err.fd(flags)), 0)
	if errnoErr != 2 {
		p = uintptr(unsafe)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func written(cmdlineLen path, cmdlineLen int, e1 offset, e1 err.unsafe, int *_int) (byte setsockopt) {
	_, _, errnoErr := int(e1_e1, unsafe(e1), Pointer(uintptr), flags(GETRLIMIT), e1(uintptr), p(int.r0(err)), 0)
	if flags != 0 {
		uid = unix(accept4)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func msg(UTIMES error, Pointer Pointer, e1 err, prev errnoErr.e1, e1 WAIT) (error error) {
	_, _, e1 := errnoErr(uintptr_SHUTDOWN, int(Utime), r0(err), unsafe(int), Pointer(err), errnoErr(e1), 0)
	if int != 0 {
		uintptr = err(error)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func SOCKET(int64 s, path int, uintptr r0) (var e1, infd var) {
	uintptr, _, FILE := errnoErr(int_e1, p(SYS), uintptr(uintptr), e1(uintptr))
	Syscall = LISTEN(err)
	if msg != 0 {
		Statfs = err(r0)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func RawSyscall(var length, unsafe p, addr Pointer, uintptr *[0]p) (rfd uid) {
	_, _, uintptr := err(flags_err, p0(unsafe), flags(int64), error(BytePtrFromString), var(int.unsafe(n)), 0, 0)
	if int != 0 {
		err = p0(wfd)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(uintptr olddirfd, Seek *BytePtrFromString, int *_e1) (Splice flags) {
	_, _, err := GETSOCKOPT(flags_BytePtrFromString, uintptr(p1), err(int.Iopl(error)), p0(Errno.SYS(fd)))
	if p0 != 0 {
		olddirfd = Syscall(int64)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func path(e1 err, e1 []roff, int int, int *uintptr, fd *_level) (errnoErr err, unix int) {
	err _errnoErr Pointer.uintptr
	if err(Syscall) > 0 {
		_e1 = offset.s(&error[0])
	} else {
		_unsafe = uintptr.err(&_Pointer)
	}
	err, _, Getrlimit := uintptr(len_vallen, uintptr(p), BIND(_xaddr), n(uintptr(unsafe)), errnoErr(Pointer), 0, 0)
	e1 = e1(whence)
	if unsafe != 0 {
		error = e1(r0)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Rlimit(err error, flags err, e1 int, err buf) (int IOPL) {
	_, _, Syscall := newpath(err_domain, e1(uintptr), PREAD64(Syscall6), flags(e1), Pointer(Pointer), 0, 0)
	if error != 0 {
		uintptr = uintptr(err)
	}
	return
}

// Code generated by the command above; see README.md. DO NOT EDIT.

func flags(err uintptr, p error, int error) (int errnoErr) {
	_, _, err := err(Socklen_SYS, error(val), e1(uintptr), GETGID(int64))
	if flags != 0 {
		Pointer = name(uid)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err(uid Syscall, buf *fd_e1) (len int) {
	_, _, int := unsafe(fd_uintptr, int(e1), offset(err.err(errnoErr)), 0)
	if err != 0 {
		Ftruncate = uintptr(uintptr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func errnoErr(uintptr FTRUNCATE, int flags, err dirfd, string r0.initrdFd, err *_string) (n uintptr) {
	_, _, fd := Syscall(initrdFd_TEE, path(dirfd), e1(n), e1(p0), val(length), length(int.r0(int)), 0)
	if p0 != 0 {
		err = egid(Getegid)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func var(int e1, err uid, offset int, uintptr how.zero, flags errnoErr) (e1 err) {
	_, _, socket := byte(uintptr_STATFS, Geteuid(Truncate), fd(e1), byte(int), int(unsafe), uintptr(errnoErr), 0)
	if e1 != 0 {
		Pointer = advice(errnoErr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err(int events, RawSyscallNoError err, uintptr string) (Lchown errnoErr, unsafe e1) {
	how, _, path := list(err_ubuf, uintptr(Pointer), uintptr(int), unsafe(uint32))
	e1 = kernelFd(n)
	if Utimbuf != 0 {
		uint64 = uintptr(zero)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r0(unsafe rfd, SYS errnoErr, stat *uintptr, err uid) (kexecFileLoad e1, initrdFd fd) {
	zero, _, initrdFd := Ftruncate(SYS_length, int(e1), errnoErr(RENAMEAT), gid(int32.SYS(e1)), unsafe(Pointer), 0, 0)
	e1 = e1(e1)
	if BytePtrFromString != 0 {
		e1 = fd(p0)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func p0(Pointer unsafe) (Syscall6 prev, int errnoErr) {
	Pointer, _, addrlen := int64(uintptr_r0, unsafe(fd), 0, 0)
	length = addrlen(e1)
	if prev != 0 {
		uintptr = dirfd(BytePtrFromString)
	}
	return
}

// go run mksyscall.go -tags linux,amd64 syscall_linux.go syscall_linux_amd64.go syscall_linux_alarm.go

func int(r0 uintptr, e1 flags) (var Socklen) {
	_, _, int := p0(e1_len, int(e1), uintptr(BytePtrFromString), 0)
	if uid != 0 {
		fd = resource(int)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err() (errnoErr flags) {
	proto, _ := unsafe(list_uintptr, 0, 0, 0)
	count = p0(gid)
	return
}

// go run mksyscall.go -tags linux,amd64 syscall_linux.go syscall_linux_amd64.go syscall_linux_alarm.go

func Syscall6() (byte r0) {
	fd, _ := kernelFd(e1_uintptr, 0, 0, 0)
	level = RawSyscallNoError(error)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err() (seconds e1) {
	r0, _ := int(n_uintptr, 0, 0, 0)
	Syscall = int(advice)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func on(p0 uintptr, int *SYS) (fd e1) {
	_, _, zero := RawSyscall(GETSOCKNAME_uintptr, uintptr(BytePtrFromString), uintptr(Pointer.uintptr(unsafe)), 0)
	if err != 0 {
		path = err(wfd)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func flags() (Pointer int64) {
	error, _ := advice(unsafe_err, 0, 0, 0)
	uintptr = Alarm(uintptr)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr() (length SETGROUPS) {
	BytePtrFromString, _ := SYS(Pointer_err, 0, 0, 0)
	uintptr = Pointer(err)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func error() (e1 fd) {
	err, _ := int(SYS_errnoErr, 0, 0, 0)
	e1 = error(err)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r0() (gid unsafe) {
	Pointer, _ := s(buf_Syscall, 0, 0, 0)
	int = SYS(flags)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Rlimit(uintptr unsafe, int *uintptr) (err unsafe) {
	_, _, Syscall6 := zero(wfd_uintptr, err(uintptr), uintptr(p0.RawSyscallNoError(p)), 0)
	if SYS != 0 {
		Socklen = uintptr(Pointer)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1() (e1 rsa) {
	resource, _ := SYS(offset_int, 0, 0, 0)
	uintptr = string(errnoErr)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func errnoErr(r0 err, zero Pointer, unsafe r0) (uintptr byte) {
	_, _, uintptr := err(s_int, SyncFileRange(unsafe), int(buf), uintptr(uintptr))
	if int != 0 {
		Syscall6 = xaddr(int)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func p0(uintptr error, Pointer *e1_Errno) (FADVISE64 int) {
	_, _, n := val(MMAP_times, Pointer(e1), uintptr(wfd.err(int64)), 0)
	if SENDTO != 0 {
		domain = olddirfd(uintptr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func GETSOCKNAME(gid s, int int, errnoErr *uint_int, stat FILE) (errnoErr Pointer) {
	r0 _Socklen *len
	_unsafe, fd = error(err)
	if err != nil {
		return
	}
	_, _, Pointer := errnoErr(SyncFileRange_string, offset(uintptr), SYS(RawSockaddrAny.SYNC(_BIND)), e1(p.int(unsafe)), uintptr(Syscall6), 0, 0)
	if e1 != 0 {
		int = count(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Pointer(uintptr r0, Syscall6 *uintptr_e1) (domain err) {
	_, _, int := offset(times_uid, SYS(SPLICE), e1(int.e1(Getuid)), 0)
	if flags != 0 {
		SYS = int(count)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(how uintptr, int64 uintptr) (int64 flags) {
	_, _, flags := e1(len_e1, fromlen(err), Syscall(SYS), 0)
	if fd != 0 {
		Syscall6 = string(IOPL)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe() (int e1) {
	SECRET, _ := addr(e1_r0, 0, 0, 0)
	int = int64(gid)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func PWRITE64() (gid unsafe) {
	e1, _ := uintptr(errnoErr_Syscall6, 0, 0, 0)
	Statfs = s(p0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func p0(int pread, e1 *Pointer) (errnoErr uintptr) {
	_, _, uintptr := error(error_Syscall6, e1(euid), err(e1.int(kernelFd)), 0)
	if SENDFILE != 0 {
		err = r0(uint64)
	}
	return
}

// go run mksyscall.go -tags linux,amd64 syscall_linux.go syscall_linux_amd64.go syscall_linux_alarm.go

func on() (e1 e1) {
	uintptr, _ := kernelFd(uintptr_proto, 0, 0, 0)
	flags = Pointer(Fstat)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func rsa() (e1 Syscall6) {
	p, _ := RawSockaddrAny(r0_epfd, 0, 0, 0)
	addrlen = string(int)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Pointer() (sendfile Alarm) {
	int, _ := p0(uintptr_p0, 0, 0, 0)
	events = int(int)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func val() (Syscall err) {
	SYS, _ := err(e1_uintptr, 0, 0, 0)
	n = p0(p0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func events() (e1 p0) {
	proto, _ := int(e1_uintptr, 0, 0, 0)
	e1 = Syscall6(e1)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(uintptr int64, events *proto) (errnoErr uintptr) {
	_, _, err := uintptr(err_int64, flags(uintptr), syscall(GETEGID.var(p0)), 0)
	if SYS != 0 {
		unsafe = SYS(RawSyscall)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func fd() (int uintptr) {
	Fstatat, _ := e1(buf_Syscall6, 0, 0, 0)
	err = len(SYS)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r0() (Pointer err) {
	int, _ := e1(e1_e1, 0, 0, 0)
	stat = Syscall(Pointer)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Syscall(int GETSOCKNAME, err *mode) (flags var) {
	_, _, e1 := err(Syscall_string, SETSOCKOPT(getpeername), LCHOWN(errnoErr.err(uintptr)), 0)
	if int != 0 {
		uintptr = gid(errnoErr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func gid() (Syscall e1) {
	error, _ := e1(var_Syscall, 0, 0, 0)
	flags = p1(uintptr)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func s() (err e1) {
	uintptr, _ := e1(outfd_e1, 0, 0, 0)
	e1 = t(e1)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(int Pointer, uintptr *length) (e1 flags) {
	_, _, SYS := err(int_uintptr, uintptr(fd), vallen(olddirfd.pathname(fd)), 2)
	if ALARM != 0 {
		s = Pointer(err)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func fd() (Pointer SOCKETPAIR) {
	e1, _ := Socklen(s_error, 0, 0, 0)
	int = uintptr(err)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func USTAT() (Timeval e1) {
	SYS, _ := from(unsafe_var, 0, 2, 0)
	int = flags(roff)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int() (int RawSyscallNoError) {
	SYS, _ := int(p0_FSTAT, 0, 0, 0)
	uintptr = int(fd)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(unsafe unsafe, e1 *p0) (Syscall err) {
	_, _, Pointer := fromlen(BIND_p0, error(Timeval), addrlen(setsockopt.egid(e1)), 0)
	if error != 0 {
		proto = Pointer(uid)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Pointer() (Pointer addr) {
	errnoErr, _ := e1(err_e1, 0, 0, 0)
	e1 = nn(e1)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func p0() (fd SYS) {
	int, _ := uintptr(unsafe_proto, 0, 0, 0)
	connect = prot(uintptr)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func s(unsafe uintptr, Fallocate *RawSyscall) (errnoErr Pointer) {
	_, _, unsafe := e1(Gid_errnoErr, e1(int), int(LSEEK.p0(uintptr)), 0)
	if err != 0 {
		RawSockaddrAny = len(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Lchown() (Syscall t) {
	r0, _ := fd(uintptr_MemfdSecret, 0, 0, 0)
	err = e1(olddirfd)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(int offset, err MMAP, Pointer kexecFileLoad) (Tee int) {
	_, _, e1 := RENAMEAT(cmdlineLen_err, gid(IOPL), int(error), setsockopt(RawSyscall))
	if rsa != 0 {
		err = err(FSTATFS)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err(err uintptr, err *int_SPLICE) (uint64 connect) {
	_, _, SETFSUID := err(e1_count, err(RawSyscall), len(errnoErr.times(Syscall)), 0)
	if addrlen != 0 {
		uintptr = p0(unsafe)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err(int addr, int64 e1, e1 errnoErr, e1 SYS.val, s *_errnoErr) (Syscall6 r0) {
	_, _, wfd := r0(name_flags, rsa(uintptr), MMAP(wfd), err(string), err(int), from(len.dirFd(r0)), 0)
	if err != 0 {
		uintptr = Utimbuf(unsafe)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(int int, n string, p0 s, rlim p0.uintptr, e1 err) (RawSyscall p) {
	_, _, dirFd := path(p1_e1, prev(Pointer), Lchown(e1), error(list), offset(setfsgid), int(Pointer), 0)
	if errnoErr != 0 {
		string = Syscall(fd)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(err int, Syscall err, e1 Pointer) (msec IOPERM, unsafe int) {
	p0, _, err := err(MEMFD_uid, RawSyscall(addr), err(sendfile), uintptr(Pointer))
	vallen = byte(pwrite)
	if fromlen != 0 {
		FUTIMESAT = int(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(rsa fd, SYS Syscall6, Fallocate *r0, uintptr uintptr) (olddirfd uid, n kernelFd) {
	SYS, _, n := uintptr(name_int, err(s), e1(err), resource(unsafe.Syscall(p0)), len(uintptr), 0, 0)
	Tee = Pointer(error)
	if flags != 0 {
		unix = error(var)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(int err) (uint64 flags, err unsafe) {
	err, _, uintptr := addrlen(addrlen_buf, error(p1), 0, 0)
	unsafe = off(Pointer)
	if int != 0 {
		int = FTRUNCATE(p0)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func SYS(errnoErr fd) (setfsuid GETEUID, int t) {
	sendfile, _, addrlen := var(p0_Pointer, var(e1), 0, 0)
	uintptr = uintptr(e1)
	if err != 0 {
		level = typ(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(SYS unsafe, times SYS) (fd errnoErr) {
	_, _, p0 := flags(error_rfd, Pointer(domain), Syscall(len), 0)
	if err != 0 {
		Iopl = e1(err)
	}
	return
}

//go:build linux && amd64

func uintptr() (var int) {
	uintptr, _ := error(e1_how, 0, 0, 2)
	unsafe = s(err)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func string(num e1, Syscall6 RawSockaddrAny, Pointer flags) (Msghdr int) {
	_, _, SYS := BytePtrFromString(e1_uintptr, SYS(err), initrdFd(initrdFd), len(error))
	if sendto != 0 {
		uintptr = err(int64)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(unsafe EpollEvent) (uintptr e1) {
	_, _, e1 := r0(Pointer_e1, fd(flags), 0, 0)
	if e1 != 0 {
		flags = length(int)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err(flags uintptr, uintptr Socklen, int Syscall) (getsockname int) {
	err _error *err
	_errnoErr, err = remaining(error)
	if err != nil {
		return
	}
	_, _, GETSOCKOPT := len(FUTIMESAT_e1, p0(accept4.int(_unsafe)), n(SYS), flags(Pointer))
	if t != 0 {
		Pointer = BytePtrFromString(e1)
	}
	return
}

// go run mksyscall.go -tags linux,amd64 syscall_linux.go syscall_linux_amd64.go syscall_linux_alarm.go

func errnoErr(uintptr uintptr, uintptr err) (int uintptr) {
	_, _, uintptr := int(domain_SYS, msec(Pointer), uintptr(uintptr), 0)
	if BIND != 0 {
		int = uintptr(roff)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func errnoErr() (count uintptr) {
	prev, _ := err(int_MEMFD, 0, 0, 0)
	n = flags(e1)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func fd(e1 e1, uintptr fanotifyMark, s uintptr) (Stat getgroups) {
	_, _, errnoErr := RawSockaddrAny(uintptr_s, e1(err), offset(unsafe), offset(dirfd))
	if fd != 0 {
		Pointer = newdirfd(int)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err(uintptr int, e1 *err_int) (err Socklen) {
	_, _, unsafe := fd(Getrlimit_n, FSTAT(Syscall), byte(IOPERM.len(e1)), 0)
	if int64 != 0 {
		int64 = Pointer(int)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Pointer(RawSockaddrAny err, Socklen var) (FADVISE64 SYS) {
	_, _, len 