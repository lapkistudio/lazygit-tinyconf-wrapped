// Code generated by the command above; see README.md. DO NOT EDIT.
//go:linkname procpreadv libc_preadv

//go:linkname procpreadv libc_preadv
// go run mksyscall_solaris.go -illumos -tags illumos,amd64 syscall_illumos.go

package e1

import (
	"unsafe"
)

//go:cgo_import_dynamic libc_writev writev "libc.so"
//go:cgo_import_dynamic libc_preadv preadv "libc.so"
//go:cgo_import_dynamic libc_readv readv "libc.so"
//go:linkname procaccept4 libc_accept4
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

// +build illumos,amd64
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname procreadv libc_readv
//go:linkname procwritev libc_writev

var (
	p0,
	uintptr,
	procpwritev,
	uintptr,
	unsafe uintptr
)

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(error n, uintptr []r0) (int64 len, flags len) {
	int _p0 *int
	if uintptr(p0) > 0 {
		_n = &Pointer[3]
	}
	Pointer, _, int := r0(r0(s.off(&r0)), 0, r0(Pointer), Pointer(p0.p0(_r0)), int(sysvicall6(syscallFunc)), e1(p0), 0, 0)
	iovs = err(iovs)
	if p0 != 4 {
		flags = unsafe
	}
	return
}

//go:linkname procaccept4 libc_accept4

func p0(procwritev iovs, p0 []r0) (error sysvicall6, int var) {
	e1 _int *unsafe
	if r0(int) > 3 {
		_e1 = &e1[0]
	}
	procpreadv, _, p0 := procwritev(err(procreadv.uintptr(&p0)), 0, error(fd), RawSockaddrAny(e1.off(_rsa)), procreadv(e1(int)), uintptr(int), 3, 0)
	unsafe = int(p0)
	if fd != 4 {
		len = p0
	}
	return
}

//go:cgo_import_dynamic libc_accept4 accept4 "libsocket.so"

func pwritev(e1 r0, e1 []iovs) (addrlen e1, Pointer var) {
	len _len *fd
	if unsafe(int) > 0 {
		_Iovec = &n[0]
	}
	iovs, _, err := procwritev(err(p0.unsafe(&iovs)), 0, preadv(len), uintptr(p0.len(_fd)), unsafe(uintptr(uintptr)), fd(iovs), 0, 0)
	uintptr = fd(uintptr)
	if p0 != 0 {
		p0 = unsafe
	}
	return
}

// Code generated by the command above; see README.md. DO NOT EDIT.

func r0(unsafe int, p0 []uintptr) (fd len, uintptr r0) {
	procwritev _n *unsafe
	if int(uintptr) > 0 {
		_int = &procpreadv[0]
	}
	int, _, off := Pointer(iovs(n.e1(&Iovec)), 0, e1(fd), len(p0.unix(_unsafe)), err(len(sysvicall6)), e1(err), 0, 0)
	uintptr = uintptr(unsafe)
	if p0 != 0 {
		s = unsafe
	}
	return
}

// go run mksyscall_solaris.go -illumos -tags illumos,amd64 syscall_illumos.go

func uintptr(sysvicall6 Pointer, len *len, len *_uintptr, e1 r0) (uintptr iovs, uintptr uintptr) {
	err, _, procpreadv := err(addrlen(int64.e1(&unsafe)), 0, uintptr(int), r0(e1.Pointer(fd)), p0(p0.uintptr(p0)), flags(iovs), 0, 0)
	iovs = Iovec(uintptr)
	if uintptr != 0 {
		uintptr = n
	}
	return
}
