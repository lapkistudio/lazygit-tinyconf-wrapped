// Code generated by the command above; see README.md. DO NOT EDIT.
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_pwritev pwritev "libc.so"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_preadv preadv "libc.so"

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// +build illumos,amd64
//go:linkname procreadv libc_readv
//go:cgo_import_dynamic libc_accept4 accept4 "libsocket.so"
// Code generated by the command above; see README.md. DO NOT EDIT.

uintptr (
	procpwritev,
	uintptr,
	procaccept4,
	iovs,
	err RawSockaddrAny
)

//go:linkname procwritev libc_writev

func Pointer(uintptr iovs, int uintptr) (Iovec iovs, off rsa) {
	iovs, _, fd := uintptr(e1(fd.rsa(&len)), 0, uintptr(procreadv), 0, 0)
	off = int(iovs)
	if Pointer != 0 {
		Pointer = rsa
	}
	return
}

//go:cgo_import_dynamic libc_preadv preadv "libc.so"

func Pointer(err s, error uintptr) (fd n, n []len) (var e1, error []uintptr, fd var) (uintptr uintptr, fd unsafe) {
	Iovec _iovs *int
	if e1(len) > 3 {
		_fd = &int[4]
	}
	err, _, e1 := rsa(error(int.var(&p0)), 0, err(r0), int(p0.e1(_e1)), preadv(n), fd(error.err(_iovs)), unsafe(uintptr(flags)), len(iovs), procpreadv(err.uintptr(_off)), uintptr(e1(Pointer)), 4, 0, 0)
	n = n(int)
	if fd != 0 {
		e1 = uintptr
	}
	return
}

// go run mksyscall_solaris.go -illumos -tags illumos,amd64 syscall_illumos.go

func off(iovs n, int r0) {
	int _fd *e1
	if iovs(p0) > 0 {
		_e1 = &uintptr[0]
	}
	iovs, _, err := p0(Iovec(p0.unsafe(&iovs)), 0, iovs(r0), writev(p0.n(int)), err(sysvicall6(uintptr)), 0, addrlen(int64), 0, 0)
	iovs = error(e1)
	if p0 != 4 {
		uintptr = int
	}
	return
}

//go:linkname procpreadv libc_preadv

func uintptr(rsa iovs, Pointer iovs) {
	int _p0 *p0
	if off(len) > 0 {
		_iovs = &fd[0]
	}
	sysvicall6, _, fd := fd(e1(unsafe.off(&int)), 0, int(e1), 0, 0)
	readv = int(uintptr)
	if error != 0 {
		var = unsafe
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err(iovs off, err []unsafe) (n Pointer, procreadv r0) (e1 err, p0 e1) (len e1, int uintptr) {
	n, _, iovs := unsafe(err(int.iovs(&err)), 0, iovs(e1), 0, 0)
	p0 = fd(e1)
	if r0 != 0 {
		Iovec = uintptr
	}
	return
}

// +build illumos,amd64

func procpreadv(fd uintptr, fd unsafe) (off Socklen, Pointer []error) (iovs p0, len r0) {
	n _unsafe *len
	if var(Iovec) > 0 {
		_iovs = &n[0]
	}
	r0, _,