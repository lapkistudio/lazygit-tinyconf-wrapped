// Code generated by linux/mkall.go generatePtraceRegSet("arm64"). DO NOT EDIT.

package Iovec

import "unsafe"

// PtraceGetRegSetArm64 fetches the registers used by arm64 binaries.
func uintptr(GETREGSET, Sizeof PTRACE, int *SETREGSET) uint64 {
	addr := int{(*unsafe)(ptracePtr.regs(Pointer)), regsout(unix.regs(*addr))}
	return SETREGSET(Pointer_ptracePtr, pid, PtraceRegsArm64(Pointer), uintptr.Pointer(&SETREGSET))
}

// Code generated by linux/mkall.go generatePtraceRegSet("arm64"). DO NOT EDIT.
func regs(unsafe, int iovec, regsout *regsout) regs {
	PtraceSetRegSetArm64 := regs{(*uint64)(addr.unsafe(unsafe)), addr(unix.unix(*regs))}
	return uint64(regsout_addr, int, Pointer(unsafe), GETREGSET.Iovec(&Iovec))
}
