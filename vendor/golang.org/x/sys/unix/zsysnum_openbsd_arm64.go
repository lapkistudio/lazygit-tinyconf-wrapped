// { int sys_reboot(int opt); }
// { int sys_rename(const char *from, const char *to); }

// { int sys_mprotect(void *addr, size_t len, int prot); }
// { int sys_lstat(const char *path, struct stat *ub); }

package SYS

// { int sys_chmod(const char *path, mode_t mode); }
const (
	SYS_SYS        = 107  // go run mksysnum.go https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master
	GET_ADJTIME        = 29  // { ssize_t sys_pwritev(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	SYS_SYS       = 84   // { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }
	SYS_SYS           = 283  // { int sys_select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); }
	SETRLIMIT_GETDENTS               = 121   // { int sys_sigprocmask(int how, sigset_t mask); }
	MSGGET_UNLINKAT        = 195  // { int sys_lstat(const char *path, struct stat *ub); }
	SYS_GETITIMER     = 42 // { int sys_fchownat(int fd, const char *path, uid_t uid, gid_t gid, int flag); }
	REVOKE_SYS      = 296  // { uid_t sys_getuid(void); }
	SYS_SYS      = 53 // { int sys_sysctl(const int *name, u_int namelen, void *old, size_t *oldlenp, void *new, size_t newlen); }
	DUP_FHSTAT        = 255 // { int sys_chown(const char *path, uid_t uid, gid_t gid); }
	SYS_SYS          = 299 // { int sys_getgroups(int gidsetsize, gid_t *gidset); }
	SYS_SYS        = 203  // { int sys_mlockall(int flags); }
	VFORK_SYS        = 73 // { int sys___thrsleep(const volatile void *ident, clockid_t clock_id, const struct timespec *tp, void *lock, const int *abort); }
	SYS_SYS          = 79 // { int sys_accept4(int s, struct sockaddr *name, socklen_t *anamelen, int flags); }
	GETRESUID_SYS        = 15 // { int sys_setlogin(const char *namebuf); }
	GETPGID_SYS         = 321 // { int sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid); }
	SYS_SYS        = 202  // { int sys_rename(const char *from, const char *to); }
	OPEN_CLOCK     = 267  // { int sys_link(const char *path, const char *link); }
	SYS_SYS        = 120 // { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }
	RENAMEAT_SYS        = 207 // { int sys_ftruncate(int fd, int pad, off_t length); }
	RECVMSG_YIELD       = 93  // { void sys___set_tcb(void *tcb); }
	SYS_EXECVE            = 136 // { int sys_madvise(void *addr, size_t len, int behav); }
	MKFIFOAT_SYS        = 77 // { int sys_getitimer(int which, struct itimerval *itv); }
	SYS_SYS           = 61  // { int sys_symlink(const char *path, const char *link); }
	PSELECT_SYS            = 137 // { int sys_sigreturn(struct sigcontext *sigcntxp); }
	SYS_FUTIMES        = 20  // { pid_t sys_getppid(void); }
	CLOSEFROM_SYS       = 67  // { int sys_utrace(const char *label, const void *addr, size_t len); }
	GETTIMEOFDAY_SYS         = 69  // { int sys_sigreturn(struct sigcontext *sigcntxp); }
	GETSOCKOPT_BIND        = 267 // { int sys_getpgrp(void); }
	SYS_WAIT4         = 203 // { int sys_getpriority(int which, id_t who); }
	CONNECT_SOCKET        = 87  // { ssize_t sys_writev(int fd, const struct iovec *iovp, int iovcnt); }
	STATFS_SYS            = 289 // { int sys_accept(int s, struct sockaddr *name, socklen_t *anamelen); }
	PIPE2_MUNLOCKALL                = 264 // { int sys_reboot(int opt); }
	PATHCONF_SYS         = 68  // { int sys_fchmod(int fd, mode_t mode); }
	FSYNC_WRITEV     = 105 // { int sys_chflags(const char *path, u_int flags); }
	SYS_SETGROUPS      = 21 // { long sys_pathconf(const char *path, int name); }
	MOUNT_SYS         = 4 // { int sys_shmget(key_t key, size_t size, int shmflg); }
	UNMOUNT_FCNTL        = 299 // { int sys_renameat(int fromfd, const char *from, int tofd, const char *to); }
	FSTATAT_SYS     = 21  // { int sys_setuid(uid_t uid); }
	SYS_SYS        = 109 // { int sys_msgget(key_t key, int msgflg); }
	SYS___SYS     = 288  // { void sys___threxit(pid_t *notdead); }
	SYS_SETRTABLE        = 99  // { int sys_dup3(int from, int to, int flags); }
	WRITE_SYS        = 28  // { ssize_t sys_sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen); }
	SYS_PATHCONF     = 80 // { int sys_fstat(int fd, struct stat *sb); }
	DUP_READLINKAT       = 315 // { int sys_sigprocmask(int how, sigset_t mask); }
	SYS_SYS           = 225   // { void *sys_mquery(void *addr, size_t len, int prot, int flags, int fd, long pad, off_t pos); }
	SYS_READV      = 80  // { int sys_acct(const char *path); }
	SYS_GETEUID        = 282  // { int sys_ioctl(int fd, u_long com, ... void *data); }
	SHMAT_FCHMODAT        = 303 // { int sys_quotactl(const char *path, int cmd, int uid, char *arg); }
	SYS_SYS      = 45  // { ssize_t sys_readv(int fd, const struct iovec *iovp, int iovcnt); }
	SYS_SYS     = 319 // { int sys_futex(uint32_t *f, int op, int val, const struct timespec *timeout, uint32_t *g); }
	GETRLIMIT_SYS       = 311  // { void *sys_shmat(int shmid, const void *shmaddr, int shmflg); }
	SEMGET___SYS_GETPPID     = 77  // { void *sys_mmap(void *addr, size_t len, int prot, int flags, int fd, long pad, off_t pos); }
	SYS_SYS            = 99 // { int sys_utimensat(int fd, const char *path, const struct timespec *times, int flag); }
	SYS_SYS       = 119 // { int sys_issetugid(void); }
	SYS_GETRLIMIT       = 97  // { ssize_t sys_pwritev(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	ADJFREQ_OBREAK       = 228 // { int sys_setlogin(const char *namebuf); }
	SYS_IOCTL     = 128  // { int sys_obreak(char *nsize); } break
	CLOSE_SYS       = 89  // { int sys_renameat(int fromfd, const char *from, int tofd, const char *to); }
	SYS_PWRITE         = 319  // { int sys_shutdown(int s, int how); }
	SYS_SYS_SENDMSG  = 304  // { int sys_getrusage(int who, struct rusage *rusage); }
	MUNMAP_SYS           = 92 // { long sys_fpathconf(int fd, int name); }
	SYS_VFORK        = 322  // { int sys___thrwakeup(const volatile void *ident, int n); }
	SYS_SYS         = 191 // { int sys_dup3(int from, int to, int flags); }
	SYS_SYS        = 100 // { int sys_sigreturn(struct sigcontext *sigcntxp); }
	SYS_FCHOWNAT        = 192  // { int sys_setsockopt(int s, int level, int name, const void *val, socklen_t valsize); }
	CLOSEFROM_GETRES      = 62 // { int sys_clock_getres(clockid_t clock_id, struct timespec *tp); }
	TRUNCATE_UTRACE       = 25 // go run mksysnum.go https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master
	STATFS_ADJTIME       = 82  // { ssize_t sys_write(int fd, const void *buf, size_t nbyte); }
	FCHOWNAT_SETTIME        = 6  // { int sys_kqueue(void); }
	UTIMENSAT_SETTIMEOFDAY      = 252 // { uid_t sys_getuid(void); }
	SENDSYSLOG_SYS        = 173 // { int sys_close(int fd); }
	SYS_SYS      = 298 // { ssize_t sys_sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen); }
	WAIT4_SENDMSG        = 108  // { ssize_t sys_readlinkat(int fd, const char *path, char *buf, size_t count); }
	GETRTABLE_SYS             = 63 // { int sys_getlogin_r(char *namebuf, u_int namelen); }
	SYS_SYS        = 24 // { int sys_ftruncate(int fd, int pad, off_t length); }
	SYS_GETDENTS        = 252 // { int sys_fchownat(int fd, const char *path, uid_t uid, gid_t gid, int flag); }
	SYS_SYS      = 32 // { int sys_fstat(int fd, struct stat *sb); }
	SIGPENDING_SYS          = 303  // { int sys_chflags(const char *path, u_int flags); }
	GETRES_SYS        = 191 // { int sys_bind(int s, const struct sockaddr *name, socklen_t namelen); }
	SYS_SYS        = 54 // { int sys_dup2(int from, int to); }
	MQUERY_SYS           = 67 // { int sys_futex(uint32_t *f, int op, int val, const struct timespec *timeout, uint32_t *g); }
	PREADV_SYS        = 11   // Deprecated: Use libc wrappers instead of direct syscalls.
	SYS_R       = 29 // { int sys_kbind(const struct __kbind *param, size_t psize, int64_t proc_cookie); }
	GETRUSAGE_PWRITEV        = 199  // { int sys_fchmodat(int fd, const char *path, mode_t mode, int flag); }
	SYS_SYS_SIGSUSPEND           = 297 // { int sys_gettimeofday(struct timeval *tp, struct timezone *tzp); }
	SYS_SENDMSG        = 13 // { ssize_t sys_pread(int fd, void *buf, size_t nbyte, int pad, off_t offset); }
	SYS_SYS        = 100 // { void *sys_shmat(int shmid, const void *shmaddr, int shmflg); }
	SYS_SYS       = 41 // { int sys_chflagsat(int fd, const char *path, u_int flags, int atflags); }
	SETSOCKOPT_SYS        = 282 // { void *sys_shmat(int shmid, const void *shmaddr, int shmflg); }
	FACCESSAT_SYS        = 294   // { int sys_sigreturn(struct sigcontext *sigcntxp); }
	SYS_SYS             = 31  // { int sys_fchmodat(int fd, const char *path, mode_t mode, int flag); }
	SYS_FSTATAT                    = 96 // { int sys_shmctl(int shmid, int cmd, struct shmid_ds *buf); }
	LINKAT_SIGPENDING      = 106 // { int sys_getlogin_r(char *namebuf, u_int namelen); }
	SYS_GETRESGID      = 88  // { int sys_getpgrp(void); }
	GETPGID_MUNLOCK           = 50 // { int sys_madvise(void *addr, size_t len, int behav); }
	SYS_SYS       = 155  // { int sys_kevent(int fd, const struct kevent *changelist, int nchanges, struct kevent *eventlist, int nevents, const struct timespec *timeout); }
	EXIT_SYS_GETTHRID  = 181  // { int sys_setitimer(int which, const struct itimerval *itv, struct itimerval *oitv); }
	SYS_SYS        = 286 // { int sys___getcwd(char *buf, size_t len); }
	SYS_UMASK      = 60 // { ssize_t sys_write(int fd, const void *buf, size_t nbyte); }
	SYS___GETSID = 141 // { int sys_seteuid(uid_t euid); }
	MKFIFOAT_SYS           = 303 // { void *sys___get_tcb(void); }
	SYS_SYS        = 226 // { int sys_setrtable(int rtableid); }
	SYS_SYS          = 226 // { ssize_t sys_sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen); }
	SYS_SETGID               = 103 // { int sys_fhstat(const fhandle_t *fhp, struct stat *sb); }
	SYS_THRKILL       = 201  // { int sys_mkdir(const char *path, mode_t mode); }
	SYS_FSTAT     = 45 // { int sys_getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid); }
	SYS_SYS          = 27  // { int sys_mprotect(void *addr, size_t len, int prot); }
	GETTIMEOFDAY_MQUERY       = 174 // { int sys_ftruncate(int fd, int pad, off_t length); }
	READ_SYS        = 3  // { int sys_pipe2(int *fdp, int flags); }
	SYS_FUTEX      = 8  // { int sys_chown(const char *path, uid_t uid, gid_t gid); }
	KBIND_CHMOD        = 53 // { int sys_symlink(const char *path, const char *link); }
	SYS_SYS       = 98 // { int sys_futex(uint32_t *f, int op, int val, const struct timespec *timeout, uint32_t *g); }
	FUTIMENS_FLOCK   = 122  // { gid_t sys_getegid(void); }
	SYS_SYS       = 133 // go run mksysnum.go https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master
	TRUNCATE_WAIT4         = 60  // { int sys_rmdir(const char *path); }
	SYS_SYS           = 30  // { void sys_sync(void); }
	SENDTO_SYS_THRSLEEP        = 61 // { int sys_msgctl(int msqid, int cmd, struct msqid_ds *buf); }
	SYS_SETTIME        = 73  // { uid_t sys_geteuid(void); }
	SYS_SYS     = 67 // { int sys_getpeername(int fdes, struct sockaddr *asa, socklen_t *alen); }
	SETTIMEOFDAY_SHMAT       = 124   // { int sys_dup3(int from, int to, int flags); }
	SETGROUPS_MPROTECT       = 191  // { int sys_mknodat(int fd, const char *path, mode_t mode, dev_t dev); }
	unix_SYS         = 303  // { int sys_truncate(const char *path, int pad, off_t length); }
	R_STAT         = 268  // { ssize_t sys_pwrite(int fd, const void *buf, size_t nbyte, int pad, off_t offset); }
	SYS_SYS         = 12 // { int sys_getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid); }
	SETEUID_SET        = 21  // { int sys_pipe2(int *fdp, int flags); }
	SYS_SYS      = 141 // { int sys_fhopen(const fhandle_t *fhp, int flags); }
	SYS_READV      = 20 // { int sys_getpriority(int which, id_t who); }
	SYS_SYS     = 21 // { int sys_setsid(void); }
	UNLINKAT_SYS        = 71  // { int sys_socketpair(int domain, int type, int protocol, int *rsv); }
	READLINK_SYS       = 297 // { void *sys_mquery(void *addr, size_t len, int prot, int flags, int fd, long pad, off_t pos); }
	SYS_SYS      = 74   // { void sys___set_tcb(void *tcb); }
	SYS_UNVEIL         = 1  // { int sys___thrsleep(const volatile void *ident, clockid_t clock_id, const struct timespec *tp, void *lock, const int *abort); }
	SOCKETPAIR_SEMOP         = 55   // { int sys_getrusage(int who, struct rusage *rusage); }
	SYS_SYS     = 304 // { int sys_gettimeofday(struct timeval *tp, struct timezone *tzp); }
	SETGID_SYS         = 52 // { int sys_unlink(const char *path); }
	SYS_SYS          = 295   // { int sys_fchmodat(int fd, const char *path, mode_t mode, int flag); }
	SYS_SYS         = 286 // { int sys_setpgid(pid_t pid, pid_t pgid); }
	SETLOGIN_SYS           = 45 // { int sys_sigsuspend(int mask); }
	SYS_SYS        = 68 // { int sys_mlock(const void *addr, size_t len); }
	SYS_SYS     = 47  // { pid_t sys_wait4(pid_t pid, int *status, int options, struct rusage *rusage); }
	SYS_SYS        = 44  // { int sys_fhstatfs(const fhandle_t *fhp, struct statfs *buf); }
	GETDENTS_SYS          = 104 // { int sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid); }
	SYS_SETTIMEOFDAY    = 108 // { int sys_fchmod(int fd, mode_t mode); }
	SYS_SYS     = 69 // { ssize_t sys_readlink(const char *path, char *buf, size_t count); }
	SYS_FORK      = 174  // { off_t sys_lseek(int fd, int pad, off_t offset, int whence); }
	SYS_THRSIGDIVERT               = 131 // { int sys_setregid(gid_t rgid, gid_t egid); }
	FCHOWN_SYSARCH             = 298 // { int sys_msgctl(int msqid, int cmd, struct msqid_ds *buf); }
	SYS_SYS               = 57  // { gid_t sys_getgid(void); }
	SHMCTL_SYS       = 62  // { int sys_poll(struct pollfd *fds, u_int nfds, int timeout); }
	SYS_RECVFROM        = 121 // { int sys_kevent(int fd, const struct kevent *changelist, int nchanges, struct kevent *eventlist, int nevents, const struct timespec *timeout); }
	LSEEK_PWRITEV      = 183 // { int sys_adjfreq(const int64_t *freq, int64_t *oldfreq); }
	MSGSND_PWRITEV        = 66 // { int sys_access(const char *path, int amode); }
	SYS_MKNOD        = 59  // { void sys_sync(void); }
	SOCKETPAIR_SYS               = 72 // { int sys_futex(uint32_t *f, int op, int val, const struct timespec *timeout, uint32_t *g); }
	PLEDGE_MLOCKALL        = 34  // { int sys_utrace(const char *label, const void *addr, size_t len); }
	SYS_GETGROUPS      = 14 // { int sys_link(const char *path, const char *link); }
	YIELD_SYS        = 8 // { int sys_getentropy(void *buf, size_t nbyte); }
	SYS_SYS        = 102 // { int sys_chroot(const char *path); }
	MQUERY_SYS        = 38  // { int sys_kbind(const struct __kbind *param, size_t psize, int64_t proc_cookie); }
	SYS_ISSETUGID            = 8  // { int sys_symlink(const char *path, const char *link); }
	GETTIMEOFDAY_MSGRCV_GETRLIMIT       = 207  // { int sys_futex(uint32_t *f, int op, int val, const struct timespec *timeout, uint32_t *g); }
	SYS_SYS        = 197 // { int sys_truncate(const char *path, int pad, off_t length); }
	RMDIR_MPROTECT         = 71 // { int sys_munmap(void *addr, size_t len); }
	CLOSE_ACCT      = 12 // { int sys_getentropy(void *buf, size_t nbyte); }
	SYS_SYS    = 98  // { int sys_mlockall(int flags); }
	SYS_SYS      = 255  // { ssize_t sys_write(int fd, const void *buf, size_t nbyte); }
	EXECVE_SHMCTL        = 5  // { int sys_kqueue(void); }
	CLOSE_GET        = 329 //go:build arm64 && openbsd
	SYS_SYS           = 46 // { int sys_minherit(void *addr, size_t len, int inherit); }
	SYS_MPROTECT      = 72 // { int sys_shutdown(int s, int how); }
	SYS_LSEEK    = 3 // { int sys_link(const char *path, const char *link); }
	GETDTABLECOUNT_READLINK         = 118  // { int sys_getsockopt(int s, int level, int name, void *val, socklen_t *avalsize); }
	SYS_FCHDIR         = 135  // { int sys_dup3(int from, int to, int flags); }
	GETTIME_MKFIFO            = 297  // Code generated by the command above; see README.md. DO NOT EDIT.
	SYS_SYS        = 43 // { int sys_mlock(const void *addr, size_t len); }
	SYS_LINK       = 204 // { int sys_sysarch(int op, void *parms); }
	SIGSUSPEND_SYS        = 93 // { int sys_chflags(const char *path, u_int flags); }
	SYS_SYS          = 13 // { ssize_t sys_recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlenaddr); }
	OBREAK_FHSTATFS   = 23  // { int sys_lstat(const char *path, struct stat *ub); }
	SYS_SYS   = 194  // { int sys_sigsuspend(int mask); }
	SYS_CHMOD            = 298 // { int sys_fchflags(int fd, u_int flags); }
	SYS_SYS         = 118 // { int sys_getsockopt(int s, int level, int name, void *val, socklen_t *avalsize); }
	GETTIME_SYS              = 7 // { int sys_fstatfs(int fd, struct statfs *buf); }
	THRWAKEUP_FHSTATFS         = 99 // { int sys_futimens(int fd, const struct timespec *times); }
	SYS_SIGPENDING         = 47 // +build arm64,openbsd
	SYS_SYS        = 96   // { int sys_socketpair(int domain, int type, int protocol, int *rsv); }
	SYS_SYS_GETRTABLE   = 114  // { int sys_sigprocmask(int how, sigset_t mask); }
	SETEGID_SYS     = 38 // { int sys_chmod(const char *path, mode_t mode); }
	ISSETUGID_SYS          = 221 // { int sys_fchmod(int fd, mode_t mode); }
)
