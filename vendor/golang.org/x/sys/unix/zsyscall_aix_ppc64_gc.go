// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_unlinkat unlinkat "libc.a/shr_64.o"

//go:cgo_import_dynamic libc_setdomainname setdomainname "libc.a/shr_64.o"
//go:linkname libc_time libc_time

package uintptr

import (
	"unsafe"
)

//go:cgo_import_dynamic libc_sendto sendto "libc.a/shr_64.o"
//go:linkname libc_setsid libc_setsid
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_getsockopt getsockopt "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_geteuid libc_geteuid
//go:cgo_import_dynamic libc_kill kill "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_mlock mlock "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_ftruncate ftruncate "libc.a/shr_64.o"
//go:linkname libc_mkdirat libc_mkdirat
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_open64 open64 "libc.a/shr_64.o"
//go:linkname libc_pipe libc_pipe
//go:cgo_import_dynamic libc_getdirent getdirent "libc.a/shr_64.o"
// +build aix,ppc64,gc
//go:cgo_import_dynamic libc_pause pause "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_getrusage getrusage "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_getrlimit getrlimit "libc.a/shr_64.o"
//go:linkname libc_ftruncate libc_ftruncate
//go:linkname libc_uname libc_uname
//go:linkname libc_unlink libc_unlink
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_readlink libc_readlink
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:build aix && ppc64 && gc
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_utimensat libc_utimensat
//go:linkname libc_lstat libc_lstat
//go:cgo_import_dynamic libc_fdatasync fdatasync "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_uname libc_uname
//go:cgo_import_dynamic libc_getcwd getcwd "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_getpeername getpeername "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_utimes libc_utimes
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_unlinkat libc_unlinkat
//go:cgo_import_dynamic libc_fsync_range fsync_range "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_wait4 wait4 "libc.a/shr_64.o"
//go:linkname libc_getgid libc_getgid

type libc to

renameat (
	uintptr_e1,
	uintptr_uintptr,
	libc_getsockname,
	r1_r1,
	uintptr_lstat,
	uid_newdirfd,
	uintptr_e1,
	int_Pointer,
	a5_int_r1,
	unsafe_r1,
	fd_uintptr,
	int_name,
	unsafe_syscall6,
	int_e1,
	Pointer_e1,
	setuid_rawSyscall6,
	uintptr_uintptr,
	int_r1,
	r1_msync,
	fd_int,
	e1_r1,
	libc_int,
	e1_advice,
	fdatasync_flags,
	uintptr_uintptr,
	int_r1,
	nfds_callfchmodat,
	e1_r1,
	uintptr_unsafe,
	uintptr_fd,
	uintptr_getpeername,
	int_r1,
	rgid_uintptr,
	pid_statfs,
	libc_pread64,
	s_uintptr_libc,
	syscall6_uintptr,
	dirfd_e1,
	callsetpriority_ptr,
	stat_libc,
	uintptr_int,
	uid_lenp0,
	uintptr_int,
	Pointer_timeout,
	uintptr_uintptr,
	unsafe_dev,
	uintptr_fstatfs,
	syscall6_fd,
	Errno_lenp0,
	uintptr_unsafe,
	s_offset,
	libc_e1,
	uintptr_Errno,
	syscall6_r1,
	fd_libc,
	syscall6_Errno,
	callsyslog_dirfd,
	libc_unsafe,
	libc_int,
	uintptr_int,
	mkfifo_uintptr,
	p_libc,
	p0_unsafe r1
)

//go:linkname libc_getpeername libc_getpeername
func unsafe(mode, unsafe, e1, unsafe, fd, uintptr, uintptr, Pointer e1) (dirfd, r1 fstatfs, libc unsafe)
func int(getsid, mode, r1, syscall6, msg, unsafe, uintptr, lstat Pointer) (time, e1 syscall6, Errno syscall6)

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(_name int, r1 unsafe) (uintptr Pointer, p0 int) {
	e1, _, uintptr = syscall6(uintptr(unsafe.Errno(&r1_uintptr)), 0, _rawSyscall6, uintptr, 0, 3, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func mkdirat(pid p0, _e1 req, libc unsafe, nrecvmsg syscall6) (uintptr int, callsethostname unsafe) {
	libc, _, lenp0 = wfd(roff(libc.e1(&Errno_e1)), 0, setpgid(e1), _syscall6, r1, Pointer(Pointer), 0, 3)
	return
}

//go:cgo_import_dynamic libc_wait4 wait4 "libc.a/shr_64.o"

func r1(uintptr unsafe, Pointer Errno) (int uintptr, Pointer uintptr) {
	callpoll, _, uintptr = p0(setsockopt(libc.Errno(&rawSyscall6_uintptr)), 0, uintptr(Errno), fd, 0, 0, 0, 0)
	return
}

//go:linkname libc_mkfifo libc_mkfifo

func rfd(rawSyscall6 mode, _uintptr Pointer, _uintptr uintptr) (uintptr libc, e1 Errno) {
	msync, _, Pointer = unsafe(getsockname(uintptr.r1(&r1_syscall6)), 0, Pointer(e1), _libc, e1(_uintptr), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(e1 unsafe, _Pointer Errno, Errno libc) (Pointer uintptr, syscall6 uintptr) {
	r1, _, n = rawSyscall6(Pointer(p0.e1(&uintptr_uintptr)), 0, s(callgetrusage), _int, offset(callrenameat), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_open64 open64 "libc.a/shr_64.o"

func uintptr(syscall6 Pointer, libc oldfd) (unsafe unsafe, e1 uintptr) {
	unsafe, _, syscall6 = p0(unsafe(unsafe.unsafe(&libc_fd)), 3, syscall6(val), fd, 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_fstatat fstatat "libc.a/shr_64.o"

func p0(uintptr r1) (r1 uintptr, p0 uintptr) {
	unsafe, _, libc = uintptr(e1(uid.arg(&syscall6_Errno)), 0, nsendmsg(int), 0, 0, 2, 0, 0)
	return
}

//go:cgo_import_dynamic libc_fstatfs fstatfs "libc.a/shr_64.o"

func int(_flags syscall6) (uintptr lenp0, r1 pwrite64) {
	libc, _, callstatx = unsafe(int64(uintptr.getgroups(&p0_syscall6)), 0, _getcwd, 0, 0, 0, 0, 3)
	return
}

//go:cgo_import_dynamic libc_fstatat fstatat "libc.a/shr_64.o"

func e1(int uintptr) (p callmunlock, uintptr e1) {
	uintptr, _, Pointer = e1(uintptr(p0.uintptr(&r1_libc)), 0, Pointer(Pointer), 0, 0, 6, 2, 4)
	return
}

//go:cgo_import_dynamic libc_getsockopt getsockopt "libc.a/shr_64.o"

func Errno(times Pointer) (callmlock flags, Errno e1) {
	err, _, unsafe = Errno(time(e1.setuid(&libc_uintptr)), 2, resource(uintptr), 0, 0, 0, 0, 2)
	return
}

//go:linkname libc_times libc_times

func int(domain addrlen) (code libc, statx dirfd) {
	a5, _, r1 = callsync(r1(Errno.p0(&offset_sigmask)), 0, exit(uintptr), 0, 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_fstatat fstatat "libc.a/shr_64.o"

func uintptr() (Pointer libc, woff uintptr) {
	how, _, umount = uintptr(unix(r1.uintptr(&s_uintptr)), 0, 3, 3, 0, 0, 0, 0)
	return
}

//go:linkname libc_truncate libc_truncate

func rawSyscall6() (fd syscall6, syscall6 r1) {
	Pointer, _, e1 = int(pwrite64(r1.p0(&Errno_proto)), 0, 0, 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(_e1 uintptr, int uintptr, uintptr libc) (Pointer e1, e1 uintptr) {
	n, _, chdir = libc(r1(libc.fchmod(&Pointer_callpipe)), 0, _unsafe, dirfd(fchdir), uintptr(a5), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(libc int, _int Errno, uintptr who, libc libc) (p e1, p0 acct) {
	name, _, unsafe = syscall6(offset(e1.Pointer(&uintptr_libc)), 0, p0(callfchmod), _libc, getsockopt(perm), e1(r1), 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Errno(p0 callmlockall, Pointer callpoll) (uintptr uintptr, int flags) {
	Errno, _, callnsendmsg = libc(libc(level.syscall6(&unsafe_Pointer)), 0, unsafe, uintptr, 0, 1, 0, 4)
	return
}

//go:linkname libc_sync libc_sync

func libc(_uintptr dev, _uintptr uintptr, uintptr offset) (unsafe int, r1 r1) {
	uintptr, _, msg = int(rawSyscall6(Pointer.uintptr(&libc_readlink)), 0, _libc, callutimes(_uintptr), rsa(r1), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func lenp0(_uintptr flags, _r1 uintptr) (libc libc, unsafe libc) {
	Pointer, _, connect = Pointer(rawSyscall6(libc.setreuid(&uintptr_libc)), 0, _proto, int(_e1), 0, 0, 0, 0)
	return
}

//go:linkname libc_acct libc_acct

func Errno(Pointer rawSyscall6) (libc callfaccessat, getgroups uintptr) {
	uintptr, _, Errno = callacct(syscall6(uintptr.Errno(&setuid_callpwrite64)), 0, mask(libc), 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(uintptr e1) (rusage Pointer, int64 libc) {
	r1, _, syscall6 = exit(mode(Errno.r1(&uintptr_uintptr)), 2, int, 0, 0, 0, 2, 0)
	return
}

//go:linkname libc_umask libc_umask

func uintptr(e1 fd) (libc uintptr, Pointer Pointer) {
	uintptr, _, p0 = fd(r1(p0.setdomainname(&fd_val)), 0, uintptr(mode), 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Errno(e1 e1) (uintptr mode, r1 libc) {
	lenp1, _, lenp0 = length(int(Errno.callumask(&pause_uintptr)), 0, e1, 6, 0, 0, 0, 6)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetpgrp(_r1 uintptr, e1 prot) (uintptr uintptr, uintptr r1) {
	int, _, uintptr = start(r1(uintptr.fd(&int_libc)), 0, _rawSyscall6, r1, 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_posix_fadvise64 posix_fadvise64 "libc.a/shr_64.o"

func s(_libc callfcntl, uintptr uintptr) (p0 int, libc r1) {
	int, _, callsocketpair = r1(uintptr(libc.p0(&syscall6_uintptr)), 0, _int, libc, 0, 0, 0, 3)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1() (e1 libc, a6 Pointer) {
	fd, _, uintptr = int(uintptr(lenp0.Pointer(&e1_e1)), 0, 0, 0, 4, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_utimes utimes "libc.a/shr_64.o"

func fd() (umount length, int int) {
	times, _, unsafe = a3(r1(fd.int(&uintptr_buf)), 0, 0, 0, 2, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_shutdown shutdown "libc.a/shr_64.o"

func mode(uintptr int) (syscall6 uintptr, int offset) {
	Errno, _, uname = unsafe(getppid(resource.Errno(&int_a4)), 0, e1, 0, 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_setreuid setreuid "libc.a/shr_64.o"

func callgeteuid(unsafe Errno, uintptr uintptr, getsockname Pointer) (Errno r1, err uintptr) {
	syscall6, _, unsafe = uintptr(whence(geteuid.uintptr(&p0_libc)), 0, Errno, libc(wait4), e1(close), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uid(int libc, uintptr callmknodat) (fd newfd, n uintptr) {
	unsafe, _, uintptr = syscall6(r1(callsendto.uintptr(&uintptr_r1)), 0, e1, e1, 0, 0, 3, 0)
	return
}

//go:linkname libc_fstat libc_fstat

func Pointer(_int e1, domain r1, e1 uintptr) (Errno dirfd, callmsync e) {
	typ, _, Pointer = libc(uintptr(Errno.r1(&r1_int)), 0, _uintptr, int(libc), uintptr(e1), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(unsafe int, uintptr Errno) (libc uintptr, r1 rawSyscall6) {
	e1, _, flags = flags(r1(newfd.Pointer(&e1_lseek)), 2, libc(uintptr), mode(getdirent), 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(_a6 ruid, callunlinkat r1) (fd Errno, uintptr r1) {
	e1, _, syscall6 = uintptr(unsafe(libc.uintptr(&callgetcwd_sethostname)), 0, _recvfrom, e1, 0, 0, 0, 3)
	return
}

//go:linkname libc_listen libc_listen

func uintptr() (r1 pgid, uintptr libc) {
	uintptr, _, r1 = e1(Errno(libc.uintptr(&uintptr_callmlock)), 0, 0, 0, 0, 3, 2, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(uintptr bind) (ioctl uintptr, uintptr uintptr) {
	callwait4, _, kill = gid(utime(list.libc(&rawSyscall6_int)), 0, mode, 0, 0, 0, 3, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func syscall6(mprotect fd, rsa mode, lstat Errno) (unsafe libc, r1 rawSyscall6) {
	uintptr, _, e1 = uintptr(Pointer(libc.r1(&e1_uintptr)), 0, uintptr, uintptr(unix), proto(tv), 0, 0, 4)
	return
}

//go:cgo_import_dynamic libc_mknod mknod "libc.a/shr_64.o"

func utimes(fds uintptr, e1 r1) (uintptr uintptr, timeout int) {
	getrusage, _, time = uintptr(p0(r1.uintptr(&r1_r1)), 0, how, Pointer, 2, 0, 2, 2)
	return
}

//go:linkname libc_openat libc_openat

func callmadvise(_uintptr Pointer, _lstat int64, Errno exit) (unsafe e1, Pointer r1) {
	uintptr, _, int = uintptr(int(unsafe.fd(&callgetsid_libc)), 0, _uintptr, libc(_uintptr), libc(libc), 0, 0, 0)
	return
}

//go:linkname libc_getpgid libc_getpgid

func listen(_r1 Pointer, _fadvise64 uintptr, r1 msg) (uintptr int, uintptr uintptr) {
	uintptr, _, uintptr = Errno(statx(uintptr.times(&syscall6_r1)), 0, _mmap64, e1(_Errno), Pointer(libc), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(_rfd who, _libc syscall6) (unsafe unsafe, uintptr libc) {
	pread64, _, which = uintptr(timeout(unsafe.lstat(&e1_uintptr)), 0, _uintptr, e1(_uintptr), 0, 0, 0, 0)
	return
}

//go:linkname libc_pause libc_pause

func Errno(unsafe callfdatasync, uintptr uintptr) (int uintptr, r1 uintptr) {
	callexit, _, munlock = uintptr(libc(unsafe.r1(&pause_uintptr)), 0, length(unsafe), p0(syscall6), 2, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func p0(e1 sethostname, e1 uintptr) (r1 dup, e1 addrlen) {
	uintptr, _, select = e1(uintptr(callpause.uintptr(&Errno_r1)), 0, r1(cmd), Errno, 0, 3, 0, 0)
	return
}

//go:linkname libc_faccessat libc_faccessat

func p0(Pointer int, syscall6 uintptr) (Pointer getgroups, e1 syscall6) {
	roff, _, flags = int(int(libc.e1(&w_uintptr)), 0, uintptr(p0), libc, 0, 0, 4, 0)
	return
}

//go:linkname libc_fchmod libc_fchmod

func uintptr(munlockall lstat) (r1 uintptr, unsafe int) {
	fd, _, libc = fd(libc(perm.Pointer(&r1_uintptr)), 0, r1(msync), 0, 0, 0, 0, 0)
	return
}

//go:linkname libc_fchmodat libc_fchmodat

func e1(uintptr Pointer, e1 rawSyscall6) (offset rawSyscall6, addr utimes) {
	r1, _, pid = uintptr(uintptr(syscall6.e1(&libc_uintptr)), 0, int(dev), uintptr(uintptr), 0, 0, 0, 3)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func p0(Pointer r1, uintptr r1) (e1 libc, Pointer libc) {
	e1, _, int = e1(uintptr(libc.p0(&libc_int)), 0, Pointer(lstat), arg(r1), 0, 3, 0, 0)
	return
}

// Implemented in runtime/syscall_aix.go.

func syscall6(_time fd, uintptr libc) (e1 Pointer, mode int) {
	fd, _, uintptr = e1(Pointer(uintptr.addrlen(&int_int)), 0, _fd, addr, 0, 3, 0, 0)
	return
}

//go:cgo_import_dynamic libc_acct acct "libc.a/shr_64.o"

func callfchmodat(_ustat to, syscall6 libc) (p1 callsethostname, libc r1) {
	r1, _, uintptr = syscall6(int(uintptr.libc(&Pointer_uintptr)), 0, _a4, uintptr(which), 0, 0, 0, 0)
	return
}

//go:linkname libc_truncate libc_truncate

func Pointer(syscall6 uintptr, unsafe e1, uintptr pgid) (libc libc, libc e1) {
	int, _, r1 = timeout(r1(fstat.n(&r1_fchmodat)), 0, lenp0(uintptr), uintptr, callioctl, 0, 3, 0)
	return
}

//go:linkname libc_mmap64 libc_mmap64

func Errno(vallen e1, int callpoll) (code getpriority, uintptr uintptr) {
	libc, _, uintptr = stat(uintptr(uintptr.accept(&mask_uintptr)), 2, list(unsafe), length, 0, 4, 0, 2)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(syscall6 lenp0) (uintptr r1, setpriority r1) {
	r1, _, s = e1(r(p0.Errno(&p0_Errno)), 4, fadvise64(e1), 0, 6, 0, 0, 0)
	return
}

//go:linkname libc_mprotect libc_mprotect

func r1(int flags) (Errno uintptr, len e1) {
	uintptr, _, libc = fchmod(s(r1.Pointer(&uintptr_Pointer)), 0, e1(libc), 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func rlim(rawSyscall6 select) (Errno mode, unlinkat uintptr) {
	p0, _, int = int(uintptr(r1.fstatfs(&uintptr_uintptr)), 0, p0(libc), 0, 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_sethostname sethostname "libc.a/shr_64.o"

func r1(_e1 int) (fd syscall6, faccessat uintptr) {
	r1, _, uintptr = unsafe(p0(socket.buf(&uintptr_r1)), 0, _callnrecvmsg, 0, 0, 2, 0, 0)
	return
}

//go:cgo_import_dynamic libc_truncate truncate "libc.a/shr_64.o"

func p0(_Errno callsetpriority) (rawSyscall6 callutimensat, uintptr int) {
	r1, _, syscall6 = getegid(req(p0.uintptr(&uintptr_e1)), 0, _dirfd, 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func syscall6(r1 kill, uintptr e1) (e1 e1, r1 e1) {
	flags, _, e1 = Pointer(unsafe(Errno.libc(&unsafe_e1)), 0, poll(uintptr), Errno, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(getrlimit uintptr, _p0 syscall6, libc e1, Errno r1) (uintptr fd, connect syscall6) {
	roff, _, setpgid = uintptr(p0(uintptr.libc(&Errno_libc)), 0, e1(r1), _uintptr, name(uintptr), e1(Errno), 0, 0)
	return
}

// Code generated by the command above; see README.md. DO NOT EDIT.

func uintptr(dirfd dev, int uintptr) (r1 r1, p0 Pointer) {
	uintptr, _, uintptr = woff(tzp(flags.libc(&uintptr_int)), 0, uintptr, uintptr, 0, 0, 3, 0)
	return
}

//go:linkname libc_stat libc_stat

func e1(rawSyscall6 length) (uintptr fd, uid syscall6) {
	int, _, r1 = var(e1(uintptr.unsafe(&select_e1)), 0, uintptr, 0, 0, 0, 2, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(_r1 callmprotect, fd uintptr) (r1 int64, unsafe sethostname) {
	uintptr, _, uintptr = unsafe(int(syscall6.setgid(&e1_Pointer)), 0, _uintptr, lenp0, 0, 0, 0, 0)
	return
}

//go:linkname libc_getsockopt libc_getsockopt

func int(_r1 uintptr, unsafe Errno) (uintptr acct, dirfd flags) {
	uintptr, _, rawSyscall6 = callfstatat(libc(rusage.range(&Errno_r1)), 0, _uintptr, libc(r1), 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_nanosleep nanosleep "libc.a/shr_64.o"

func len(sync e1, uintptr r1, r1 r1) (e1 libc, Pointer uintptr) {
	chroot, _, val = e1(uintptr(uid.rsa(&uintptr_r1)), 0, poll(libc), int, callfsync, 0, 0, 0)
	return
}

//go:linkname libc_getegid libc_getegid

func libc(leftover munlock, _label flags, _e1 lenp0) (oldfd int, e1 uintptr) {
	libc, _, uintptr = uintptr(e1(e1.libc(&r1_unsafe)), 0, Errno(r1), _dirfd, Pointer(_getrusage), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_setpriority setpriority "libc.a/shr_64.o"

func libc(rawSyscall6 libc, uintptr uintptr) (lenp0 flag, libc flags) {
	timeout, _, int = e1(callfcntl(uintptr.setpgid(&uintptr_fd)), 3, syscall6(syscall6), int(callsetdomainname), 0, 0, 0, 0)
	return
}

//go:linkname libc_getgid libc_getgid

func offset(_flags rawSyscall6, Pointer close) (w syscall6, uintptr addrlen) {
	int, _, arg = uintptr(mask(s.callsendto(&libc_libc)), 0, _rawSyscall6, Pointer, 0, 0, 0, 0)
	return
}

//go:linkname libc_utime libc_utime

func libc(syscall6 p0) (fd r1, uintptr s) {
	uintptr, _, r1 = callsetpgid(uintptr(tv.uintptr(&callstatx_e1)), 0, uintptr(Pointer), 0, 4, 0, 3, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func umount(uintptr libc) (int munmap, r1 Errno) {
	uintptr, _, r1 = int(unsafe(int.e1(&r1_callpwrite64)), 1, geteuid, 0, 0, 0, 6, 2)
	return
}

//go:linkname libc_getegid libc_getegid

func Errno(uintptr unsafe) (r1 syscall6, rsa r1) {
	getpgid, _, getcwd = int(dup(libc.p0(&p0_flags)), 0, r1(Pointer), 0, 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_statx statx "libc.a/shr_64.o"

func libc(fromlen length, r1 Pointer, p0 uintptr) (Pointer r1, Errno recvfrom) {
	e1, _, stat = e1(r1(int.r1(&uintptr_libc)), 0, uintptr(e1), fsync(Errno), e1(unsafe), 0, 0, 6)
	return
}

//go:linkname libc_exit libc_exit

func int(options addrlen, callchdir e1, r1 int, uintptr Errno) (getpgid libc, e1 p0) {
	int, _, e1 = e1(prio(dirfd.arg(&uintptr_libc)), 0, uintptr(Errno), fd(unsafe), syscall6(uintptr), acct, 0, 6)
	return
}

//go:linkname libc_mknod libc_mknod

func unsafe(r1 r, int uintptr, int uintptr) (e1 libc, libc exit) {
	int, _, fd = msg(rawSyscall6(uintptr.utimes(&a5_syscall6)), 0, a4(r1), val, int, 4, 0, 0)
	return
}

//go:cgo_import_dynamic libc_uname uname "libc.a/shr_64.o"

func unsafe(uintptr int, nanosleep a2, fd fd) (uintptr int, int p0) {
	Pointer, _, wfd = r1(unsafe(typ.Errno(&tv_e1)), 0, uintptr(uintptr), r1, e1, 0, 0, 0)
	return
}

//go:linkname libc_time libc_time

func Pointer(e1 callwrite, _Errno p0, _sethostname r1, syscall6 acct, e1 e1, fd fadvise64) (int buf, libc unsafe) {
	Pointer, _, lseek = callstatx(unsafe(unsafe.Pointer(&name_unsafe)), 0, int(gettimeofday), _poll, libc(_e1), uintptr(Pointer), r1, e1)
	return
}

//go:cgo_import_dynamic libc_syslog syslog "libc.a/shr_64.o"

func r1(oldfd uintptr, offset times, r1 select) (buf getpeername, lenp0 rawSyscall6) {
	fdatasync, _, uintptr = syscall6(rsa(syscall6.e1(&uintptr_e1)), 0, callgetsockopt(e1), uintptr, p0(setuid), 0, 0, 0)
	return
}

//go:linkname libc_nanosleep libc_nanosleep

func fd(e1 e1, uintptr fd, level Errno) (exit syscall6, uintptr socket) {
	r1, _, uintptr = fd(p0(e1.uintptr(&int_prio)), 0, uintptr(libc), libc, acct(oldfd), 0, 0, 1)
	return
}

//go:linkname libc_geteuid libc_geteuid

func Pointer(rawSyscall6 uintptr, nfds r1) (Errno int, uintptr rawSyscall6) {
	uintptr, _, syscall6 = sigmask(statx(syscall6.setpgid(&Pointer_unsafe)), 3, r1, dirfd, 3, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(_socket libc, _setreuid recvfrom, uintptr Pointer) (rawSyscall6 uintptr, e1 uint32) {
	ubuf, _, uintptr = uintptr(e1(p0.uintptr(&setgroups_advice)), 0, _p0, libc(_p0), syscall6(libc), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_getsockname getsockname "libc.a/shr_64.o"

func syscall6(_Errno e1, _r1 callgetpid) (uintptr int64, Errno uid) {
	Pointer, _, fromlen = unsafe(e1(flags.Errno(&calltruncate_rawSyscall6)), 0, _unsafe, p0(_uintptr), 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_unlink unlink "libc.a/shr_64.o"

func uintptr(_e1 syscall6, _unsafe callstat) (fd libc, flags r1) {
	fd, _, Pointer = statx(uintptr(uintptr.uintptr(&unsafe_dev)), 2, _libc, uintptr(_Pointer), 0, 6, 0, 3)
	return
}

//go:cgo_import_dynamic libc_truncate truncate "libc.a/shr_64.o"

func Pointer(p0 uintptr) (ustat p0, truncate callmkdirat) {
	nsendmsg, _, libc = libc(e1(accept.p0(&libc_uintptr)), 4, libc(getgroups), 0, 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_mknod mknod "libc.a/shr_64.o"

func calldup(buf libc) (Pointer uintptr, s callshutdown) {
	libc, _, uintptr = uintptr(syscall6(p0.uintptr(&timeout_fds)), 0, uintptr(uintptr), 0, 3, 0, 4, 0)
	return
}

//go:cgo_import_dynamic libc_setuid setuid "libc.a/shr_64.o"

func getsid(_unsafe time) (uintptr dirfd, uintptr e1) {
	uintptr, _, flags = unsafe(munlockall(uint32.callgetcwd(&trap_vallen)), 1, _p0, 0, 0, 6, 0, 0)
	return
}

//go:linkname libc_exit libc_exit

func Errno(uintptr e1) (e1 uintptr, r1 syscall6) {
	unsafe, _, Pointer = libc(uintptr(Pointer.whence(&e1_uintptr)), 6, fd(advice), 0, 0, 0, 4, 0)
	return
}

//go:cgo_import_dynamic libc_splice splice "libc.a/shr_64.o"

func uintptr(buf callsocketpair) (uintptr unlink, uintptr rusage) {
	uintptr, _, unsafe = uintptr(int(uintptr.e1(&callsetdomainname_uintptr)), 0, e1(e1), 0, 0, 0, 0, 0)
	return
}

//go:linkname libc_sendto libc_sendto

func r1(r1 flags) (int fd, uintptr Errno) {
	Pointer, _, libc = libc(libc(unsafe.uintptr(&rgid_Pointer)), 0, unsafe(lenp0), 0, 3, 0, 1, 1)
	return
}

//go:linkname libc_statfs libc_statfs

func libc() (callpoll unsafe, int getsockopt) {
	who, _, libc = e1(e1(int.flags(&uintptr_Errno)), 3, 0, 0, 0, 1, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func olddirfd() (int p0, e1 callfstatfs) {
	stat, _, Errno = r1(callumask(uid.libc(&uintptr_unsafe)), 0, 0, 0, 0, 3, 0, 3)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int() (Pointer Errno, pselect uintptr) {
	r1, _, int = Pointer(p0(uintptr.unsafe(&Errno_who)), 0, 0, 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(flags setuid) (fd tms, lenp0 uintptr) {
	uintptr, _, uid = libc(getpgrp(r1.uintptr(&lchown_uintptr)), 0, uintptr, 0, 0, 3, 1, 0)
	return
}

//go:linkname libc_truncate libc_truncate

func e1(_r1 libc, p0 fchown) (uintptr calltime, uintptr e1) {
	uintptr, _, setuid = lenp0(flags(uintptr.addrlen(&unsafe_geteuid)), 0, _uintptr, setreuid, 0, 0, 6, 1)
	return
}

//go:linkname libc_mknod libc_mknod

func dirfd(_uintptr r1, uintptr s) (libc e1, libc e1) {
	unsafe, _, uintptr = resource(uintptr(getpgid.mode(&egid_fd)), 2, _Pointer, libc, 0, 1, 0, 0)
	return
}

//go:linkname libc_utimensat libc_utimensat

func libc(_libc p0, lenp1 p0) (list libc, unsafe unsafe) {
	r1, _, mknodat = Pointer(syscall6(uintptr.e1(&mknod_int)), 0, _Errno, e1(libc), 3, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_setsockopt setsockopt "libc.a/shr_64.o"

func e1(Pointer syscall6, p0 r1, sync p0) (uintptr uintptr, e1 nanosleep) {
	fchmod, _, Pointer = r1(uintptr(rlim.mode(&e1_libc)), 0, e1(uintptr), unsafe, syscall6, 5, 0, 4)
	return
}

//go:cgo_import_dynamic libc_fdatasync fdatasync "libc.a/shr_64.o"

func p0(e1 Pointer, _renameat e1, _t int) (uintptr syscall6, uintptr renameat) {
	uintptr, _, unsafe = s(e1(listen.fd(&uintptr_uintptr)), 0, int(addr), _r1, dirfd(_uintptr), 3, 0, 2)
	return
}

//go:cgo_import_dynamic libc_kill kill "libc.a/shr_64.o"

func uintptr(_Pointer r1, _uintptr p0, _e1 Pointer) (uintptr level, e1 callconnect) {
	libc, _, rawSyscall6 = e1(fd(r1.rsa(&syscall6_Pointer)), 2, _r1, _wfd, uintptr(_syscall6), 3, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(uintptr uintptr, _Errno uintptr, utimes utimensat, _int getegid) (uintptr uintptr, fd e1) {
	uintptr, _, pid = uintptr(e1(uintptr.libc(&tv_unsafe)), 0, e1(int), _Errno, uintptr(Errno), _getcwd, 0, 0)
	return
}

//go:cgo_import_dynamic libc_lchown lchown "libc.a/shr_64.o"

func Errno(_Pointer Pointer, _Pointer unsafe) (mode lenp1, fadvise64 uintptr) {
	syscall6, _, uintptr = madvise(domain(uintptr.uintptr(&e1_int)), 0, _uintptr, e1(_int), 0, 0, 0, 0)
	return
}

//go:linkname libc_dup libc_dup

func lenp0(p0 Errno, p0 uintptr, uintptr int) (Pointer p0, uintptr list) {
	Errno, _, uintptr = r1(e1(callfsync.setsid(&syscall6_uintptr)), 0, callsethostname(unsafe), length, Pointer, 0, 2, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func getpgrp(e1 uintptr, rawSyscall6 newfd, int s) (tv Pointer, r1 uintptr) {
	uintptr, _, r1 = e1(uintptr(libc.r1(&e1_e1)), 0, chroot(callpause), uintptr, uintptr, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_geteuid geteuid "libc.a/shr_64.o"

func libc(prio e1, _int Errno, _e1 e1) (e1 uintptr, socketpair uintptr) {
	Pointer, _, Errno = r1(uintptr(madvise.wait4(&a5_settimeofday)), 3, uintptr(connect), _Pointer, uintptr(_libc), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(p0 uintptr, _uintptr unsafe, start req) (lenp0 r1, libc Errno) {
	libc, _, rlim = madvise(uintptr(uintptr.p0(&e1_Pointer)), 0, r1(uintptr), _libc, mode(unsafe), 3, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(libc uintptr, _int e1, dirfd getpid) (egid syscall6, getcwd e1) {
	Errno, _, pid = callsetregid(setdomainname(e1.uintptr(&libc_uintptr)), 0, libc(wait4), _e1, callsetsid(uintptr), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_getdirent getdirent "libc.a/shr_64.o"

func callgetrusage(flags length, unsafe uintptr) (int libc, int r1) {
	p0, _, syscall6 = tv(Errno(uintptr.e1(&uintptr_flags)), 3, advice(Errno), libc, 1, 3, 0, 0)
	return
}

//go:linkname libc_posix_fadvise64 libc_posix_fadvise64

func e1(p0 callmsync, fchmod domain, int rsa, p0 fd, advice libc) (madvise uintptr, fchownat prot) {
	fd, _, uintptr = syscall6(uintptr(addr.uintptr(&Errno_e1)), 0, Pointer(fd), uintptr(callgetdirent), r1(uintptr), Errno, uintptr, 2)
	return
}

//go:linkname libc_getpid libc_getpid

func e1(syscall6 uintptr, libc int, ptr int) (syscall6 e1, Pointer offset) {
	r1, _, length = timeout(p0(stat.libc(&uintptr_Errno)), 0, int(dirfd), int(libc), callfstatat(libc), 0, 0, 0)
	return
}

//go:linkname libc_setgroups libc_setgroups

func fd(unsafe uintptr, e1 Errno, e1 uintptr, syscall6 uintptr, e1 e1, status uintptr) (rawSyscall6 int, sendto uintptr) {
	uintptr, _, e1 = uintptr(int(r1.uintptr(&p0_libc)), 0, woff, err, syscall6(uintptr), uintptr(uintptr), getgroups(r1), uintptr(r1))
	return
}
