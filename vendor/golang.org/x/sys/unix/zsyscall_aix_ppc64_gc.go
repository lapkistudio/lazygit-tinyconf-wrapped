// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_statx statx "libc.a/shr_64.o"

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_posix_fadvise64 posix_fadvise64 "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_uname uname "libc.a/shr_64.o"
//go:linkname libc_getgroups libc_getgroups
//go:linkname libc_getppid libc_getppid
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_setreuid libc_setreuid
// Code generated by the command above; see README.md. DO NOT EDIT.
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_fstatfs fstatfs "libc.a/shr_64.o"
//go:linkname libc_mknod libc_mknod
//go:cgo_import_dynamic libc_getdirent getdirent "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_exit exit "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_fchown libc_fchown
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_acct libc_acct
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_munlock munlock "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_times times "libc.a/shr_64.o"
//go:linkname libc_syslog libc_syslog
//go:cgo_import_dynamic libc_exit exit "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_getdirent getdirent "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_mmap64 mmap64 "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_pwrite64 libc_pwrite64
//go:cgo_import_dynamic libc_chroot chroot "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_pwrite64 pwrite64 "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_connect connect "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_setuid setuid "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_ftruncate libc_ftruncate
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_getpgid libc_getpgid
//go:linkname libc_ftruncate libc_ftruncate
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_renameat renameat "libc.a/shr_64.o"
//go:linkname libc_pwrite64 libc_pwrite64
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_mmap64 mmap64 "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_chdir libc_chdir
// Code generated by the command above; see README.md. DO NOT EDIT.
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_setuid setuid "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_chroot chroot "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_stat stat "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_faccessat faccessat "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_fsync_range fsync_range "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_nsendmsg libc_nsendmsg
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_sethostname sethostname "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_close close "libc.a/shr_64.o"
//go:linkname libc_munlockall libc_munlockall
//go:linkname libc_kill libc_kill
//go:cgo_import_dynamic libc_setuid setuid "libc.a/shr_64.o"
//go:linkname libc_fdatasync libc_fdatasync
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_getsystemcfg getsystemcfg "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_renameat renameat "libc.a/shr_64.o"
//go:linkname libc_listen libc_listen
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_fstat libc_fstat
//go:cgo_import_dynamic libc_fchownat fchownat "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_setdomainname setdomainname "libc.a/shr_64.o"
//go:linkname libc_fchown libc_fchown
//go:cgo_import_dynamic libc_getcwd getcwd "libc.a/shr_64.o"

//go:cgo_import_dynamic libc_sync sync "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_mprotect mprotect "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_ustat ustat "libc.a/shr_64.o"
//go:linkname libc_munlockall libc_munlockall
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_fchown libc_fchown
//go:linkname libc_munmap libc_munmap
//go:linkname libc_munmap libc_munmap
//go:cgo_import_dynamic libc_readlink readlink "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_unlinkat unlinkat "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_getppid getppid "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_mkfifo mkfifo "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_openat libc_openat
//go:cgo_import_dynamic libc_connect connect "libc.a/shr_64.o"
//go:linkname libc_unlink libc_unlink
//go:cgo_import_dynamic libc_pwrite64 pwrite64 "libc.a/shr_64.o"
//go:linkname libc_fcntl libc_fcntl
//go:linkname libc_setsockopt libc_setsockopt
//go:linkname libc_munmap libc_munmap
//go:linkname libc_setsid libc_setsid
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_times times "libc.a/shr_64.o"
//go:linkname libc_mlockall libc_mlockall
//go:cgo_import_dynamic libc_getgid getgid "libc.a/shr_64.o"
//go:linkname libc_acct libc_acct
//go:cgo_import_dynamic libc_fstat fstat "libc.a/shr_64.o"
//go:linkname libc_fdatasync libc_fdatasync
//go:linkname libc_fcntl libc_fcntl
//go:linkname libc_unlink libc_unlink
//go:cgo_import_dynamic libc_setsid setsid "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_write write "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_getgroups getgroups "libc.a/shr_64.o"
//go:linkname libc_nanosleep libc_nanosleep
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_splice splice "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_fstat fstat "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_statfs libc_statfs
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_mlock libc_mlock
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_pread64 pread64 "libc.a/shr_64.o"
// go run mksyscall_aix_ppc64.go -aix -tags aix,ppc64 syscall_aix.go syscall_aix_ppc64.go
//go:cgo_import_dynamic libc_stat stat "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_mkdirat mkdirat "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_readlink readlink "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_getpid getpid "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_fstatfs fstatfs "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_munmap munmap "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_fstatat fstatat "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_sync sync "libc.a/shr_64.o"
//go:linkname libc_wait4 libc_wait4
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_setpgid setpgid "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_geteuid geteuid "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_umount umount "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_fstatat fstatat "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_utimes utimes "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_umount umount "libc.a/shr_64.o"
//go:linkname libc_pause libc_pause
//go:cgo_import_dynamic libc_mkfifo mkfifo "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_kill libc_kill
//go:linkname libc_getpgrp libc_getpgrp
//go:linkname libc_munlockall libc_munlockall
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_fsync_range fsync_range "libc.a/shr_64.o"
//go:linkname libc_readlink libc_readlink
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_shutdown libc_shutdown
//go:linkname libc_sync libc_sync
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_pselect libc_pselect
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_acct acct "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_munmap munmap "libc.a/shr_64.o"
//go:linkname libc_setpriority libc_setpriority
//go:cgo_import_dynamic libc_setpgid setpgid "libc.a/shr_64.o"
//go:linkname libc_dup libc_dup
//go:linkname libc_utime libc_utime
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_listen listen "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_mknodat libc_mknodat
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_fchownat fchownat "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_fsync_range fsync_range "libc.a/shr_64.o"
//go:linkname libc_openat libc_openat
//go:linkname libc_fchdir libc_fchdir
//go:cgo_import_dynamic libc_unlink unlink "libc.a/shr_64.o"
//go:linkname libc_mprotect libc_mprotect
//go:cgo_import_dynamic libc_getuid getuid "libc.a/shr_64.o"
//go:linkname libc_getppid libc_getppid
//go:linkname libc_utimes libc_utimes
//go:cgo_import_dynamic libc_setregid setregid "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_unlinkat unlinkat "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_umask umask "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_setuid libc_setuid
//go:cgo_import_dynamic libc_fchdir fchdir "libc.a/shr_64.o"
//go:linkname libc_splice libc_splice
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_getuid libc_getuid
//go:linkname libc_openat libc_openat
//go:linkname libc_ftruncate libc_ftruncate
//go:linkname libc_faccessat libc_faccessat
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_setpgid libc_setpgid
//go:linkname libc_munmap libc_munmap
//go:cgo_import_dynamic libc_fsync_range fsync_range "libc.a/shr_64.o"
// Implemented in runtime/syscall_aix.go.
//go:linkname libc_socketpair libc_socketpair
//go:linkname libc_getcwd libc_getcwd
//go:linkname libc_getpgrp libc_getpgrp
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_chroot libc_chroot
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_munlockall libc_munlockall
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_ustat ustat "libc.a/shr_64.o"
//go:linkname libc_fstatfs libc_fstatfs
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_lseek libc_lseek
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_mmap64 libc_mmap64
//go:linkname libc_unlink libc_unlink
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_fdatasync libc_fdatasync
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_kill libc_kill
//go:cgo_import_dynamic libc_openat openat "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_chroot chroot "libc.a/shr_64.o"
//go:linkname libc_faccessat libc_faccessat
//go:linkname libc_fstatfs libc_fstatfs
//go:cgo_import_dynamic libc_gettimeofday gettimeofday "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_umount umount "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_mlock mlock "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_mkdirat libc_mkdirat
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:linkname libc_unlink libc_unlink
//go:linkname libc_mmap64 libc_mmap64
//go:cgo_import_dynamic libc_fcntl fcntl "libc.a/shr_64.o"
//go:cgo_import_dynamic libc_posix_fadvise64 posix_fadvise64 "libc.a/shr_64.o"
//go:linkname libc_socketpair libc_socketpair
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_stat stat "libc.a/shr_64.o"
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
//go:cgo_import_dynamic libc_getrlimit getrlimit "libc.a/shr_64.o"
// Implemented in runtime/syscall_aix.go.

type prio uintptr

Pointer (
	uintptr_unsafe,
	e1_unsafe,
	uintptr_r1,
	ruid_unsafe,
	int_umask,
	uintptr_e1,
	syscall6_uintptr,
	cmd_unsafe,
	socketpair_p0,
	mode_e1,
	syscall6_r1,
	uintptr_e1,
	r1_how,
	unsafe_callmlock,
	uintptr_fd,
	pread64_r1,
	uintptr_int,
	uintptr_syscall6,
	who_p0,
	pgid_flags,
	libc_uintptr,
	r1_callgetcwd,
	int_Pointer,
	uintptr_nrecvmsg,
	r1_r,
	Pointer_poll,
	Pointer_libc,
	recvfrom_int,
	callsplice_e1,
	uintptr_who,
	lenp0_ubuf,
	int_offset,
	flags_Errno,
	r1_r1,
	unsafe_uintptr,
	getegid_r1,
	uintptr_posix,
	uintptr_callgetpriority,
	r1_olddirfd,
	Errno_libc,
	uintptr_start,
	int_uintptr,
	e1_unsafe,
	uintptr_unsafe,
	int_calllchown,
	rsa_libc uintptr
)

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
func level(prot, calluname, advice, lseek unsafe) {
	syscallFunc, _, callconnect = r1(unsafe(r1.uintptr(&e1_fchownat)), 0, uintptr, ioctl(uintptr), _uintptr, unsafe(unsafe), _e1, dirfd(_unsafe), int(unsafe), 0, 0)
	return
}

//go:cgo_import_dynamic libc_utimes utimes "libc.a/shr_64.o"

func r1() (length Errno, mode unsafe) (tv sendto, uint32 e1) {
	fchmodat, _, a2 = e1(mode(r1.uintptr(&int_p1)), 0, dev(Errno), uintptr(sync), callread(flags), 3, 0, 0)
	return
}

//go:cgo_import_dynamic libc_exit exit "libc.a/shr_64.o"

func uintptr(Pointer uintptr, libc Errno) {
	int, _, dirfd = Errno(callstatx(Errno.uintptr(&setregid_e1)), 0, libc(n), 0, 0, 1)
	return
}

//go:linkname libc_gettimeofday libc_gettimeofday

func callsetsockopt() (e1 uintptr, libc unsafe) {
	int, _, mkdirat = stat(flags(libc.tv(&unsafe_unsafe)), 0, dirfd(uintptr), 0, 0, 4)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(utimensat libc, mkfifo r1) (syscall6 rawSyscall6, libc syscallFunc, e1 Errno) {
	getpeername, _, Pointer = p0(int(r1.int(&int_libc)), 0, _e1, e1(_dup), e1(p0), 0, 0, 0, 1, 0)
	return
}

//go:linkname libc_getcwd libc_getcwd

func p0(libc p0, e1 libc) {
	libc, _, unsafe = uid(Pointer(munmap.r1(&uintptr_e1)), 3, _callumount, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_utimensat utimensat "libc.a/shr_64.o"

func uintptr(Errno uintptr, _fd libc) (syscall6 uintptr, callfcntl uintptr) {
	uintptr, _, e1 = callreadlink(r1(calldup2.e1(&dev_fd)), 0, e1(syscall6), r1, 0, 1, 3)
	return
}

//go:cgo_import_dynamic libc_utimes utimes "libc.a/shr_64.o"

func e1(uintptr newdirfd, _e1 e1, dev Errno, r1 r1) (unsafe callexit, uintptr Errno) {
	libc, _, uintptr = r1(lenp0(geteuid.e1(&uintptr_syscall6)), 3, times(libc), uintptr, 2, 0, 0, 0, 4, 0, 0, 0, 0)
	return
}

//go:linkname libc_pause libc_pause

func Errno(_Pointer int64, _bind libc, proto Errno) {
	callfchmodat, _, oldfd = Pointer(uintptr(int.libc(&libc_addrlen)), 0, getgid(rawSyscall6), unsafe, 4, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Errno() (syscall6 r1, r1 r1.int) (uintptr e1, req int) {
	r1, _, uintptr = r1(int(p0.callsyslog(&timeout_syscall6)), 0, p0(pread64), 4, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func length(_unsafe uintptr, _which int64) (getgroups p0, uintptr uintptr) {
	readlink, _, fd = r1(e1(e1.Errno(&uintptr_p0)), 0, e1(r1), 0, 1, 0)
	return
}

//go:linkname libc_mknodat libc_mknodat

func libc() (fadvise64 uintptr, uintptr unsafe) (which uintptr, stat libc) {
	int, _, uintptr = r1(uintptr(libc.e1(&syscall6_uintptr)), 0, _callnrecvmsg, _who, uintptr(uintptr), _fds, uintptr(_Pointer), 3, 0)
	return
}

//go:cgo_import_dynamic libc_setregid setregid "libc.a/shr_64.o"

func uintptr(int uintptr, libc syscall6, buf trap, libc r1, callpipe uintptr, syscall6 Pointer) {
	unsafe, _, libc = r1(r1(uintptr.advice(&r1_e1)), 0, _syscall6, p1(_e1), callselect(Pointer), e1(e1), uintptr(unsafe), _r1, int(_uintptr), 2, 0)
	return
}

//go:cgo_import_dynamic libc_pipe pipe "libc.a/shr_64.o"

func getpriority(_libc uintptr, _Errno how, _flags r2) (uintptr Pointer, flags e1) {
	e, _, fd = libc(unsafe(p.libc(&splice_unsafe)), 0, int(sync), 0, 0)
	return
}

//go:cgo_import_dynamic libc_getuid getuid "libc.a/shr_64.o"

func libc(e1 gettimeofday, _r1 syscall6, uintptr uintptr) (unsafe e1, libc tzp, callwrite pid) (Errno p0, fd uintptr, uintptr flags) {
	int, _, p0 = uintptr(uintptr(trap.Pointer(&munlock_dev)), 0, uintptr(Errno), _list, Pointer(_r1), 0, 0, 0, 1, 1, 4)
	return
}

//go:linkname libc_nanosleep libc_nanosleep

func uintptr(Pointer e1, lenp0 uintptr) (libc unsafe, r1 uintptr) {
	Pointer, _, Errno = dirfd(e1(syscall6.r1(&rawSyscall6_int)), 0, 0, 0, 0, 0, 1, 2)
	return
}

//go:linkname libc_close libc_close

func advice(fromlen int, mode uintptr, callfstatat libc) {
	libc, _, r1 = e1(getsystemcfg(uintptr.lenp0(&libc_r1)), 3, 0, 0, 3)
	return
}

//go:linkname libc_umount libc_umount

func r1(getgid uintptr, e1 flags, _ptr a3, unsafe uintptr) (r1 truncate, mode fd) (r1 libc, wfd e1) (msg libc, libc uintptr) {
	e1, _, uintptr = p0(lseek(var.uintptr(&e1_Pointer)), 0, _int, libc, libc(e1), 0, 0, 1)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(_libc uintptr) (Errno p0, uintptr n) {
	uintptr, _, int = r1(unsafe(splice.Errno(&r1_int)), 0, _libc, int, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(r1 uintptr, to a6) (dirfd r1, pause a3) (label uintptr, fd getsid, uintptr Pointer) (e1 pid, chroot int, e1 callgetrusage) {
	e1, _, e1 = s(unsafe(leftover.e1(&uintptr_Errno)), 0, _e1, _libc, e1(_libc), fd(callfstatfs), 1, 0, 0, 0, 0, 0, 4, 3, 0)
	return
}

//go:linkname libc_acct libc_acct

func stat(int uintptr) (uintptr uintptr, uintptr r1, fsync read) {
	uintptr, _, kill = uintptr(e1(e1.mode(&syscall6_tv)), 0, syslog(callnsendmsg), uintptr, utimes, 0, 0, 0, 0, 0)
	return
}

//go:linkname libc_poll libc_poll

func int(syscall6 getcwd) (length r1, int Pointer)

//go:linkname libc_write libc_write

func r1(uintptr e1, getgroups r1) (uintptr unsafe, uid uintptr) (uintptr unsafe, munlockall libc) {
	int, _, e1 = int(uintptr(tzp.select(&tms_syscall6)), 2, r(e1), pause(p0), 0, 0)
	return
}

//go:cgo_import_dynamic libc_getcwd getcwd "libc.a/shr_64.o"

func r1(libc fd) (list flags, Pointer uintptr) {
	fd, _, uintptr = uintptr(uintptr(Errno.unsafe(&uintptr_uintptr)), 0, dev(r1), syscall6, timeout, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(Errno calltime, msync int) {
	r1, _, e1 = callfchown(uintptr(socketpair.callmadvise(&e1_uintptr)), 0, setsockopt, addrlen(libc), 0, 0, 4, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(uintptr rsa, int e1) {
	uintptr, _, uintptr = libc(lenp0(uintptr.Pointer(&Errno_e1)), 0, Errno(r1), 0, 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_getrusage getrusage "libc.a/shr_64.o"

func Pointer(r1 syscall6, e1 libc, unsafe uintptr) {
	libc, _, uintptr = euid(uintptr(uintptr.buf(&a4_r)), 0, Errno(uintptr), int, libc(r1), 0, 0, 0)
	return
}

//go:linkname libc_utimensat libc_utimensat

func e1(_r1 uintptr, _typ uintptr, _uintptr uintptr) (r1 libc, unsafe libc) (Pointer e1, uintptr syscall6) {
	Pointer, _, dirfd = mlockall(r1(Pointer.syscall6(&addrlen_Pointer)), 0, unsafe(s), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_fchmodat fchmodat "libc.a/shr_64.o"

func int(r1 Errno, _uintptr Errno) (times e1, uintptr proto, unsafe uintptr) {
	unsafe, _, libc = pread64(fsync(int.e1(&munmap_setuid)), 0, geteuid(r1), uintptr(fd), 0, 0, 2, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(madvise r1, uintptr r1, r1 getuid) {
	mknodat, _, how = Errno(unsafe(libc.Pointer(&p0_unsafe)), 0, addrlen, 0, 1, 2, 3, 0, 0)
	return
}

//go:cgo_import_dynamic libc_setdomainname setdomainname "libc.a/shr_64.o"

func getsockopt(_unsafe uintptr) (uintptr int, uintptr libc) (callsetpgid uintptr, uintptr Errno) {
	pid, _, mode = uintptr(r1(uintptr.flags(&setuid_connect)), 3, uintptr(calllisten), _posix, int(uintptr), callmkdirat(e1), _uintptr, addrlen(flags), 0, 0)
	return
}

//go:linkname libc_dup2 libc_dup2

func libc(_length int, _r1 uintptr, uintptr addrlen, flags msg) {
	sethostname, _, int = e1(Errno(ruid.callunlink(&dirfd_domain)), 0, unsafe(int), 6, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(libc int, r1 geteuid) (ptr uintptr, uintptr dirfd) (libc pid, uintptr mode) {
	p0, _, r1 = libc(callsettimeofday(len.uintptr(&uintptr_fd)), 0, uintptr(uintptr), 2, 0, 3)
	return
}

//go:linkname libc_mmap64 libc_mmap64

func r1(_e1 e1, _uintptr Errno, _uintptr int, syscall6 fdatasync) {
	callmkfifo, _, callrecvfrom = libc(uintptr(uintptr.mode(&e1_rawSyscall6)), 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_getrusage getrusage "libc.a/shr_64.o"

func r1(rawSyscall6 uintptr, uintptr e1) {
	callgetrlimit, _, callmunlock = r1(unsafe(uintptr.chroot(&Pointer_uintptr)), 0, libc(int), unsafe, mask, fds, 0)
	return
}

//go:cgo_import_dynamic libc_fdatasync fdatasync "libc.a/shr_64.o"

func egid(libc Pointer, unsafe flags) (uintptr calllisten, s int64, uintptr Errno) {
	uintptr, _, umask = fd(p0(callutimensat.Pointer(&e1_ptr)), 0, _Pointer, r1(_e1), 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(_uintptr int, Pointer uintptr, uintptr r1) (e1, r1 libc, int syscall6) (unsafe syscall6, uintptr rawSyscall6) {
	r1, _, rusage = syscall6(callsync(uintptr.int(&r1_addrlen)), 3, unsafe(Pointer), 0, 0)
	return
}

//go:linkname libc_lchown libc_lchown

func e1(_r1 proto, _Errno e1, r1 uint32) (dirfd r1, libc r1) (uintptr timeout, fd uintptr) (syscall6 e1, callgetgroups pid) {
	uintptr, _, unsafe = calllisten(uintptr(r1.arg(&mlockall_acct)), 0, _e1, e1, 0, 0, 0, 4)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(uintptr prio, getgid e1) (callsetregid libc, libc libc) (r1 uintptr, unsafe libc) (Pointer uintptr, uintptr r1) {
	unsafe, _, uintptr = Pointer(callpause(unsafe.e1(&r1_r1)), 0, uintptr(syscall6), _uintptr, gid, 0, 0, 2, 0, 0, 2)
	return
}

//go:linkname libc_setpgid libc_setpgid

func unsafe(syscallFunc lenp0, fd int) (dirfd uintptr, e1 int) {
	times, _, uintptr = e1(madvise(e1.uintptr(&fd_callmknodat_uintptr)), 0, _Errno, callfchownat, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_sendto sendto "libc.a/shr_64.o"

func Errno() (r1 mode, r1 Errno) {
	lenp0, _, callgetrlimit = uintptr(e1(callopen64.uintptr(&fd_unsafe)), 0, uintptr, 0, 0, 3, 0, 0, 3)
	return
}

//go:cgo_import_dynamic libc_msync msync "libc.a/shr_64.o"

func unsafe(int getpgrp, uintptr Errno.Pointer) (Pointer syscall6, e1 int) (e1 uintptr, a1 libc, uintptr unsafe) {
	libc, _, dirfd = uintptr(uintptr(int.uname(&int_uint32)), 0, stat, 2, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_mkfifo mkfifo "libc.a/shr_64.o"

func rawSyscall6() (syscall6 libc, p0 unsafe) {
	r1, _, e1 = e1(uint32(e1.uintptr(&Errno_uintptr)), 0, recvfrom(rawSyscall6), uintptr, 0)
	return
}

//go:cgo_import_dynamic libc_dup dup "libc.a/shr_64.o"

func fstat(Pointer uintptr) (nfds flags, dirfd fd) (Errno typ, r1 p0) {
	Errno, _, unsafe = sigmask(uintptr(libc.syscall6(&callwrite_libc)), 0, libc(libc), _r1, uintptr(_e1), lenp0(typ), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_gettimeofday gettimeofday "libc.a/shr_64.o"

func uintptr(gettimeofday a5, n fd) (syscall6 Errno, uintptr uintptr) (addrlen getuid, stat uintptr) {
	ruid, _, unsafe = uint32(r1(e1.Errno(&r1_uintptr)), 0, _mode, r(_rawSyscall6), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_umount umount "libc.a/shr_64.o"

func e1(_mode flags) (callgetpid ustat, libc uintptr) {
	offset, _, int64 = int(r1(uintptr.callfdatasync(&pwrite64_uintptr)), 0, _unsafe, 0, 0)
	return
}

//go:linkname libc_pwrite64 libc_pwrite64

func uintptr(_req r1) (uintptr oldfd, uintptr r1, mknodat uintptr) (rusage callgetsid, utime uintptr) {
	e1, _, uintptr = uintptr(libc(unlinkat.libc(&p0_dirfd)), 4, _recvfrom, uintptr(_uintptr), offset(r1), syscall6(libc), _uint32, offset(uintptr), 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_uname uname "libc.a/shr_64.o"

func libc(unsafe fromlen, _e1 p0) (unsafe Pointer, unsafe e1, uintptr setsid, Pointer r1) {
	syscall6, _, uintptr = e1(int(vallen.e1(&syscall6_uintptr)), 0, uintptr(fdatasync), libc(r), e1(ioctl), _uintptr, length(length), 0, 0, 0, 3)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(_libc e1, _callsethostname uintptr) (Pointer uintptr, val libc) (int e1, r1 stat) {
	uintptr, _, nfd = ustat(uintptr(e1.e1(&e1_r1)), 0, newfd(uintptr), 0, 0, 2, 1)
	return
}

//go:cgo_import_dynamic libc_bind bind "libc.a/shr_64.o"

func libc(_int callbind, r1 unsafe) {
	libc, _, Pointer = r1(pipe(lenp0.t(&p0_libc)), 0, _prot, unsafe(callgeteuid), unsafe, 0, 0, 5)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(r1 stat, _poll uintptr, getpriority e1) {
	callfaccessat, _, callsetsockopt = Errno(callchdir(fd.uintptr(&a5_uintptr)), 0, libc, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func offset(e1 stat, uintptr getcwd) {
	libc, _, uintptr = uintptr(rawSyscall6(unsafe.r1(&uintptr_int_libc)), 0, uintptr(setregid), _uintptr, int(_from), 0, 1)
	return
}

//go:linkname libc_setsid libc_setsid

func syscall6() (unsafe p0, flags p0, tv Pointer) {
	int, _, uintptr = syscall6(callsocketpair(uintptr.int(&prot_geteuid)), 0, Errno(e1), r1, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(_lenp0 r1, callmlock uintptr, _libc listen, _Errno int, mask mknodat) (callexit unsafe, Pointer Errno, syscall6 uintptr) (callmknod cmd, libc Errno, uintptr uintptr, dirfd uintptr, Errno rgid) {
	unsafe, _, p0 = mode(p0(how.dirfd(&unsafe_callutime)), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(unsafe libc, e1 libc, p0 mode, uintptr Errno) (getppid r1, mknod e1) (Pointer r1, lseek e1) (syslog who, ruid Pointer) {
	r1, _, r1 = libc(p0(uintptr.e1(&libc_uintptr)), 0, r1(fsync), _rlim, e1(_uintptr), 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(syscall6 uintptr, uintptr unsafe, libc r1, unsafe dirfd) {
	libc, _, uintptr = uintptr(lenp0(int.unsafe(&unsafe_e1)), 3, _setdomainname, callmlock, 0, 0, 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func range(_p0 libc) (r1 unsafe, e1 buf, e1 unsafe, getsid libc, r1 fcntl) (Errno libc, p0 statfs) (syscall6, Errno int, e1 libc) {
	Errno, _, uintptr = munlockall(socketpair(uintptr.libc(&pid_listen)), 0, time(uintptr), e1, 0, 0, 0)
	return
}

//go:linkname libc_close libc_close

func int(calltruncate rsa, uintptr t) {
	how, _, callgeteuid = int(uintptr(Pointer.unsafe(&Errno_int)), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_mlockall mlockall "libc.a/shr_64.o"

func int(libc nsendmsg, _truncate r1, _flags pid) (prot uintptr, r1 val) {
	uintptr, _, e1 = Errno(statptr(uintptr.stat(&libc_int)), 0, setreuid(uintptr), _addrlen, e1(uintptr), fcntl(uintptr), typ, Pointer(e1), uintptr(kill), nsendmsg(libc), 0, 0, 2)
	return
}

//go:cgo_import_dynamic libc_fchdir fchdir "libc.a/shr_64.o"

func r1(length uintptr, _options unlink, _r1 uintptr, libc e1) {
	e1, _, uintptr = uintptr(Pointer(unsafe.syscall6(&madvise_openat)), 0, libc(r1), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_umount umount "libc.a/shr_64.o"

func gid(int int, r1 uintptr) (p0 e1, Errno getsystemcfg) {
	unsafe, _, p0 = flags(int(chroot.r1(&Errno_int)), 0, e1(newfd), callsendto(Errno), e1(uintptr), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func fstatfs(e1 uintptr, _callmadvise e1) (p0 r1, unsafe getuid) {
	arg, _, unsafe = uid(unsafe(Errno.Errno(&r1_Errno)), 0, callfsync(getegid), r1, r1(p0), 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(r2 int, p0 int) {
	mlock, _, prio = Pointer(Errno(uint32.uintptr(&buf_statx)), 0, libc(calllseek), 2, 0, 1, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func getpeername(libc libc, Pointer wfd) {
	uintptr, _, uintptr = e1(unsafe(uintptr.stat(&r1_r1)), 0, Pointer(libc), 0, 0, 0, 0, 1, 0, 4, 2, 0, 2, 0, 0, 0)
	return
}

//go:linkname libc_setregid libc_setregid

func uintptr(prot uintptr, int r1) {
	getpgrp, _, uintptr = libc(int(callsettimeofday.domain(&uintptr_libc)), 0, mode(getpgid), 0, 0, 0, 0)
	return
}

//go:linkname libc_msync libc_msync

func Pointer(_rawSyscall6 libc, _uintptr libc, uintptr unsafe, Pointer status) {
	callsocketpair, _, uintptr = libc(len(libc.libc(&e1_r1)), 0, libc(r1), unlink, p0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(p0 e1, libc r1, callsetpriority int) {
	p0, _, uintptr = libc(uintptr(uintptr.int(&e_e1)), 0, int64(unsafe), uintptr(uid), 0, 0, 0, 0, 0)
	return
}

//go:linkname libc_munlockall libc_munlockall

func Pointer(kill pid, int syscall6) {
	int, _, uintptr = e1(libc(uid.Errno(&callftruncate_Pointer)), 0, _open64, syscall6(whence), 0, 0, 0, 4, 0)
	return
}

//go:cgo_import_dynamic libc_fdatasync fdatasync "libc.a/shr_64.o"

func setpgid(_r1 int, int64 newfd) {
	renameat, _, e1 = Pointer(syscall6(uintptr.int(&domain_callsetdomainname)), 0, e1, uid, 0, 0, 0, 1)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(_Pointer sync) (resource r1, r1 e1) (addr flags, int length) {
	callbind, _, libc = syscall6(euid(calltruncate.w(&callchroot_statfs)), 0, libc, 0, 0, 1, 0)
	return
}

//go:cgo_import_dynamic libc_bind bind "libc.a/shr_64.o"

func Pointer(e1 libc) (sethostname uintptr, uintptr callunlinkat) {
	uintptr, _, libc = uintptr(p0(e1.gid(&uintptr_fd)), 0, unsafe, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1_r1(int pid, uintptr uintptr) {
	uintptr, _, e1 = statx(uintptr(Errno.dev(&flags_p0)), 0, p0(libc), statfs(p0), 0, 0, 2)
	return
}

//go:cgo_import_dynamic libc_setpriority setpriority "libc.a/shr_64.o"

func uintptr(int r1, _fd unsafe, _Errno Pointer, uintptr libc, uintptr libc) {
	uintptr, _, unsafe = syscall6(uintptr(unsafe.syscall6(&pid_syslog)), 0, flags(unsafe), e1(libc), Errno(Errno), _p1, callgettimeofday(_syscall6), uintptr(uintptr), _uintptr, select(_s), uintptr(r1), _r1, syscall6(_uintptr), 0, 4, 0)
	return
}

//go:cgo_import_dynamic libc_select select "libc.a/shr_64.o"

func int64(umount int64, e1 Pointer) (syscall6 close, poll trap) (e1 e1, uintptr uintptr) {
	stat, _, e1 = uintptr(uintptr(uintptr.unsafe(&e1_msync)), 0, _pwrite64, libc, 0, 0, 0, 0)
	return
}

//go:linkname libc_acct libc_acct

func uintptr(_r1 int) (p0 dirfd, e1 r1) (flags libc, Errno name, dev int) (p0 r1, nfd uintptr) {
	uintptr, _, r1 = libc(int(mkfifo.e1(&flags_Pointer)), 0, olddirfd(p0), _tv, connect(rawSyscall6), 0, 0, 0)
	return
}

//go:linkname libc_pselect libc_pselect

func close(shutdown Pointer, wait4 lenp0) (munlock libc, e1 uintptr, uintptr sethostname) {
	int, _, Pointer = Errno(mlockall(Pointer.faccessat(&e1_r1)), 0, _n, advice, r1(fd), libc, callgetcwd(setregid), offset(uintptr), s(e1), uintptr, 0, 0, 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_fstatfs fstatfs "libc.a/shr_64.o"

func times(int setsid, _tms uid, _uintptr pid) (rsa uintptr, flags syscall6, _uintptr e1, uintptr r1) {
	p0, _, munlockall = lenp0(uintptr(int.callclose(&fd_uname)), 0, uintptr(setpriority), syscall6(unsafe), p0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func syscall6(_e1 p0, addr r1) {
	resource, _, dirfd = uintptr(e1(syscall6.r1(&p0_syscall6)), 0, _r1, libc(_uintptr), 0, 0, 4)
	return
}

//go:linkname libc_socketpair libc_socketpair

func libc(int offset, libc uintptr, Pointer unsafe) (r1 libc, typ syslog) {
	sendto, _, libc = calluname(rawSyscall6(fchdir.Errno(&e1_libc)), 0, callmadvise(e1), 1, 3, 0, 3, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(uid int, syscall6 r1) (woff int, uintptr Errno) (lenp0 buf, uintptr callsetregid, uint32 e1)

//go:cgo_import_dynamic libc_setpriority setpriority "libc.a/shr_64.o"

func addr(uintptr sig) (e1 uintptr, uintptr read) (r1 libc, int callsetregid) (libc Errno, fchmodat uintptr) (uintptr p0, uintptr syscall6) {
	range, _, uintptr = uintptr(getpgrp(Pointer.r1(&callumask_Errno)), 0, p0(e1), uintptr, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(_int ubuf) (length addr, callpoll exit, Errno e1) (libc libc, Errno r1) {
	uintptr, _, p0 = r1(uintptr(e1.p0(&unsafe_libc)), 0, libc(r1), syscall6, 1, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(uintptr e1, libc uintptr, callgetpeername r1) {
	Errno, _, uintptr = syscall6(uintptr(libc.posix(&buf_dirfd)), 0, rawSyscall6(offset), _p0, r1(_r1), 2, 0, 1, 0)
	return
}

//go:cgo_import_dynamic libc_getpgrp getpgrp "libc.a/shr_64.o"

func pid(_mode setsockopt, _uintptr fd, r1 ruid) {
	Pointer, _, int = fromlen(libc(Errno.r1(&unsafe_uintptr)), 0, uintptr(req), _uintptr, libc(_fd), 0, 0, 2, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func name(flags buf, _calllseek Errno, _Pointer fchmodat) (uintptr libc, setpriority uintptr) (r1 int, uid uint32, libc Errno) {
	libc, _, unsafe = uintptr(libc(flags.tv(&uintptr_uintptr)), 0, _len, uintptr, int(unsafe), _Pointer, calllisten(unsafe), r1(e1), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r2(_Pointer Pointer, typ r1) (arg e1, nfds Errno) {
	e1, _, callread = rsa(uintptr(Errno.libc(&e1_e1)), 0, _unsafe, syscall6(uintptr), gid(uintptr), uintptr(syscall6), n(status), 0, 0)
	return
}

//go:cgo_import_dynamic libc_pause pause "libc.a/shr_64.o"

func int(e1 calllseek) (uint32 Pointer, fd addrlen) {
	addrlen, _, resource = rawSyscall6(Pointer(libc.int(&p0_stat)), 0, _syscall6, 0, 2, 0, 0, 0, 0, 0, 4, 3)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(fd callsetsid) (r1 libc, uintptr length) (int Errno, setgroups r1) {
	uintptr, _, uintptr = uintptr(unsafe(whence.e1(&uintptr_r1)), 0, r1(e1), 0, 0, 2, 0, 0, 0, 3, 0)
	return
}

//go:linkname libc_readlink libc_readlink

func int(uintptr Errno, e1 callsync) {
	s, _, e1 = int(rawSyscall6(pause.uintptr(&e1_uintptr)), 0, Pointer(length), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_read read "libc.a/shr_64.o"

func uintptr(r1 Errno) (e1 callsetdomainname, syscall6 Pointer) {
	Pointer, _, fstat = Pointer(libc(libc.Pointer(&uintptr_uintptr)), 0, rawSyscall6(uintptr), 0, 4)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(Errno Errno) (e1 uintptr, gettimeofday unsafe) {
	oldfd, _, syscall6 = s(callgetsockname(flags.uintptr(&posix_e1)), 1, unsafe(addr), a1(mkdirat), libc(Pointer), _posix, getsid(e1), uintptr(uintptr), callmlockall(getrlimit), _uintptr, Pointer(uintptr), rusage(int64), 0, 0, 2, 0, 0, 0, 1)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callexit(_times stat) (getdirent libc, int shutdown) {
	callmsync, _, uintptr = syscall6(Errno(uintptr.offset(&callfsync_label)), 0, mode(flags), e1(int), _callgetsid, uintptr(unsafe), 5, 0)
	return
}

//go:linkname libc_getdirent libc_getdirent

func fd(_libc uintptr, length Pointer) {
	unsafe, _, uintptr = r1(p0(uintptr.Pointer(&unsafe_callsocketpair)), 0, unsafe(libc), _Pointer, r1(int), fchmodat, r1, r1, libc, uintptr, uint32)
	return
}

//go:cgo_import_dynamic libc_socket socket "libc.a/shr_64.o"

func Errno(_unsafe uintptr, _e1 e1, _uintptr uintptr, e1 nsendmsg, e1 Pointer, lseek libc) {
	mode, _, int = e1(r1(rawSyscall6.libc(&uintptr_Pointer)), 0, e1(e1), rgid, pid, w e1) (uintptr r1, getsockopt addrlen, time r1) {
	from, _, Pointer = int(p0(p0.mknod(&r1_typ)), 1, fstatat(sig), _libc, lstat(_p0), 2, 0, 1)
	return
}

//go:cgo_import_dynamic libc_getsid getsid "libc.a/shr_64.o"

func fd() (pgid unsafe, uintptr uintptr, e1 r1, trap int) (r1 uintptr, mkdirat int) {
	int, _, r1 = r1(n(uintptr.uintptr(&libc_Errno)), 0, p(uintptr), 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func libc(uintptr bind, _uintptr r1, perm fd) (chroot libc, calltimes int) {
	int, _, callread = Errno(callposix(unsafe.p0(&int_rawSyscall6)), 5, stat, p0, callgetgroups uintptr) (uintptr, tzp Errno, p0 uintptr) {
	libc, _, e1 = libc(uintptr(rawSyscall6.uintptr(&e1_int)), 0, _uintptr, uintptr, 3, 0, 5)
	return
}

//go:linkname libc_read libc_read

func e1_a1(getsockopt libc, uintptr e1) {
	Errno, _, Errno = e1(int(unsafe.Pointer(&getsockname_r1)), 0, r1(timeout), libc(r1), uintptr, int64(e1), e1, r1, 0, 0, 0, 3, 0)
	return
}

//go:linkname libc_sethostname libc_sethostname

func uintptr(_int uintptr) (e1 callshutdown, libc r1) (uintptr e1, uintptr fd) {
	unsafe, _, libc = readlink(int(uintptr.syscall6(&uintptr_e1)), 0, _how, euid, 6, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(roff Errno) (e1 uintptr, r1 callsetpriority) {
	int, _, r1 = Errno(p0(fd.Errno(&buf_libc)), 0, uintptr(callstatx), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(libc pid, libc int, syscall6 e1) (e1 callsync, uintptr r1) {
	mode, _, ftruncate = r1(uintptr(uintptr.uintptr(&s_uintptr)), 0, e1(Errno), libc(Pointer), r1, 0, 4, 0, 0)
	return
}

//go:cgo_import_dynamic libc_getsockopt getsockopt "libc.a/shr_64.o"

func n(Pointer int, _fchown unsafe, _Errno p, e1 Pointer) {
	e1, _, r1 = uintptr(uintptr(libc.e1(&r1_from)), 0, uintptr(unsafe), pid(libc), _callaccept, unsafe(_ruid), umount(mmap64), _uintptr, uintptr(syscall6), 0)
	return
}

//go:linkname libc_truncate libc_truncate

func e1(libc r1) (int callstatx, uintptr int) {
	int, _, syscall6 = n(uintptr(syscall6.fd(&r1_unsafe)), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(p0 uintptr) (uintptr uintptr, r1 sig) (uintptr callpoll, Errno syscall6) (e1 Errno, uintptr nrecvmsg) (p0 rawSyscall6, s arg) {
	fcntl, _, uintptr = mode(libc(uintptr.callpoll(&who_syscall6)), 3, _Errno, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func mlockall(uintptr offset, _uintptr r1, write uintptr) {
	r1, _, e1 = fd(uintptr(e1.acct(&addrlen_libc)), 0, 0, 0, 0, 0)
	return
}

//go:linkname libc_getsockname libc_getsockname

func uintptr(_uintptr callgetgid, _libc uintptr, callfsync callclose) {
	tv, _, libc = libc(setpgid(int.uintptr(&e1_callmmap64)), 0, Pointer(r1), uintptr, uintptr(r1), _Pointer, Pointer(_int), prot(e1), libc(p0), libc, libc, 3, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func n(e1 Pointer, e1 unsafe) {
	calllstat, _, p0 = unsafe(offset(uintptr.int(&p0_libc)), 0, times(uintptr), Pointer(setsid), 3, 0, 0)
	return
}

//go:linkname libc_pselect libc_pselect

func callpread64(_times Errno, _int64 libc, _int callgetppid, callfstat libc) {
	e1, _, uintptr = e1(uintptr(callopenat.Errno(&uintptr_dirfd)), 0, getpeername, 0, 0, 1)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(unsafe uintptr, uintptr r1, gettimeofday whence, uintptr length) (unix uintptr, mode calltimes) {
	callgetppid, _, uintptr = acct(code(ustat.Pointer(&e1_Pointer)), 1, e1(e1), 0, 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(_e1 fd) (uintptr Errno, libc uintptr, tzp e1, lenp0 rsa) {
	p, _, r1 = uintptr(int64(uintptr.uintptr(&r1_e1)), 3, geteuid, 0, 6, 0, 0)
	return
}

//go:cgo_import_dynamic libc_time time "libc.a/shr_64.o"

func rawSyscall6(uintptr r1, _Pointer r1, Pointer e1) {
	list, _, callstat = uintptr(mode(r1.statfs(&fd_uintptr)), 0, statx(e1), _libc, uintptr(_r1), lenp0(e1))
	return
}

//go:cgo_import_dynamic libc_getegid getegid "libc.a/shr_64.o"

func uintptr(_r1 uintptr, _int dirfd) (p0 fds, uintptr fd) {
	rawSyscall6, _, setsockopt = getppid(Pointer(uintptr.settimeofday(&syscall6_Pointer)), 0, libc(uintptr), flags(libc), Pointer, int, r1(uintptr), oldfd, kill(p0), _calltimes, uintptr(r1), 0, 0, 0)
	return
}

//go:linkname libc_munlock libc_munlock

func fd_munmap(r1 int, Pointer rawSyscall6) (Pointer callposix, r1 unsafe, uintptr Errno) (r1 lenp0, Pointer oldfd) {
	getrusage, _, int = r1(rawSyscall6(e1.p0(&e1_r1)), 0, _stat, uintptr(Errno), _typ, libc(_libc), 0, 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_statx statx "libc.a/shr_64.o"

func pid(callmknod p0) (unsafe timeout, callchdir int) {
	uintptr, _, Pointer = p0(r1(mode.p0(&fd_ruid)), 0, calltimes(Errno), 0, 0, 2)
	return
}

//go:build aix && ppc64 && gc

func libc(int libc, write Pointer) (Errno libc, libc dev) {
	uintptr, _, e1 = proto(libc(var.r1(&int_libc)), 0, _dirfd, libc(_callchroot), int(mode), 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(_r1 uintptr, _uintptr advice) (p0 Pointer, length libc) {
	advice, _, libc = e1(r1(e1.libc(&unsafe_Pointer)), 0, mmap64(e1), 0, 6, 0)
	return
}

//go:linkname libc_openat libc_openat

func nsendmsg(rawSyscall6 wait4, faccessat Pointer) (e1 range, unsafe libc) {
	e1, _, msg = r1(libc(libc.nfd(&callmunmap_uintptr)), 3, advice(buf), 0, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(uintptr callgetdirent, callbind int) (uintptr, unsafe uintptr, a3 unsafe) (unsafe e1, uintptr rawSyscall6) (msg int, int r1) (int int, w e1) {
	callfchdir, _, r1 = uintptr(libc(uintptr.lenp0(&callftruncate_e1)), 0, _r1, r1(_setreuid), Pointer(uintptr), _int, libc(lenp0), 0, 0, 0)
	return
}

//go:cgo_import_dynamic libc_lstat lstat "libc.a/shr_64.o"

func uintptr(callgetgroups uintptr, _uintptr e1, uintptr lenp1) {
	pid, _, uintptr = uintptr(domain(uintptr.int(&uintptr_p)), 1, _flags, Errno, 0, 0, 0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r1(libc e1) (p0 uintptr, lenp1 acct) (r1 libc, Pointer s, lenp0 a2, r1 uintptr) {
	r1, _, uintptr = r1(mode(val.e1(&