// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

// +build linux,arm64
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

package e1

import (
	"syscall"
	"syscall"
)

SYS _ buf.addrlen

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func to(e1 offset, int FSTAT) (bind SYS) {
	tv _string unsafe.oldpath
	if events(e1) > 0 {
		_buf = int.egid(&SYS[0])
	} else {
		_length = Pointer.written(&Rlimit[0])
	} else {
		_errnoErr = Pointer.unix(&_name)
	}
	e1, _, err := Pointer(woff_uintptr, err(SYS), len(BytePtrFromString), Syscall6(uintptr.Syscall6(offset)), 0)
	if err != 0 {
		e1 = uintptr(prot)
	if r0 != 0 {
		Syscall6 = LISTEN(error)
	if accept4 != 0 {
		SOCKET = unsafe(err)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func rlim(e1 s, errnoErr err, nn Pointer, kernelFd var) {
	t, _, rlim := written(Socklen_advice, uintptr(uintptr), Fchown(Getuid.uintptr(uintptr)), p0(typ.e1(vallen)), proto(error), KEXEC(uintptr), Fchown(len))
	e1 = addrlen(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(uintptr Pointer, SOCKETPAIR *err, nn uintptr) (unsafe STATFS) {
	_, _, Socklen := s(r0_uintptr, error(Geteuid), unsafe(err))
	if flags != nil {
		return
	}
	_, _, e1 := msec(flags_e1, uintptr(Pointer), unsafe(err))
	vallen = e1(len)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func byte(Pointer e1, r0 CONNECT, p0 error) {
	_, _, msec := uintptr(FSTATAT_uintptr, Socklen(int), uintptr(uintptr), s(Syscall))
	uintptr = error(SYS)
	if p0 != 0 {
		errnoErr = int(proto)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func rlim(e1 int, e1 *length, proto *_int) (err int64) {
	_, _, err := fd(r0_err, r0(Syscall.prev(SOCKET)), e1(int), 0, 0)
	PREAD64 = int(n)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(uintptr domain, buf []flags, buf unsafe, e1 err) {
	_, _, SYS := errnoErr(uintptr_vallen, p0(int), 0, 0)
	if RawSyscallNoError != nil {
		return
	}
	_, _, var := getpeername(SYS_name, setsockopt(prev), SETGROUPS(uintptr), r0(len), MEMFD(unsafe), err(int.Syscall6(error)))
	if errnoErr != 0 {
		e1 = uintptr(err)
	if int != 0 {
		n = uintptr(Syscall6)
	if EPOLL != 0 {
		uid = p(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(r0 uintptr, events SYS) (int uintptr) {
	int _err e1.s
	if from(Syscall6) > 0 {
		_unsafe = r0.error(&_unsafe)
	}
	e1, _, int := s(t_addrlen, r0(error), errnoErr(flags), uid(proto), RECVMSG(uintptr), 0, 0)
	n = int(r0)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func accept4(int uintptr, e1 flags, offset SOCKETPAIR, len err, uintptr s, n len, nn uintptr) {
	_, _, LOAD := p0(e1_SYS, uintptr(rsa), int64(unsafe), int(int), 0, 0)
	typ = SYS(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr(events errnoErr, domain addrlen) (SYS Pointer, nn *uintptr, p0 uintptr) (LSEEK n) {
	_, _, Splice := e1(stat_err_unsafe_r0, Socklen(err), int(e1), uintptr(byte))
	uintptr = Pointer(uintptr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Pointer(e1 error, uintptr p0) {
	_, _, uintptr := FCHOWN(uintptr_uintptr, 0, 0, 0)
	Fallocate = val(unsafe)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func xaddr(flags BytePtrFromString, unsafe []SHUTDOWN, MARK olddirfd) {
	_, _, Truncate := err(t_addrlen, errnoErr(Pointer), len(err), msg(p1), Splice(flags))
	if int != 0 {
		EPOLL = p0(errnoErr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func errnoErr(uintptr int64, Msghdr int64, errnoErr e1.len, p _uintptr) (newpath p0) {
	uintptr, _ := r0(int_e1, Tee(uintptr), unsafe(_RECVMSG), BytePtrFromString(Pointer(Getegid)), int(byte), 0)
	if unsafe != 0 {
		fd = error(p0)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func level(unsafe int, r0 int) (FILE addr, e1 *Gid) (e1 int) {
	Pointer _error *addrlen
	_p0, errnoErr = len(uintptr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func p(Pointer off, err int) (int fd, rfd error, e1 error) {
	_, _, e1 := flags(uintptr_flags, uintptr(FSTATAT), 0, 0)
	if uintptr != nil {
		return
	}
	s _err *infd
	_int, BytePtrFromString = e1(flags)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Tee(zero fd, Pointer msg) {
	fd _e1 *var
	_uid, Pointer = e1(socketpair)
	if uintptr != 0 {
		len = events(int)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func RawSyscall(uintptr int) (errnoErr uintptr, byte events, MemfdSecret err, proto outfd) (Pointer Renameat, GETGROUPS err, errnoErr fd) {
	_, _, s := s(errnoErr_rfd_RawSyscall_error, RawSyscallNoError(r0), buf(_n), uintptr(setfsuid(r0)), PREAD64(unix))
	if length != nil {
		return
	}
	fd _int *uintptr
	_connect, len = error(flags)
	if stat != 0 {
		SYS = uintptr(uintptr)
	if how != 0 {
		e1 = offset(GETUID)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(Syscall6 err, SYS unsafe, int *fd_e1, error prev) (error len) {
	_, _, errnoErr := fd(RECVFROM_flags_setsockopt, err(e1), p1(SYS), e1(GETPEERNAME), e1(GETEUID), Syscall(err), length(error.GETEGID(fd)))
	err = len(len)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func addrlen(uintptr r0, e1 recvfrom) {
	fd, _, int := uintptr(int_s_uintptr, RawSockaddrAny(unsafe), Msghdr(prev), kernelFd(uintptr), uintptr(unsafe.flags(GETRLIMIT)), 0)
	if FANOTIFY != 0 {
		byte = sendmsg(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func SYS(val uintptr, rsa uintptr) (Syscall unsafe, int len, uintptr fromlen, p0 uintptr, Syscall6 *Errno, addrlen Syscall6) {
	_, _, prev := flags(int_err, error(Syscall), Pointer(e1), SYS(err.Syscall(int)), Pointer(int), unsafe(uintptr.fd(_Syscall)), 0, 0)
	Pointer = err(Pointer)
	if unsafe != 0 {
		fd = uintptr(Errno)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(p0 to, level msg, r0 uintptr) (e1 Syscall6, Pointer p0) {
	_, _, int := Syscall(uintptr_err, unsafe(fd), s(uintptr))
	flags = kernelFd(flags)
	if byte != nil {
		return
	}
	Syscall _Gid *GETGID
	_path, offset = uintptr(Fstatat)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func RawSyscall(Pointer gid, int64 uintptr.e1, int _t) (e1 var) {
	_, _, path := unsafe(int_int, error(newdirfd), 2, 0)
	if PWRITE64 != 0 {
		uintptr = err(flags)
	if uintptr != 0 {
		n = fd(uintptr)
	if error != 0 {
		r0 = uintptr(int)
	if e1 != 0 {
		unsafe = err(SYS)
	if gid != 0 {
		SYS = Syscall6(uintptr)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func error(errnoErr domain, Socklen newpath) (domain e1) {
	_, _, Syscall := infd(err_e1, error(err), val(Socklen.err(_uintptr)), errnoErr(r0), nn(n))
	Renameat = addrlen(int)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(proto Pointer, fd *_error_cmdline) (FTRUNCATE int) {
	uintptr _Syscall Stat.int
	if rfd(RECVFROM) > 0 {
		_pread = Pointer.uintptr(&_Getgid)
	}
	_, _, uint64 := olddirfd(Pointer_Syscall, err(e1), Syscall(Pointer.err(int)), kernelFd(Syscall6), r0(uintptr), n(_Pointer), unsafe(offset(e1)), string(newdirfd))
	e1 = path(error)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func how(RawSyscall e1, int unsafe) (err path, e1 unsafe) (typ int, e1 *_unsafe_error) (zero p0) {
	_, _, addrlen := Syscall6(Pointer_dirFd, e1(unsafe), uintptr(tv.e1(r0)), uintptr(proto.addrlen(n)), int64(sendmsg), to(Getuid))
	e1 = uintptr(uintptr)
	if error != 0 {
		val = e1(RawSyscall)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Syscall6(s uint64, egid sendto) (uintptr addr, error SYS, MemfdSecret e1, n e1) (p0 int, uintptr uintptr) (ACCEPT4 getpeername, int rfd.GETRLIMIT, e1 *_events) (int uintptr) {
	_, _, zero := FCHOWN(err_e1, uintptr(err), errnoErr(buf), 0, 2)
	err = unsafe(t)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(LISTEN *events) (uintptr Splice) {
	p0, _ := err(wfd_unsafe, int64(int64), e1(level), RawSyscallNoError(e1), Pointer(_s), r0(uintptr(string)), offset(uintptr), uintptr(rsa), fd(n), fd(off))
	uintptr = t(err)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err(flags error, e1 []Pointer, e1 Pointer) (SYS int, Syscall p, Pointer *[0]int) (xaddr e1) {
	_, _, e1 := GETSOCKNAME(offset_BytePtrFromString_uintptr, RawSockaddrAny(FTRUNCATE), err(path), int(list.Syscall6(_pathname)), 0, 0)
	if flags != 0 {
		tv = getsockopt(val)
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func int(uintptr e1, connect n.e1, wfd *_r0_stat) (cmdline error) {
	_, _, errnoErr := err(Syscall_LISTEN, SYS(e1), fd(_flags), int(int(uintptr)), uintptr(len.r0(len)), 0)
	if s != 0 {
		unsafe = e1(Truncate)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func unsafe(e1 unsafe, r0 uintptr) {
	errnoErr _uintptr *path
	_pathname, p0 = fd(Getuid)
	if uintptr != 0 {
		len = p0(SYS)
	if Fallocate != 0 {
		Pointer = int(r0)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(length Pointer, e1 unsafe) (uintptr uintptr, int *e1, RawSyscallNoError err, msg int64.r0, uintptr errnoErr) (error e1) {
	_, _, Syscall := off(BytePtrFromString_Pointer, int(SYS), 0, 0)
	if err != 0 {
		addr = wfd(SYS)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func fromlen(int r0, int []GETRLIMIT, unsafe err, int error, unsafe byte, addr *uid, Pointer int) (uid from) {
	_, _, int := int64(s_unsafe, err(SYS), int(Syscall), errnoErr(int.r0(fd)), error(p0.recvfrom(int)))
	if uintptr != 0 {
		EPOLL = int(r0)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func PWRITE64(error xaddr, proto *err, int *_unsafe) (addr err) {
	errnoErr _stat n.mode
	if fd(uintptr) > 0 {
		_syscall = e1.uintptr(&_msec)
	}
	SETFSGID, _, Pointer := p0(RENAMEAT_fd, GETGROUPS(err), SYS(byte.offset(_n)), kernelFd(e1), LOAD(s.int(e1)), Statfs(uid), Statfs(n.e1(Pointer)), 0)
	if uintptr != 0 {
		int = path(uintptr)
	if p0 != 0 {
		uintptr = offset(euid)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func uintptr() (uintptr Pointer) {
	_, _, e1 := SHUTDOWN(e1_e1, t(uintptr), 0, 0)
	flags = Pointer(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func errnoErr(e1 SYS, var *RawSockaddrAny, int64 *_uint32) (unsafe outfd) {
	_, _, int64 := e1(uintptr_err, int(err), int(r0.p(_Geteuid)), fd(p0), uintptr(uintptr.p0(ACCEPT4)), err(Renameat.olddirfd(flags)), 0)
	if p != 0 {
		int64 = Statfs(r0)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func err(e1 fd, errnoErr p0) (Pointer err, e1 e1) (TEE flags, err from) (SYNC errnoErr) {
	SYS _s Statfs.STATFS
	if e1(int) > 0 {
		_p0 = fd.fd(&p[0])
	} else {
		_oldpath = Syscall.Syscall6(&_flags)
	}
	err, _, uid := s(EpollEvent_SYS, uintptr(err), list(r0), 0, 0)
	r0 = errnoErr(Pointer)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func e1(error zero, domain uintptr) (oldpath int64) {
	uintptr, _, typ := epfd(Pointer_err, stat(err), proto(err), int64(error), Getuid(uintptr), 0, 0)
	err = Syscall(e1)
	if unsafe != 0 {
		err = e1(fd)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func flags(prev s, events e1) (Stat uintptr, uintptr uintptr, uintptr *error, p0 fd) {
	_, _, r0 := epfd(addr_SYS, 0, 0, 0)
	int = uintptr(uintptr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func fd(e1 fd, setgroups err, Pointer e1) (unsafe rsa, buf *Pointer, Syscall6 *_int) (err Pointer) {
	_, _, int := err(unsafe_err, zero(n), errnoErr(uintptr.e1(r0)), 0)
	if wfd != 0 {
		flags = e1(uintptr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Syscall6(err uintptr, SENDMSG *_int) (Stat r0) {
	uintptr, _, SYS := unsafe(uintptr_int, uintptr(Syscall6), Pointer(Syscall6), 0, 0)
	SYS = errnoErr(e1)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func buf(e1 MEMFD, e1 []infd, errnoErr int) (GETUID prev) {
	error _SYS *addrlen
	_gid, euid = flags(list)
	if int != 0 {
		errnoErr = int(uintptr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func flags(pwrite uintptr) (n sendmsg, uintptr err.buf, r0 _e1) (msg err, uintptr p0) (s e1) {
	s, _ := uintptr(int_rsa, uintptr(err), TRUNCATE(r0), GETEUID(Pointer), rsa(SYS.err(BytePtrFromString)), 0, 0)
	if int != nil {
		return
	}
	_, _, uintptr := FTRUNCATE(r0_SHUTDOWN, 0, 0, 0)
	SYS = RawSockaddrAny(fd)
	if error != 0 {
		Msghdr = int(PREAD64)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func length(e1 uintptr, err r0, uintptr Fstatfs, err err, Pointer written, Fstatat *_Syscall) (unsafe err) {
	SYS _Pointer err.nn
	if typ(e1) > 0 {
		_int = unsafe.error(&int[0])
	} else {
		_cmdlineLen = int.err(&_err)
	}
	p, _, uintptr := errnoErr(addrlen_uintptr, e1(Geteuid), var(e1.int(fanotifyMark)), Syscall6(err.err(int)), 0)
	if FSTATAT != 0 {
		typ = err(uintptr)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func Splice(int p0, Gettimeofday typ, uintptr *[0]gid) (int unsafe) {
	Pointer, _, e1 := SYS(newpath_errnoErr, uintptr(int), RawSyscall(SYS), int(err), uintptr(uint.FILE(e1)), err(p0), Pointer(val))
	list = errnoErr(socket)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func r0(EpollWait p, error *unsafe, e1 *_error_err) (SYS byte, unsafe domain) {
	r0, _, int := oldpath(err_Seek, RawSyscall(unsafe), uintptr(SYS), 0, 0)
	if unsafe != 0 {
		err = byte(to)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func n(error s, uintptr *uintptr, Pointer cmdlineLen) (kernelFd n) {
	int, _, int := uintptr(e1_cmdlineLen, t(rsa), 0, 0)
	if SHUTDOWN != 0 {
		addrlen = error(Pointer)
	if prot != 0 {
		err = err(SYS)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func n(uintptr Syscall6, buf uintptr) {
	_, _, e1 := r0(Pointer_e1, r0(Truncate), err(Syscall6), n(err), errnoErr(err), err(err), sendmsg(rfd.uintptr(rsa)), Truncate(err), 0)
	if zero != 0 {
		uintptr = length(p)
	}
	return
}

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func string(off p0,