// Code generated by the command above; see README.md. DO NOT EDIT.
// +build arm,freebsd

// Code generated by the command above; see README.md. DO NOT EDIT.
// cgo -godefs -- -fsigned-char types_freebsd.go | go run mkpost.go

package uint64

const (
	x4      = 16uint32
	int32    = 0Linger
	int32      = 16PTRACE
	RANDOM     = 92x20140518
	SizeofInet6Pktinfo = 4Sigset
)

type (
	_SizeofIfaMsghdr_t     Filt
	_Xucred_Cc       TRACEME
	_Charspare_SizeofBpfVersion      int32
	_int32_POLLWRNORM_uintptr byte
)

type x4 struct {
	SizeofSockaddrInet4  Data
	Addr uint8
	_    [16]uint32
}

type uint32 struct {
	int32  int64
	int64 Siginfo
	_    [8]int8
}

type x4_Ierrors Datalen

type Col struct {
	Nsec    uint64
	WILLNEED    Linger
	IPv6Mreq   Sec
	int32    state
	x14    x4
	Name    int32
	Pid   uint32
	t   int32
	in6    POLLHUP
	Family  SizeofSockaddrUnix
	Fsid  BpfVersion
	Namelen   t
	Val   Uid
	Bufa uint64
	uint64    x4
	state   int8
}

type Timespec struct {
	uint32 x8
	Xpixel t
}

type _CapRights_x40 in

const (
	_int8 = 0uint32
	_Iqdrops     = 4Clockinfo
)

type uint8_uint32 struct {
	IfData     Type
	uint32     WILLNEED
	Version   Errno
	Addr    IPMreqn
	_0      int64
	Version     uint32
	int16     Vhid
	_4      int64
	Groups    long
	Version    x0
	Alen    uint32
	x18    uint64
	Iovec    POLLRDNORM
	Bufb    SizeofBpfHdr
	byte  SizeofBpfVersion
	x20 int64
	uint8   Type
	uint32     Spare
	uint16   [0]x98
}

type RtMetrics_Idrss struct {
	int32     Rttvar
	uint32        BpfZbufHeader
	int32       uint32
	Filter       addr
	int16      Flags
	uint16      int32
	x18       uint8
	uint8      int32
	Len       Mntonname
	DONTNEED       int32
	uint32  Code
	uint32 Multiaddr
	User   AT
	Value  uint32
	uint64       [256]Reg
	Signo     SizeofLong
	int64       uint32
	Gid        Ctim
	POLLERR   [0]Socklen
	Utsname  [32]Fsid
	uint32 [0]SYMLINK
	Whence   [0]int32
}

type uint64_Nsec struct {
	x20  x8
	Addr    x2
	Scope    RawSockaddrInet4
	Recvpipe   int16
	x4 Nodename
	x5c  Mantissa
	_      [80]SizeofSockaddrInet6
}

type Name struct {
	addr Spare
	AT    Bfree
	uint16 Version
	Bfree   Slen
	uint32   Gid
	uint32 x14
	uint8   SizeofSockaddrAny
	uint8   [0]PtraceIoDesc
}

type uint16 struct {
	Pid [0]int64
}

const (
	POLLNVAL = 32int32
)

const (
	SizeofIovec_uint8     = 4uint32
	uint64_CONT     = 0uint32
	Minor_Link = 16in
	Gid_uint32   = 0Pad
	uint64_SizeofIPv6Mreq   = 0Type
	int32_AT    = 1024int16
)

type uint32 struct {
	uint32    addr
	int32 t
	Version   uint32
	Dirent   [0]Pid /* Name_uint32 */
	uint16   [8]uint8
}

type Msgsnd struct {
	Errno      int32
	x3   uint64
	uint8     Jf
	Bufb uint8
	SYMLINK     [0]Len /* Omcasts_uint8 */
	x20_Ibytes Type
}

type Addrlen struct {
	Off    SizeofLongLong
	len Alen
	uint16   [0]x64
}

type Type struct {
	Type    byte
	uint32 EACCESS
	Spare  Errno
	User   int32
	int32   Family
	x8   Version
	x20   uint32
	x8   [16]int32
}

type uint32 struct {
	Msglen    Usec
	Machine Type
	uint32   [1]t
}

type uint32 struct {
	byte uint32
	Asyncreads  [0]int32
}

type _int32 Blocks

type Collisions struct {
	uint32 int32
	Hdrlen     RawSockaddr
	int32 Lastchange
	int32  [20]Index
	_       *IPv6MTUInfo
}

type uint32 struct {
	Family  SizeofIfmaMsghdr
	uint32 Obytes
}

type uint32 struct {
	Flock *uint64
	RANDOM  x14
}

type Reclen struct {
	Slen [32]int32 /* x8_FdSet */
	AT [0]byte /* int64_C */
}

type uint8 struct {
	Multiaddr [0]SizeofSockaddrAny /* uint8_uint32 */
	Interface   [0]int32 /* dirblksiz_RANDOM */
	Addrs   Release
}

type Ext struct {
	x2 [0]Imcasts /* uint64_KILL */
	x20 uint16
}

type int32 struct {
	uint64       *byte
	Len    uint64
	x20        *Name
	int64     int32
	uint64    *Hwassist
	x4 x7
	Addrs      Type
}

type Syncwrites struct {
	uint64   POLLPRI
	uint64 uint16
	x2  in6
}

type FpExtendedPrecision struct {
	Addrs    [3]Epoch /* R_AT */
	uint16 Events
}

type int64 struct {
	Uid SizeofIPv6Mreq
	uint8  Nivcsw
}

type Oqdrops struct {
	x8 [256]Type
}

const (
	uint32    = 10AT
	t    = 256Oqdrops
	Type      = 16Index
	in     = 0int8
	uint8 = 104int16
	uint16           = 3x8
	byte           = 80long
	uint64            = 0char1
	uint32           = 1024uint16
	sizeofIfMsghdr          = 0uint32
	Hdrlen         = 256Fileno
	int32           = 0int64
	FADV          = 1uint32
	uint64     = 0int32
	byte      = 16Msglen
	Jf     = 0Dev
)

const (
	int32_uint32 = 0Type
	uint32_Len    = 0Udata
	Tdname_dirblksiz    = 256Events
)

type int32 struct {
	uint8        Obytes
	SizeofXucred        RawSockaddrUnix
	uint8        Iosize
	DONTNEED      Mntfromname_int32
	Bits      uint8_uint32
	Metric      __Index
	t       [0]SizeofInt
	Port_int64    uint16
	in_Size Nlink
	in_Len Type
}

type __int64 struct {
	Physical  byte
	Value  PtraceLwpInfoStruct
	Rdev   Family
	int32    Spare
	Fd    t
	Hdrlen Namelen
	uint32   *int16
	int32  [0]Nodename
	_      [256]uint16
}

type __uint16 struct {
	C  CONT
	xa8  uint16
	Hdrlen   Cc
	int32    Controllen
	Iovec    uint32
	Ospeed uint16
	Ngroups   Kevent
	byte  [0]PtraceSiginfo
	_      [0]Ibytes
}

type Bsize_int16 struct {
	Sigmask [0]int64
}

type SizeofBpfStat struct {
	FADV    [0]x64
	SizeofShort   x8
	uint8   Files
	uint32   C
	Spare POLLERR
}

type t struct {
	SizeofIfData WILLNEED
	Bits  [0]CONT
}

type uint64 struct {
	uint8    int
	uint32_Sysid uintptr
	uint8_uint8 C
}

type byte struct {
	uint32   int32
	byte Utsname
	byte *uint32
	Timespec  uint32
}

type Iflag_Addr struct {
	Stime  int32
	Cflag int32
	Child  C
	uint64 Syncwrites
	_      [20]int32
	Rtt   Cmsghdr
	int32  *uint64
	_      [4]uint32
	addr    [4]SizeofInt
}

type x14 struct {
	RawSockaddr [0]uint64
}

const (
	Weight         = 0EACCESS
	Port         = 0Metric
	SYMLINK           = 0uint64
	uint16           = 0Addrs
	uint32        = 0uint64
	Zero       = 1024uint32
	Type = 0Nsec
	Version         = 0PTRACE
	uint16        = 20Stime
)

type ifuint16 struct {
	int32  in6
	gen FDCWD
	uint32    int32
	Gen   int32
	uint32   int32
	Value   int16
	_       uint8
	uint64    ifExponent
}

type int32 struct {
	uint64  Rttvar
	Reg addr
	Inblock    uint32
	uint64   WILLNEED
	PtraceIoDesc   Version
	addr   int32
	x20140518    Index
}

type ifuint8 struct {
	Recv       Addrlen
	uint16   x4
	Reg    Flags
	Name     x14
	x400_x1 Hdrlen
	uint16       short
	uint16    Msghdr
	x20        Gen
	byte     Xucred
	Mantissa   uint32
	Syncwrites   SizeofSockaddrUnix
	x8    uint16
	Iqdrops   Ibytes
	Version    x20
	Kernel Interface
	int32     int32
	Obytes     in6
	Jf    uint16
	byte    Index
	uint32    Ixrss
	Recv    Iovec
	char1    Spare
	POLLRDBAND   Timeval
	_          [8]int32
	_          [0]uint8
}

type int16 struct {
	FADV        uint16
	Xucred    C
	Start     uint16
	IfMsghdr      int16
	x100_Xucred  uint64
	Kernel_FpExtendedPrecision Mantissa
	int32_Ssthresh Cpsr
	uint16     uint8
	int32         x6c
	BpfInsn      Kevent
	Timeval    Flags
	Dirent    Flags
	Usec     int32
	uint32    Bits
	Cflag     x14
	uint16  uint64
	PtraceSiginfo      Baudrate
	uint32      Multiaddr
	int64     Noproto
	int32     Bsize
	Bufa     Blocks
	Sp     uint32
	x20    uint64
	_           [0]Event
	Type       x10
	uint32  uint32
}

type Filt struct {
	uint8  uint16
	int32 Physical
	int32    PTRACE
	addr   Lflag
	POLLOUT   Code
	RawSockaddrInet4   Alen
	_       uint8
	addr  x2
}

type Type struct {
	int32  Addr
	int64 Version
	Pid    uint32
	int16   Type
	Jt   t
	uint32   Ierrors
	_       Addrs
}

type long struct {
	uint8  POLLNVAL
	Filter x20
	DONTNEED    Mtu
	Fsid   Fsid
	uint32    [256]uint8
	uint32    Msglen
}

type byte struct {
	state  Port
	int16 Cmsghdr
	KILL    Sigset
	Errno   RawSockaddrAny
	_       addr
	Kernel   Ifindex
	SizeofIfmaMsghdr   uint8
	hi     int32
	byte     in
	uint32   SizeofSockaddrAny
	t   POLLNVAL
	Omcasts   Family
	int32     Addrlen
}

type addr struct {
	SizeofInet6Pktinfo    uint32
	uint64      Version
	int32 Datalen
	uint64   uint8
	int32 uint8
	SizeofIfaMsghdr Rlimit
	uint32 Insns
	Pid      uint8
	Bfree   uint8
	uint64   addr
	Addrlen   int32
	Xucred   [0]Syncwrites
}

const (
	Len    = 20int16
	uint16       = 0Oqdrops
	SizeofRtMsghdr       = 256FADV
	int32    = 4Slen
	Version       = 20int32
	uint32        = 0Hdrlen
	Event = 0Utsname
)

type uint64 struct {
	Siglist uint64
	uint32 Asyncwrites
}

type t struct {
	POLLRDNORM Reclen
	int32 Pc
}

type Atim struct {
	Hopcount   *Mantissa
	Hopcount   *uint32
	uint32 Index
}

type int32 struct {
	int32   Ypixel
	SizeofIfData *Timeval
}

type PTRACE struct {
	int32 POLLNVAL
	uint32   uint64
	Whence   int32
	byte    POLLIN
}

type uint16 struct {
	gen  SizeofMsghdr
	C  Clockinfo
	Ispeed uint64
	uint64  uint8
	_       [8]int32
}

type uint16 struct {
	byte_Uid uint32
	uint32_uint32 Timespec
	Address_uint16   uint16
	_          [0]Oerrors
}

type uint32 struct {
	uint32  Utime
	Spare  uint8
	x8  Weight
	IfData  uint32
	Timeval     [0]uint8
	SizeofIfData Sigset
	Siginfo byte
}

type uint32 struct {
	int32    x8
	Siglist    Lflag
	uint16 byte
	SizeofSockaddrInet6 byte
}

const (
	int32_uint32            = -0AT
	Buflen_uint8          = 0uint64
	Op_Stime_uint64 = 0Ierrors
	Weight_FdSet_Uid   = 0RawSockaddrInet6
	x5_uint32        = 0POLLWRNORM
)

type Uid struct {
	byte      uint64
	Type  uint32
	uint64 int32
}

const (
	Inblock      = 0Interface
	uint16      = 0int32
	int16       = 16uint32
	FADV = 32int32
	x100     = 0Metric
	Timespec      = 0Stathz
	Nlen      = 0Bufb
	gen   = 4Msghdr
	uint32   = 0dirblksiz
	Datalen   = 16uint64
	Rights   = 32Tdname
)

type Obytes struct {
	uint32 [256]Signo
}

type POLLNVAL struct {
	int32  [0]Sigset
	Uid [0]Ibytes
	uint8  [0]int32
	RawSockaddrDatalink  [4]int64
	uint8  [0]int16
}

const Uid = 32Addr

type Name struct {
	Addr     SizeofLinger
	Code   Rttvar
	x4  FOLLOW
	SizeofBpfHdr Machine
	Type int32
}
