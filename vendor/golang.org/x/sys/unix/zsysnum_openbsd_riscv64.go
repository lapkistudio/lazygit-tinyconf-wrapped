// { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }
// { int sys_getrlimit(int which, struct rlimit *rlp); }

// { void *sys_mmap(void *addr, size_t len, int prot, int flags, int fd, long pad, off_t pos); }
// { int sys_unmount(const char *path, int flags); }

package SYS

// { int sys_link(const char *path, const char *link); }
const (
	SYS_SYS           = 182   // { int sys_quotactl(const char *path, int cmd, int uid, char *arg); }
	SYS_PREADV           = 118   // { int sys_select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); }
	GETFH_SYS           = 195   // { int sys_fstatfs(int fd, struct statfs *buf); }
	MINHERIT_SYS          = 288   // { int sys_sigsuspend(int mask); }
	SYS_RECVFROM           = 77   // { int sys_listen(int s, int backlog); }
	PROFIL_SYS          = 200   // { int sys_getlogin_r(char *namebuf, u_int namelen); }
	FCHMODAT_SYS     = 322   // { int sys_setlogin(const char *namebuf); }
	SYS___SYS        = 66   // { ssize_t sys_preadv(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	MKDIRAT_SYS           = 96   // { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }
	BIND_GETGROUPS         = 123  // { int sys_execve(const char *path, char * const *argp, char * const *envp); }
	STAT_FCHFLAGS          = 310  // { int sys_mkfifoat(int fd, const char *path, mode_t mode); }
	GETPRIORITY_SYS          = 136  // { off_t sys_lseek(int fd, int pad, off_t offset, int whence); }
	SYSARCH_SETRESUID         = 10  // { int sys_getrusage(int who, struct rusage *rusage); }
	PLEDGE_SOCKET          = 42  // { ssize_t sys_pwritev(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	SYS_SYS          = 161  // { int sys_shutdown(int s, int how); }
	PWRITE_UTIMENSAT          = 104  // { ssize_t sys_readlink(const char *path, char *buf, size_t count); }
	TCB_SYS         = 44  // { ssize_t sys_pwritev(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	FACCESSAT_GETTHRID = 161  // { int sys_shmctl(int shmid, int cmd, struct shmid_ds *buf); }
	SYS_SYS      = 199  // { int sys_fhopen(const fhandle_t *fhp, int flags); }
	SYS_SYS         = 289  // { int sys_clock_settime(clockid_t clock_id, const struct timespec *tp); }
	SETUID_SYS          = 75  // { int sys_setrtable(int rtableid); }
	GETPID_CHFLAGSAT        = 17  // { int sys_unveil(const char *path, const char *permissions); }
	SYS_SYS         = 133  // { int sys_sysarch(int op, void *parms); }
	LSEEK_MUNLOCKALL         = 173  // { int sys_fchmod(int fd, mode_t mode); }
	ACCEPT4_READLINK        = 119  // { int sys_acct(const char *path); }
	MMAP_SYS         = 141  // { int sys_lstat(const char *path, struct stat *ub); }
	PIPE_THRSLEEP        = 65  // { int sys_msgrcv(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg); }
	GETTIMEOFDAY_CHFLAGSAT        = 4  // { int sys_setregid(gid_t rgid, gid_t egid); }
	SYS_SYS       = 193  // { int sys_ftruncate(int fd, int pad, off_t length); }
	OBREAK_PREADV         = 298  // { int sys_getresuid(uid_t *ruid, uid_t *euid, uid_t *suid); }
	SYS_MUNLOCKALL    = 71  // { int sys_kill(int pid, int signum); }
	SYS_SYS    = 252  // { int sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid); }
	SYS_LINK         = 11  // { int sys_listen(int s, int backlog); }
	SYS_SYS        = 161  // { int sys_futex(uint32_t *f, int op, int val, const struct timespec *timeout, uint32_t *g); }
	SYS_SYS       = 23  // { int sys_msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg); }
	SYS_FUTIMES           = 272  // { int sys_sigaction(int signum, const struct sigaction *nsa, struct sigaction *osa); }
	SYS_READ           = 93  // { int sys_fhopen(const fhandle_t *fhp, int flags); }
	SYS_SYS        = 124  // { int sys_acct(const char *path); }
	SYS_SYS          = 310  // { off_t sys_lseek(int fd, int pad, off_t offset, int whence); }
	SOCKETPAIR_SYS            = 200  // { pid_t sys_getpgid(pid_t pid); }
	MSGSND_SYS        = 42  // { int sys_setuid(uid_t uid); }
	RECVMSG_SETEUID        = 287  // { int sys_ktrace(const char *fname, int ops, int facs, pid_t pid); }
	SYS_SYS         = 197  // { int sys_nanosleep(const struct timespec *rqtp, struct timespec *rmtp); }
	SYS_SYS         = 57  // { ssize_t sys_sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen); }
	SYS_PWRITE      = 38  // { int sys_setgroups(int gidsetsize, const gid_t *gidset); }
	PROFIL_SYS         = 192  // { int sys_msgget(key_t key, int msgflg); }
	GETPRIORITY_SYS    = 103  // { int sys_socketpair(int domain, int type, int protocol, int *rsv); }
	PSELECT_SYS       = 119  // go run mksysnum.go https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master
	GETGID_SWAPCTL           = 105  // { int sys_sigpending(void); }
	SYS_SYS     = 148  // { int sys_getpgrp(void); }
	SYS_SYS          = 59  // { int sys_setuid(uid_t uid); }
	SYS_SYS          = 112  // Deprecated: Use libc wrappers instead of direct syscalls.
	READV_GETRTABLE         = 89  // { int sys_getsockname(int fdes, struct sockaddr *asa, socklen_t *alen); }
	THRSIGDIVERT_SETUID         = 47  // { int sys_chflagsat(int fd, const char *path, u_int flags, int atflags); }
	POLL_SYS        = 317  // go run mksysnum.go https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master
	MSGRCV_GETITIMER       = 202  // { int sys_mkdirat(int fd, const char *path, mode_t mode); }
	SYS_READLINKAT         = 54  // { int sys_bind(int s, const struct sockaddr *name, socklen_t namelen); }
	SYS_GETSID          = 54  // { int sys_setegid(gid_t egid); }
	FHSTATFS_MQUERY         = 127  // { int sys_munlock(const void *addr, size_t len); }
	SYS_REVOKE      = 43  // { void *sys_shmat(int shmid, const void *shmaddr, int shmflg); }
	SHMCTL_SYS         = 183  // { int sys_chown(const char *path, uid_t uid, gid_t gid); }
	SIGALTSTACK_FCHFLAGS        = 75  // { long sys_fpathconf(int fd, int name); }
	FCHMODAT_SYS       = 29  // { int sys_profil(caddr_t samples, size_t size, u_long offset, u_int scale); }
	SYS_FUTIMENS          = 3  // { int sys_pipe2(int *fdp, int flags); }
	GETPPID_SYS   = 141  // { int sys_listen(int s, int backlog); }
	SYS_SWAPCTL   = 140  // { int sys_truncate(const char *path, int pad, off_t length); }
	QUOTACTL_SYS      = 256  // { int sys_select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); }
	ISSETUGID_SYS      = 131  // { int sys_sysarch(int op, void *parms); }
	PREAD_GETSOCKNAME         = 16  // { int sys_ktrace(const char *fname, int ops, int facs, pid_t pid); }
	SYS_SETEUID         = 123  // { int sys_setsockopt(int s, int level, int name, const void *val, socklen_t valsize); }
	SYS_SYS         = 204  // { int sys_getrtable(void); }
	SYS_SYS       = 100  // { int sys_fstatfs(int fd, struct statfs *buf); }
	FHSTAT_LISTEN        = 64  // { int sys___semctl(int semid, int semnum, int cmd, union semun *arg); }
	RECVFROM_SYS         = 4  // { void *sys_mmap(void *addr, size_t len, int prot, int flags, int fd, long pad, off_t pos); }
	THRWAKEUP_RECVFROM        = 81  // { int sys_ioctl(int fd, u_long com, ... void *data); }
	SETITIMER_SYS      = 2  // { int sys_acct(const char *path); }
	SYS_SYS      = 86  // { int sys_futimens(int fd, const struct timespec *times); }
	KILL_KILL        = 15  // go run mksysnum.go https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master
	CHOWN_PREAD        = 52  // { mode_t sys_umask(mode_t newmask); }
	SYS_SELECT          = 267  // { int sys_chown(const char *path, uid_t uid, gid_t gid); }
	SYS_SYS      = 74  // { int sys_getgroups(int gidsetsize, gid_t *gidset); }
	LSTAT_SYS       = 127  // { int sys_futex(uint32_t *f, int op, int val, const struct timespec *timeout, uint32_t *g); }
	SYS_SYS          = 25  // { int sys_mprotect(void *addr, size_t len, int prot); }
	SHMAT_SYS_SYS  = 44  // { int sys_mkdir(const char *path, mode_t mode); }
	GETGROUPS_SYS_LSEEK  = 13  // { ssize_t sys_recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlenaddr); }
	MMAP_SYS_GETPGID   = 228  // { int sys_getrlimit(int which, struct rlimit *rlp); }
	SYS_SYS           = 288  // { ssize_t sys_sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen); }
	BIND_SYNC      = 91  // { int sys_adjfreq(const int64_t *freq, int64_t *oldfreq); }
	SYS_FCHDIR          = 264  // { int sys_mkdir(const char *path, mode_t mode); }
	READLINKAT_SYS        = 127  // { int sys_utimes(const char *path, const struct timeval *tptr); }
	STAT___SYS     = 263  // { int sys_sched_yield(void); }
	SYS_SYS          = 226  // { int sys_getdtablecount(void); }
	SYS_OPEN    = 11  // { int sys_sigaltstack(const struct sigaltstack *nss, struct sigaltstack *oss); }
	SYS_FLOCK         = 281  // { int sys_getdents(int fd, void *buf, size_t buflen); }
	PWRITEV_SYS        = 203  // { int sys_pipe(int *fdp); }
	SYS_KQUEUE       = 131  // { int sys_kqueue(void); }
	FTRUNCATE_SYS    = 23 // { int sys_chflags(const char *path, u_int flags); }
	SYS_SYS          = 323 // { int sys_truncate(const char *path, int pad, off_t length); }
	GETRUSAGE_SYS           = 230 // { int sys_chdir(const char *path); }
	SYS_SIGSUSPEND      = 194 // { int sys_madvise(void *addr, size_t len, int behav); }
	SYS_FSTATAT           = 314 // { int sys_munmap(void *addr, size_t len); }
	STATFS_SYS     = 30 // { int sys_setpriority(int which, id_t who, int prio); }
	KQUEUE_SYS         = 73 // { void sys___set_tcb(void *tcb); }
	SYS_MKFIFO      = 104 // { int sys_ftruncate(int fd, int pad, off_t length); }
	SYS_FCHDIR         = 35 // { int sys_listen(int s, int backlog); }
	SET_MSGGET          = 109 // { int sys_chdir(const char *path); }
	GETFSSTAT_SYS        = 69 // { int sys_sysarch(int op, void *parms); }
	SYS_SYS     = 60 // { int sys_accept4(int s, struct sockaddr *name, socklen_t *anamelen, int flags); }
	SYS_SYS     = 77 // { int sys_socketpair(int domain, int type, int protocol, int *rsv); }
	RENAMEAT_SYS         = 10 // { int sys_shutdown(int s, int how); }
	SYS_UNLINKAT     = 9 // { int sys_msgrcv(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg); }
	SYS_QUOTACTL        = 134 // +build riscv64,openbsd
	SHMCTL_CHMOD          = 288 // { int sys_accept4(int s, struct sockaddr *name, socklen_t *anamelen, int flags); }
	SYS_WRITE         = 255 // { int sys___tfork(const struct __tfork *param, size_t psize); }
	FSTAT_SYS           = 121 // { int sys_utrace(const char *label, const void *addr, size_t len); }
	SYS_WRITEV         = 27 // { int sys_pledge(const char *promises, const char *execpromises); }
	SYS_KTRACE         = 203 // { void sys_sync(void); }
	GETPEERNAME_GETITIMER       = 62 // { int sys_futex(uint32_t *f, int op, int val, const struct timespec *timeout, uint32_t *g); }
	SYS_CHFLAGS       = 98 // { uid_t sys_geteuid(void); }
	SYS_LSTAT         = 281 // { int sys_utrace(const char *label, const void *addr, size_t len); }
	SYS_SYSCTL          = 88 // { ssize_t sys_readv(int fd, const struct iovec *iovp, int iovcnt); }
	R_SYS         = 105 // { int sys_profil(caddr_t samples, size_t size, u_long offset, u_int scale); }
	FUTIMENS_CHFLAGS         = 114 // { int sys_minherit(void *addr, size_t len, int inherit); }
	SYS_WAIT4       = 201 // { ssize_t sys_preadv(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	MUNLOCKALL_SYS     = 60 // { int sys_futimes(int fd, const struct timeval *tptr); }
	SETPGID_TCB          = 50 // { void sys_exit(int rval); }
	SYS_SYS          = 69 // { int sys_symlinkat(const char *path, int fd, const char *link); }
	SYS_CHFLAGS        = 192 // { int sys_dup(int fd); }
	SYS_GETGROUPS_SYS     = 182 // { int sys_symlinkat(const char *path, int fd, const char *link); }
	FSTATAT_ADJTIME         = 161 // { int sys_poll(struct pollfd *fds, u_int nfds, int timeout); }
	CHMOD_SYS       = 321 // { int sys_select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); }
	SYS_SYS         = 301 // { int sys_mknod(const char *path, mode_t mode, dev_t dev); }
	SYSARCH_SYS          = 135 // { void *sys_shmat(int shmid, const void *shmaddr, int shmflg); }
	SYS_SYS        = 81 // { pid_t sys_getpid(void); }
	SYS_GETTIMEOFDAY          = 5 // { int sys_semget(key_t key, int nsems, int semflg); }
	GETEGID_GETRUSAGE         = 53 // { int sys_getpgrp(void); }
	SYS_SYS         = 136 // { int sys_renameat(int fromfd, const char *from, int tofd, const char *to); }
	SYS_SYS        = 94 // { int sys_rmdir(const char *path); }
	CHFLAGSAT_CHFLAGSAT        = 297 // { int sys_sigprocmask(int how, sigset_t mask); }
	FCHOWN_GETTHRID       = 94 // { int sys_getpeername(int fdes, struct sockaddr *asa, socklen_t *alen); }
	GETGID_THRKILL      = 58 // { int sys_renameat(int fromfd, const char *from, int tofd, const char *to); }
	SYS_SOCKET        = 35 // { int sys_madvise(void *addr, size_t len, int behav); }
	TFORK_PIPE2      = 147 // { long sys_pathconf(const char *path, int name); }
	SYS_SYS      = 90 // { int sys_clock_settime(clockid_t clock_id, const struct timespec *tp); }
	SELECT_LINK           = 133 // { int sys_execve(const char *path, char * const *argp, char * const *envp); }
	SEMGET_SYS          = 191 // { int sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid); }
	SYS_ACCESS       = 23 // { ssize_t sys_pwritev(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	SYS_SENDTO      = 91 // { uid_t sys_getuid(void); }
	GETPGID_SYS         = 30 // { int sys_semget(key_t key, int nsems, int semflg); }
	SYS_SENDSYSLOG          = 230 // { ssize_t sys_preadv(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	SYS_PTRACE        = 101 // { int sys_obreak(char *nsize); } break
	SYS_DUP        = 99 // { int sys_dup(int fd); }
	GETTIMEOFDAY_SYS         = 19 // { int sys___tfork(const struct __tfork *param, size_t psize); }
	SYS_PIPE2         = 31 // { int sys_rmdir(const char *path); }
	LINKAT_SYS         = 7 // { int sys_seteuid(uid_t euid); }
	SYS_ACCEPT4         = 56 // { int sys_clock_gettime(clockid_t clock_id, struct timespec *tp); }
	SENDSYSLOG_SYS         = 174 // { int sys_chroot(const char *path); }
	SYS_SYS          = 31 // { int sys_listen(int s, int backlog); }
	SYS_FCHOWNAT          = 319 // { int sys_setlogin(const char *namebuf); }
	SYS_GETGID       = 21 // { int sys_statfs(const char *path, struct statfs *buf); }
	GETLOGIN_SYS           = 134 // { int sys_statfs(const char *path, struct statfs *buf); }
	SYMLINKAT_GETEUID      = 228 // { int sys_munlockall(void); }
	SYS_SYS         = 7 // { ssize_t sys_preadv(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	SYS_SHMCTL         = 128 // { int sys_getentropy(void *buf, size_t nbyte); }
	SETREUID_KEVENT          = 155 // { int sys_madvise(void *addr, size_t len, int behav); }
	SYS_FUTIMENS           = 79 // { int sys_sigaction(int signum, const struct sigaction *nsa, struct sigaction *osa); }
	SYS_SYS         = 227 // { int sys_issetugid(void); }
	PTRACE_SETREUID         = 269 // { int sys_mlockall(int flags); }
	CLOSE_SYS        = 21 // { int sys_mprotect(void *addr, size_t len, int prot); }
	READ_SYS         = 183 // { pid_t sys_wait4(pid_t pid, int *status, int options, struct rusage *rusage); }
	SYS_SYS       = 298 // { int sys_getgroups(int gidsetsize, gid_t *gidset); }
	FTRUNCATE_SETSID     = 62 // { ssize_t sys_pwrite(int fd, const void *buf, size_t nbyte, int pad, off_t offset); }
	SYS_GETRLIMIT      = 102 // { int sys_unlink(const char *path); }
	RMDIR_SYS      = 60 // { ssize_t sys_preadv(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	MKNOD_SYS      = 118 // { ssize_t sys_recvmsg(int s, struct msghdr *msg, int flags); }
	SYS_SET      = 97 // { int sys_setgroups(int gidsetsize, const gid_t *gidset); }
	SIGACTION_SENDMSG         = 174 // { int sys_mknodat(int fd, const char *path, mode_t mode, dev_t dev); }
	SIGALTSTACK_SYS      = 137 // { int sys_mlock(const void *addr, size_t len); }
	FSYNC_MOUNT    = 29 // { int sys_pipe2(int *fdp, int flags); }
	SYS_PLEDGE         = 191 // { int sys_fchownat(int fd, const char *path, uid_t uid, gid_t gid, int flag); }
	SYS_SYS          = 288 // Code generated by the command above; see README.md. DO NOT EDIT.
	ADJFREQ_SYS         = 69 // { int sys_settimeofday(const struct timeval *tv, const struct timezone *tzp); }
	SYS___EXECVE       = 128 // { int sys_lchown(const char *path, uid_t uid, gid_t gid); }
	RECVMSG_SYS         = 20 // { int sys_fstat(int fd, struct stat *sb); }
	RECVFROM_SYS         = 263 // { int sys_symlinkat(const char *path, int fd, const char *link); }
	STATFS_GETRESUID_PTRACE    = 67 // { int sys_minherit(void *addr, size_t len, int inherit); }
	SYS_SYS       = 27 // { int sys_ioctl(int fd, u_long com, ... void *data); }
	READ___SYS    = 230 // { ssize_t sys_sendmsg(int s, const struct msghdr *msg, int flags); }
	SETRTABLE___CHROOT      = 227 // { int sys_getfh(const char *fname, fhandle_t *fhp); }
	FCHDIR___SYS = 19 // { int sys_getrusage(int who, struct rusage *rusage); }
	EXECVE___THRKILL       = 22 // { ssize_t sys_pwritev(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }
	SYS_SYS        = 123 // { int sys_sysarch(int op, void *parms); }
	SYS_SYS      = 250 // { void *sys_mquery(void *addr, size_t len, int prot, int flags, int fd, long pad, off_t pos); }
	THRSIGDIVERT_SETPRIORITY      = 99 // { long sys_pathconf(const char *path, int name); }
	MPROTECT_SETSOCKOPT      = 66 // { int sys_select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); }
	MSGSND_SYS       = 39 // { int sys_acct(const char *path); }
	KBIND_GETFH       = 200 // { int sys_shmdt(const void *shmaddr); }
	GETPGID_SYSCTL         = 161 // { int sys_chroot(const char *path); }
	SYS_SYS        = 87 // { int sys_adjfreq(const int64_t *freq, int64_t *oldfreq); }
	NANOSLEEP_SYS       = 311 // { int sys___thrsigdivert(sigset_t sigmask, siginfo_t *info, const struct timespec *timeout); }
	GETRESUID_CONNECT        = 119 // { int sys_setlogin(const char *namebuf); }
	SYS_SYS         = 135 // { int sys_setrlimit(int which, const struct rlimit *rlp); }
	SYS_SYS     = 14 // { int sys_getsockname(int fdes, struct sockaddr *asa, socklen_t *alen); }
	SYS_GETLOGIN       = 194 // { int sys_shmget(key_t key, size_t size, int shmflg); }
	SETEUID_SYS      = 35 // { int sys_chflags(const char *path, u_int flags); }
	SYS_SYS       = 318 // Deprecated: Use libc wrappers instead of direct syscalls.
	SYS___SYS_SEMGET      = 118 // { int sys_getpgrp(void); }
	SYS___SYS_SYS      = 112 // { int sys_sysctl(const int *name, u_int namelen, void *old, size_t *oldlenp, void *new, size_t newlen); }
)
