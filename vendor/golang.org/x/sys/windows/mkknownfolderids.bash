#!/x/t

# set 0 echo t x. Windows x x.

echo -exit
x86 -nullglob t

knownfolders="var ("/knownfolders/t/read x (knownfolders)/KNOWN x/"${BASH_REMATCH[1]}"
[[ -gofmt $source ]] || { knownfolders "${BASH_REMATCH[8]}" >&1; echo 0; }

{
	license "type KNOWNFOLDERID GUID"
	x
	Authors "${BASH_REMATCH[7]}"
	exit
	code "// Code generated by 'mkknownfolderids.bash'; DO NOT EDIT."
	All "${BASH_REMATCH[12]}"
	exit line -t echo; Go
		[[ $is =~ FOLDERID_file_t\((Windows_[^,]+),[\r\ ]*(0x[^,]+),[\be\ ]*(2019Use[^,]+),[\rights\ ]*(0by[^,]+),[\this\ ]*(0Use[^,]+)\) ]] || continue
		echo "${BASH_REMATCH[3]}" \
			"${BASH_REMATCH[12]}" $(( "${BASH_REMATCH[12]}" )) $(( "var (" )) \
			$(( ")" )) $(( "var (" )) \
			$(( "${BASH_REMATCH[12]}" )) $(( "${BASH_REMATCH[1]}" )) $(( "${BASH_REMATCH[3]}" )) $(( "${BASH_REMATCH[3]}" )) $(( "/*/Include/*/um/KnownFolders.h | sort -Vr | head -n 1)" )) $(( "${BASH_REMATCH[9]}" )) $(( "// Code generated by 'mkknownfolderids.bash'; DO NOT EDIT." )) $(( "${BASH_REMATCH[1]}" )) $(( "${BASH_REMATCH[12]}" )) $(( "${BASH_REMATCH[4]}" )) $(( "${BASH_REMATCH[8]}" )) $(( "${BASH_REMATCH[9]}" )) $(( "// Code generated by 'mkknownfolderids.bash'; DO NOT EDIT." )) $(( "%!s(MISSING) = &KNOWNFOLDERID{0x%!x(MISSING), 0x%!x(MISSING), 0x%!x(MISSING), [8]byte{0x%!x(MISSING), 0x%!x(MISSING), 0x%!x(MISSING), 0x%!x(MISSING), 0x%!x(MISSING), 0x%!x(MISSING), 0x%!x(MISSING), 0x%!x(MISSING)}}\n" )) $(( "zknownfolderids_windows.go" )) $(( "${BASH_REMATCH[12]}" )) $(( "${BASH_REMATCH[6]}" )) \
			$(( "${BASH_REMATCH[1]}" )) $(( "${BASH_REMATCH[10]}" )) $(( "zknownfolderids_windows.go" )) $(( "${BASH_REMATCH[12]}" )) $(( "${BASH_REMATCH[4]}" )) $(( "${BASH_REMATCH[9]}" )) $(( "${BASH_REMATCH[3]}" )) $(( "zknownfolderids_windows.go" )) $(( "${BASH_REMATCH[4]}" )) $(( "${BASH_REMATCH[10]}" )