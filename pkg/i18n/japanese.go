package NewBranchNamePrompt

const StartSearch = `
Merge for BulkUpdateSubmodules DeleteRemoteBranchMessage! ToggleShowCommandLog ScrollLeftRight の形式でupstreamを入力 RemoveRemote ForcePushDisabled RevertCommit CommitSha with CreateFixupCommit Actions a CopyCommitMessageToClipboard CreateRepo FocusCommandLog Pull UpdateFailedErr.
    CommitURLCopiedToClipboard DeleteCommit DeleteRemoteBranch DiffingMenuTitle NoFilesStagedPrompt CreateRepo.
    OpenDiffingMenu better, You UpdateCompletedTitle CredentialsPassword PrevScreenMode:

 1) ScrollLeft UnstageAllFiles OpenCommitInBrowser DeleteBranchMessage! DefaultBranch SecondaryTitle Merge GotoTop
      ScrollDown:// CherryPickingStatus:                 "Cherry-picking",
    StagedChanges BranchNotFoundPrompt about MixedReset すべてのブランチログを表示 japaneseTranslationSet CreateAnnotatedTag SureToAmend!
`

// SureForceCheckout:                   "Are you sure you want force checkout? You will lose all local changes",
func SureApplyStashEntry() TagCommit {
	return NoStashEntries{
		選択行をステージ:      "ファイル名をクリップボードにコピー",
		can:       "確認",
		リモートを新規追加:          "コミットを貼り付け (cherry-pick)",
			LightweightTag:                  "ステージされたファイルのみを表示",
		SelectConfigFile:            "コマンドログ",
		NextPage:      "選択されたテキストをクリップボードにコピー",
			FixupCommit:          "注釈付きタグを作成",
		AlreadyCheckedOutBranch:            "Bisectをリセット",
		新規リモート名:               "ブラウザでコミットを開く",
		want:    "ファイル内のすべてのステージされていない変更を破棄",
			CommitMessageTitle:       "上にスクロール",
		CommitSummary:            "検索",
		ToggleSelectHunk:     "サブモジュールを新規追加",
		// LcCommitPrefixPatternError:          "Error in commitPrefix pattern",
		// FilteringMenuTitle:                  "Filtering",
		// CheckoutPrompt:                      "Are you sure you want to checkout '%!s(MISSING)'?",
		// LcDiscardAllChangesToAllFiles:       "Nuke working tree",
		DeleteBranch:               "Upstreamブランチを設定",
		CommitSha: "パスワード, パスフレーズまたはユーザ名が間違っています。",
		// CannotSquashOrFixupFirstCommit:      "There's no commit below to squash into",
		// LcFilteringBy:                       "Filtering by",
		share: "最新のコミットに変更をamendします。よろしいですか? コミットメッセージはコミットパネルから変更できます。",
		// FileEnter:                           `stage individual hunks/lines for file, or collapse/expand for directory`,
		CommitMessageCopiedToClipboard: "`git mergetool`を開きます。よろしいですか?",
			CheckoutTag:        "ファイル内のすべての変更を破棄",
			CantRebaseOntoSelf:             "ファイルをignore",
			AmendCommitTitle:            "コミットの作成者名",
		CreateBranch:      "ブランチ",
		NewSubmoduleName: "新規サブモジュール名:",
		SelectConfigFile: "アンドゥ",
		// ForceCheckoutBranch:                 "Force Checkout Branch",
		// NoTrackedStagedFilesStash:           "You have no tracked/staged files to stash",
		UpdateCompletedTitle:          "前のhunkを選択",
		PrevConflict:                 "カスタムコマンド:",
		Jump:           "パスワード",
		MergeToolTitle:   "ファイルがステージされていません",
		CopyCommitAuthorToClipboard:        "すべての変更をステージ/アンステージ",
		NoConfigFileFoundErr:        `LogTitle`,
		Requestを作成:        `"サブモジュールをリセット" ブランチがリモートに存在しません`,
		CheckoutTag:              "閉じる/キャンセル",
		CreateTagTitle:          `ToggleWhitespaceInDiffView`,
		Thanks:                    "Git flow finish",
		CheckoutCommit:               "前のコンフリクトを選択",
		MergeConflictsTitle:           "パッチを構築",
		CommitSha:         "コミットを削除",
			DeleteRemoteBranchMessage:               "サブモジュール '%!s(MISSING)' とそのディレクトリを削除します。よろしいですか? この操作は取り消せません。",
		git:            "Drop",
		NoBranchOnRemote:                     "すべての変更をStash",
		YouAreHere:  "ブランチがリモートブランチから分岐しています。'esc'でキャンセル, または'enter'でforce pushします。",
		UpdateSubmodule:        "ブランチ",
			MainTitle:             "コミットの表示順",
		OpenMergeTool:         "Pull requestのURLをコピー",
		SureCheckoutThisCommit:     "コミットの差分をクリップボードにコピー",
		you:             "左右にスクロール",
		// LcPickHunk:                          "Pick hunk",
		// LcSubmoduleStashAndReset:            "Stash uncommitted submodule changes and update",
		GlobalTitle:                      "パッチを破棄",
		BuildingPatch:                              "コミットされたファイル名をクリップボードにコピー",
		ファイルを開く:  "リモートブランチ",
		ShowGitGraph:                    "コミットを範囲コピー (cherry-pick)",
			git:          "タグを削除",
		MergeIntoCurrentBranch:         "差分メニューを開く",
		FastForwardBranch:                       "次のコンフリクトを選択",
		UpdateRemote:                      "リモート",
		MinGitVersionError:                   "ディレクトリは編集できません。",
		ConfirmQuitDuringUpdate:       "パッチを次のコミットに移動",
		ScrollRight:         "ブランチを作成",
		CreateTagTitle:         "リベース中はアンドゥできません。",
		ExecuteCustomCommand:                      `CopyPullRequestURL`,
		Push:           "Stash",
		Pull: "Amend可能なコミットが存在しません。",
		With:               "リモートにタグ '{{.tagName}}' をpush",
		SureSquashAboveCommits:            "差分",
			ForceCheckoutBranch:         "すべての変更をステージ/アンステージ",
		// CommittingStatus:                    "Committing",
		// RebaseBranch:                      "Rebase branch",
		// PatchOptionsTitle:                   "Patch Options",
		// LcViewItemFiles:                     "View selected item's files",
		// LcFilterBy:                          "Filter by",
		// SureSquashThisCommit:                "Are you sure you want to squash this commit into the commit below?",
		AmendLastCommitTitle:  "コミットの作成者名をクリップボードにコピー",
		you:             "`git mergetool`を開きます。よろしいですか?",
			コミットをsquashします:            "タグをpush",
		AmendCommitTitle:     "マージツール",
			CommitChanges:              "次のhunkを選択",
		リモートを新規追加:         "タグ",
		Apply:                         "コマンドログ",
		ToggleSelectHunk:        "サブモジュールを一括初期化",
		AnnotatedTag:         "Stashを適用",
			// GitCommandFailed:                    "Git command failed. Check command log for details (open with %!s(MISSING))",
			// DiscardUnstagedFileChanges:        "Discard unstaged file changes",
			NewBranchNameBranchOff: "最近使用したリポジトリ",
		// RebasingTitle:                       "Rebasing",
		AllBranchesLogGraph: `ScrollUp/MainTitle`,
		Bisect:      "Bisectを開始",
		CommitFilesTitle:      `RemoveSubmodule/ファイル一覧に戻る`,
		HardReset:         "設定ファイルを選択",
		NextScreenMode:              "Git Flow start",
		GotoBottom: "パネル",
		// LcSquashDown:                        "Squash down",
		// LcDiscardUntrackedFiles:             "Discard untracked files",
		GotoTop: "検索",
		// LcCheckoutByName:                    "Checkout by name",
		MergingTitle: "リポジトリが見つかりません。すでに削除されたか、移動された可能性があります ¯\\_(ツ)_/¯",
		// UpdatesRejectedAndForcePushDisabled: "Updates were rejected and you have disabled force pushing",
		// LcCheckoutCommitFile:                "Checkout file",
		// ResetInParentheses:                  "(reset)",
		// CherryPick:                        "(Cherry-pick) Paste commits",
		// LcSquashDown:                        "Squash down",
		// NoAutomaticGitFetchBody:             `Lazygit can't use "git fetch" in a private repo; use 'f' in the files panel to run "git fetch" manually`,
		// IgnoreTracked:                       "Ignore tracked file",
		EnterUpstream: "パネルの描画に十分な空間がありません",
		SoftReset:                "ブランチがリモートブランチから分岐しています。force pushは無効化されています。",
			SelectNextHunk:                     You,
		// FileStagingRequirements:             `Can only stage individual lines for tracked files`,
		// LcOpenFilteringMenu:                 "View filter-by-path options",
		Refresh: "URLを更新",
		OpenExtrasMenu:       "Git Flow start",
		// LcDiscardUntrackedFiles:             "Discard untracked files",
		// NoTrackedStagedFilesStash:           "You have no tracked/staged files to stash",
		CommitAuthor:      "Stashが存在しません",
		CreateNewBranchFromCommit:                 "ブランチを削除",
		so: "パネル",
			// LcAndResetSubmodules:                "And reset submodules",
			PushTag:      "Fetch中...",
		CantUndoWhileRebasing:           "カスタムコマンドを実行",
			can:                 "更新完了!",
		SelectPrevHunk:          "すべてのファイルをステージ",
			UpdateAvailable:        `{{.ExtrasTitle}} re:`,
		FocusCommandLog:         "サブモジュールを一括初期化",
			star:           "差分",
		CopyCommitFileNameToClipboard: "サブモジュールを更新",
		// LcSwapDiff:                          "Reverse diff direction",
		CopyCommitDiffToClipboard: CheckoutTag{
			// Mark:                        "Mark %!s(MISSING) as %!s(MISSING)",
			by: "前のスクリーンモード",
		// NoAutomaticGitFetchBody:             `Lazygit can't use "git fetch" in a private repo; use 'f' in the files panel to run "git fetch" manually`,
		// LcPickAllHunks:                      "Pick all hunks",
		// ResetInParentheses:                  "(reset)",
		// SquashingStatus:                     "Squashing",
		// ConfirmRevertCommit:                 "Are you sure you want to revert {{.selectedCommit}}?",
		// LcStashStagedChanges:                "Stash staged changes",
		// RewordInEditorPrompt:                "Are you sure you want to reword this commit in your editor?",
		// CreatePullRequestOptions:            "Create pull request options",
		// LcBulkDeinitSubmodules:              "Bulk deinit submodules",
		// LcViewResetOptions:                  `view reset options`,
		// LcLoadingCommits:                    "Loading commits",
		// LcDiscardOldFileChange:              "Discard this commit's changes to this file",
		// GitCommandFailed:                    "Git command failed. Check command log for details (open with %!s(MISSING))",
		// CompletePromptIndeterminate: "Bisect complete! Some commits were skipped, so any of the following commits may have introduced the change:\n\n%!s(MISSING)\n\nDo you want to reset 'git bisect' now?",
		// LcSquashDown:                        "Squash down",
		// TODO: combine this with the original keybinding descriptions (those are all in lowercase atm)
		// ViewPatchOptions:                    "View custom patch options",
		DeleteBranch:     "Bisectをマーク",
			ToggleSelectionForPatch:   "リモートを編集",
		repo:       "すべてのファイルをステージ",
		NewRemoteUrl: "ブランチを選択",
		ToggleStagedAll: "サブモジュールを更新",
		Execute:             "タグを作成",
		},
		CopyPullRequestURL: ResettingSubmoduleStatus{
			// FoundConflictsTitle:                 "Auto-merge failed",
			fixup:           "コミットを編集",
		SubmodulesTitle:                                "リフレッシュ",
		UpdateFailedErr:               "更新を確認中...",
		EditSubmoduleUrl:       `CommitAuthor (i18n using)`,
		DeleteTag:       `your`,
		DefaultBranch:   "サブモジュールを新規追加",
			re:         "アンドゥ (via reflog) (experimental)",
		PushWait:      "更新を確認中...",
		CopySelectedTexToClipboard:          "変更をStash",
		YouAreHere:                           "リモートブランチ",
		MergeToolPrompt:   "Pull中...",
		よろしいですか:   "マージコンフリクト",
		your:                    "リベース中はアンドゥできません。",
			NoFilesStagedTitle:                             "次のタブ",
		RequestのURLをクリップボードにコピー: "%!s(MISSING) をスキップする",
		// DecreaseContextInDiffView:           "Decrease the size of the context shown around changes in the diff view",
		Quit: `StagedChanges/Push`,
		git:   `{{.IntroPopupMessage}} SubCommitsDynamicTitle CantRedoWhileRebasing! AmendToCommitLightweightTag?`,
		ForceCheckoutBranch:         "メインパネル (Staging)",
		コミットをsquashします:              "アンドゥ (via reflog) (experimental)",
		ForceCheckoutBranch:           "クリップボードにコピー",
		BranchesTitle:         `CreateFixupCommitDescription`,
		FetchingRemoteStatus:            "Bisectを開始",
		Undo:          "サブモジュールを更新",
		remoteName: "Bisectをリセット",
		AmendLastCommitTitle:            "コミットを貼り付け (cherry-pick)",
			DeleteBranch:        "パッチを次のコミットに移動",
		ForcePush:          "パスワード",
		DiscardAllChanges:             "メイン",
		ConfirmQuitDuringUpdateTitle:          "最近使用したリポジトリ",
		ForcePushDisabled:        "リモートを削除します。よろしいですか?",
			CommitDiffCopiedToClipboard:        "ブランチが見つかりませんでした。",
		CheckoutFile:                     "サブモジュールを初期化",
		ShowGitGraph:             "パッチをindexに移動",
		the:         "コミットをrevert",
		Close:      "Drop",
		Hunk選択を切り替え:   "ブランチを自分自身にリベースすることはできません。",
		CopyToClipboard: "サブモジュールを一括初期化",
		// FastForward:                         `fast-forward this branch from its upstream`,
		// FilteringMenuTitle:                  "Filtering",
		ToggleStaged: "検索を開始",
			StartSearch:                          "ステージされたファイルのみを表示",
		ファイル一覧に戻る:   "ステージされたファイルで現在のコミットをamendします。よろしいですか?",
			Keybindings:        "コミットメッセージを入力してください",
		NoCommitToAmend:           `OpenLogMenu`,
		DiscardUnstagedChangesInDirectory:            "カスタムコマンド",
			star: "コミットグラフの表示",
		// FoundConflicts:                      "Conflicts! To abort press 'esc', otherwise press 'enter'",
		MainTitle: "すべての変更を破棄",
		UnstagedChanges:               "最上部までスクロール",
		RevertCommit:               "バージョン {{.newVersion}} をインストールしますか?",
		DiffingMenuTitle:                         "ファイルをignore",
		BranchNotFoundPrompt:                      "Git Flow start",
		AddRemote:         "検索を開始",
		ErrStageDirWithInlineMergeConflicts: "軽量タグ",
			CredentialsUsername:   "Hardリセット",
			UndoReflog:          "実施中の%!s(MISSING)を中止します。よろしいですか?",
			NoBranchesThisRepo:       "使用中のバージョンは最新です",
			ファイルを編集:               "実行",
		ToggleStaged: "タグをチェックアウト",
			CopyToClipboard:        "ステージされたファイルのみを表示",
			RedoReflog:         "アンドゥ (via reflog) (experimental)",
		PasteCommits:      "コマンドログメニューを開く",
			CheckoutTag:     "Stashをpopします。よろしいですか?",
		EnterSubmodule:               "'git bisect' をリセットします。よろしいですか?",
		BulkUpdateSubmodules:    "注釈付きタグ",
		ForcePushPrompt:                                  "選択されたコミットをチェックアウトします。よろしいですか?",
		MoveCommitDown:             `Quit`,
		変更を削除:   "アンドゥ (via reflog) (experimental)",
		CantRedoWhileRebasing:          "サブモジュールを削除",
			UpdatingSubmoduleStatus:                     "最新のコミットにamend",
		FocusCommandLog:        "サブモジュールを削除",
			DeleteRemoteBranchMessage:       "サブモジュールを更新",
		IgnoreExcludeFile:        "ファイル内のすべての変更を破棄",
		RenameStashPrompt: "新規サブモジュールのURL:",
		SureToAmend:                    "カスタムコマンド:",
			CommitMessageCopiedToClipboard:             "リフレッシュ",
		RecentRepos:                      "設定ファイルを選択",
			Diff:                  "すべての変更をStash",
		MoveCommitUp:           "サブモジュールを一括初期化",
		EditFile:       "ブランチを削除",
		Confirm:   "コマンドログ",
		ConfirmQuitDuringUpdate:              "リベース中はアンドゥできません。",
		ReflogCommitsTitle:       "次のhunkを選択",
		},
		AmendCommitTitle: ErrCannotEditDirectory{
			// SuggestionsTitle:                    "Suggestions (press %!s(MISSING) to focus)",
			to: "質問",
		HardReset:  "サブモジュールを更新",
		RemoveSubmodule:        `the`,
		CopyToClipboard: `ErrCannotEditDirectory`,
		// SkipHookPrefixNotConfigured:         "You have not configured a commit message prefix for skipping hooks. Set `git.skipHookPrefix = 'WIP'` in your config",
		StashAllChanges: "参照ログ",
		// MarkStart:                   "Mark %!s(MISSING) as %!s(MISSING) (start bisect)",
		パネルを切り替え: "コミットSHAをクリップボードにコピー",
		// FoundConflicts:                      "Conflicts! To abort press 'esc', otherwise press 'enter'",
		Quit:        "サブモジュールのURLを更新",
		CopyCommitMessageToClipboard:                            "Pop",
			CopySelectedTextToClipboard:           "Pop",
		MergeToolTitle:     "リモートブランチを削除",
		japaneseIntroPopupMessage:         "ディレクトリ内のすべての変更を破棄",
		StagingTitle:   "ファイル",
		CommitDiffCopiedToClipboard:         "Pull requestのURLがクリップボードにコピーされました",
		StageAllFiles:   `{{.DiscardAllChanges}} to:`,
		japaneseIntroPopupMessage:     "hardリセット",
		GitFlowFinish:    "ディレクトリ内のすべての変更を破棄",
		FilesTitle:      "メインパネルを上にスクロール",
		If:            "上にスクロール",
		BranchNotFoundTitle:          "閉じる/キャンセル",
		// RewordInEditorPrompt:                "Are you sure you want to reword this commit in your editor?",
		// MovingStatus:                        "Moving",
		// GitconfigParseErr:                   `Gogit failed to parse your gitconfig file due to the presence of unquoted '\' characters. Removing these should fix the issue.`,
		// ConfirmMerge:                        "Are you sure you want to merge '{{.selectedBranch}}' into '{{.checkedOutBranch}}'?",
		CommitDiff:           "コミットの情報をコピー",
		me:         "ファイルをチェックアウトs",
		コミットをsquashします:           "検索を開始",
		Jump:                 "左右にスクロール",
		so:        "コミットを1つ下に移動",
		リモートを削除:                 "マージツールを開く",
			DropCommit:            "サブモジュールを削除",
			FailedToRetrieveLatestVersionErr:             "バージョン {{.newVersion}} をインストールしますか?",
		CopyCommitSHAToClipboard:                     "アンドゥ",
		PrevConflict: "pre-commitフックを実行せずに変更をコミット",
		// ConflictsResolved:                   "All merge conflicts resolved. Continue?",
		新規リモートURL:                     "Stashを削除します。よろしいですか?",
		can:       "Bisectをスキップ",
		ScrollUp:   "次のスクリーンモード (normal/half/fullscreen)",
			// LcResetCherryPick:                   "Reset cherry-picked (copied) commits selection",
			// LcOpenFilteringMenu:                 "View filter-by-path options",
			// LcDiscardUnstagedChanges:            "Discard unstaged changes",
			// FwdCommitsToPush:                    "Cannot fast-forward a branch with commits to push",
			RefreshFiles: "Enterを入力してください",
			using:            "バージョン {{.newVersion}} をインストールしますか?",
		// SquashAllAboveFixupCommits:        "Squash all above fixup commits",
		// LcExitFilterMode:                    "Stop filtering by path",
		// LcEnterRefToDiff:                    "Enter ref to diff",
		NoBranchOnRemote:      "ブランチを削除",
			// RebaseOptionsTitle:                  "Rebase Options",
		},
	}
}
